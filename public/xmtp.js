(function (factory) {
    typeof define === 'function' && define.amd ? define(factory) :
    factory();
})((function () { 'use strict';

    /******************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __awaiter$6(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __values$1(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values$1 === "function" ? __values$1(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

    var umd = {exports: {}};

    /*! For license information please see index.js.LICENSE.txt */

    (function (module, exports) {
    !function(e,t){module.exports=t();}(commonjsGlobal,(function(){return (()=>{var __webpack_modules__={9656:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.utils=t.schnorr=t.verify=t.signSync=t.sign=t.getSharedSecret=t.recoverPublicKey=t.getPublicKey=t.Signature=t.Point=t.CURVE=void 0;const i=n(r(9159)),o=BigInt(0),s=BigInt(1),a=BigInt(2),l=BigInt(3),u=BigInt(8),c=a**BigInt(256),h={a:o,b:BigInt(7),P:c-a**BigInt(32)-BigInt(977),n:c-BigInt("432420386565659656852420866394968145599"),h:s,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")};function d(e){const{a:t,b:r}=h,n=B(e*e),i=B(n*e);return B(i+t*e+r)}t.CURVE=h;const f=h.a===o;class p{constructor(e,t,r){this.x=e,this.y=t,this.z=r;}static fromAffine(e){if(!(e instanceof y))throw new TypeError("JacobianPoint#fromAffine: expected Point");return new p(e.x,e.y,s)}static toAffineBatch(e){const t=function(e,t=h.P){const r=e.length,n=new Array(r);let i=s;for(let s=0;s<r;s++)e[s]!==o&&(n[s]=i,i=B(i*e[s],t));i=O(i,t);for(let s=r-1;s>=0;s--){if(e[s]===o)continue;const r=B(i*e[s],t);e[s]=B(i*n[s],t),i=r;}return e}(e.map((e=>e.z)));return e.map(((e,r)=>e.toAffine(t[r])))}static normalizeZ(e){return p.toAffineBatch(e).map(p.fromAffine)}equals(e){const t=this,r=e,n=B(t.z*t.z),i=B(t.z*n),o=B(r.z*r.z),s=B(r.z*o);return B(t.x*o)===B(n*r.x)&&B(t.y*s)===B(i*r.y)}negate(){return new p(this.x,B(-this.y),this.z)}double(){const e=this.x,t=this.y,r=this.z,n=B(e**a),i=B(t**a),o=B(i**a),s=B(a*(B(B((e+i)**a))-n-o)),c=B(l*n),h=B(c**a),d=B(h-a*s),f=B(c*(s-d)-u*o),m=B(a*t*r);return new p(d,f,m)}add(e){if(!(e instanceof p))throw new TypeError("JacobianPoint#add: expected JacobianPoint");const t=this.x,r=this.y,n=this.z,i=e.x,s=e.y,l=e.z;if(i===o||s===o)return this;if(t===o||r===o)return e;const u=B(n**a),c=B(l**a),h=B(t*c),d=B(i*u),f=B(r*l*c),m=B(B(s*n)*u),y=B(d-h),g=B(m-f);if(y===o)return g===o?this.double():p.ZERO;const v=B(y**a),b=B(y*v),w=B(h*v),_=B(g**a-b-a*w),S=B(g*(w-_)-f*b),E=B(n*l*y);return new p(_,S,E)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){let t=R(e);if(!f){let e=p.ZERO,r=this;for(;t>o;)t&s&&(e=e.add(r)),r=r.double(),t>>=s;return e}let{k1neg:r,k1:n,k2neg:i,k2:a}=U(t),l=p.ZERO,u=p.ZERO,c=this;for(;n>o||a>o;)n&s&&(l=l.add(c)),a&s&&(u=u.add(c)),c=c.double(),n>>=s,a>>=s;return r&&(l=l.negate()),i&&(u=u.negate()),u=new p(B(u.x*h.beta),u.y,u.z),l.add(u)}precomputeWindow(e){const t=f?128/e+1:256/e+1,r=[];let n=this,i=n;for(let o=0;o<t;o++){i=n,r.push(i);for(let t=1;t<2**(e-1);t++)i=i.add(n),r.push(i);n=i.double();}return r}wNAF(e,t){!t&&this.equals(p.BASE)&&(t=y.BASE);const r=t&&t._WINDOW_SIZE||1;if(256%r)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let n=t&&m.get(t);n||(n=this.precomputeWindow(r),t&&1!==r&&(n=p.normalizeZ(n),m.set(t,n)));let i=p.ZERO,o=p.ZERO;const a=f?128/r+1:256/r+1,l=2**(r-1),u=BigInt(2**r-1),c=2**r,h=BigInt(r);for(let t=0;t<a;t++){const r=t*l;let a=Number(e&u);if(e>>=h,a>l&&(a-=c,e+=s),0===a){let e=n[r];t%2&&(e=e.negate()),o=o.add(e);}else {let e=n[r+Math.abs(a)-1];a<0&&(e=e.negate()),i=i.add(e);}}return {p:i,f:o}}multiply(e,t){let r,n,i=R(e);if(f){let{k1neg:e,k1:o,k2neg:s,k2:a}=U(i),{p:l,f:u}=this.wNAF(o,t),{p:c,f:d}=this.wNAF(a,t);e&&(l=l.negate()),s&&(c=c.negate()),c=new p(B(c.x*h.beta),c.y,c.z),r=l.add(c),n=u.add(d);}else {let{p:e,f:o}=this.wNAF(i,t);r=e,n=o;}return p.normalizeZ([r,n])[0]}toAffine(e=O(this.z)){const t=e**a,r=B(this.x*t),n=B(this.y*t*e);return new y(r,n)}}p.BASE=new p(h.Gx,h.Gy,s),p.ZERO=new p(o,s,o);const m=new WeakMap;class y{constructor(e,t){this.x=e,this.y=t;}_setWindowSize(e){this._WINDOW_SIZE=e,m.delete(this);}static fromCompressedHex(e){const t=32===e.length,r=T(t?e:e.slice(1));if(!j(r))throw new Error("Point is not on curve");let n=function(e){const{P:t}=h,r=BigInt(6),n=BigInt(11),i=BigInt(22),o=BigInt(23),s=BigInt(44),u=BigInt(88),c=e*e*e%t,d=c*c*e%t,f=I(d,l)*d%t,p=I(f,l)*d%t,m=I(p,a)*c%t,y=I(m,n)*m%t,g=I(y,i)*y%t,v=I(g,s)*g%t,b=I(v,u)*v%t,w=I(b,s)*g%t,_=I(w,l)*d%t,S=I(_,o)*y%t,E=I(S,r)*c%t;return I(E,a)}(d(r));const i=(n&s)===s;t?i&&(n=B(-n)):1==(1&e[0])!==i&&(n=B(-n));const o=new y(r,n);return o.assertValidity(),o}static fromUncompressedHex(e){const t=T(e.slice(1,33)),r=T(e.slice(33)),n=new y(t,r);return n.assertValidity(),n}static fromHex(e){const t=N(e),r=t[0];if(32===t.length||33===t.length&&(2===r||3===r))return this.fromCompressedHex(t);if(65===t.length&&4===r)return this.fromUncompressedHex(t);throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${t.length}`)}static fromPrivateKey(e){return y.BASE.multiply(z(e))}static fromSignature(e,t,r){const n=K(e=N(e)),{r:i,s}=G(t);if(0!==r&&1!==r)throw new Error("Cannot recover signature: invalid recovery bit");if(n===o)throw new Error("Cannot recover signature: msgHash cannot be 0");const a=2+(1&r),l=y.fromHex(`0${a}${k(i)}`),u=p.fromAffine(l).multiplyUnsafe(s),c=p.BASE.multiply(n),d=O(i,h.n),f=u.subtract(c).multiplyUnsafe(d).toAffine();return f.assertValidity(),f}toRawBytes(e=!1){return C(this.toHex(e))}toHex(e=!1){const t=k(this.x);return e?`${this.y&s?"03":"02"}${t}`:`04${t}${k(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const e="Point is not on elliptic curve",{x:t,y:r}=this;if(!j(t)||!j(r))throw new Error(e);const n=B(r*r);if(B(n-d(t))!==o)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new y(this.x,B(-this.y))}double(){return p.fromAffine(this).double().toAffine()}add(e){return p.fromAffine(this).add(p.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return p.fromAffine(this).multiply(e,this).toAffine()}}function g(e){return Number.parseInt(e[0],16)>=8?"00"+e:e}function v(e){if(e.length<2||2!==e[0])throw new Error(`Invalid signature integer tag: ${E(e)}`);const t=e[1],r=e.subarray(2,t+2);if(!t||r.length!==t)throw new Error("Invalid signature integer: wrong length");if(0===r[0]&&r[1]<=127)throw new Error("Invalid signature integer: trailing length");return {data:T(r),left:e.subarray(t+2)}}t.Point=y,y.BASE=new y(h.Gx,h.Gy),y.ZERO=new y(o,o);class b{constructor(e,t){this.r=e,this.s=t,this.assertValidity();}static fromCompact(e){const t=_(e),r="Signature.fromCompact";if("string"!=typeof e&&!t)throw new TypeError(`${r}: Expected string or Uint8Array`);const n=t?E(e):e;if(128!==n.length)throw new Error(`${r}: Expected 64-byte hex`);return new b(x(n.slice(0,64)),x(n.slice(64,128)))}static fromDER(e){const t=_(e);if("string"!=typeof e&&!t)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r,s:n}=function(e){if(e.length<2||48!=e[0])throw new Error(`Invalid signature tag: ${E(e)}`);if(e[1]!==e.length-2)throw new Error("Invalid signature: incorrect length");const{data:t,left:r}=v(e.subarray(2)),{data:n,left:i}=v(r);if(i.length)throw new Error(`Invalid signature: left bytes after parsing: ${E(i)}`);return {r:t,s:n}}(t?e:C(e));return new b(r,n)}static fromHex(e){return this.fromDER(e)}assertValidity(){const{r:e,s:t}=this;if(!L(e))throw new Error("Invalid Signature: r must be 0 < r < n");if(!L(t))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const e=h.n>>s;return this.s>e}normalizeS(){return this.hasHighS()?new b(this.r,h.n-this.s):this}toDERRawBytes(e=!1){return C(this.toDERHex(e))}toDERHex(e=!1){const t=g(P(this.s));if(e)return t;const r=g(P(this.r)),n=P(r.length/2),i=P(t.length/2);return `30${P(r.length/2+t.length/2+4)}02${n}${r}02${i}${t}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return C(this.toCompactHex())}toCompactHex(){return k(this.r)+k(this.s)}}function w(...e){if(!e.every(_))throw new Error("Uint8Array list expected");if(1===e.length)return e[0];const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const i=e[t];r.set(i,n),n+=i.length;}return r}function _(e){return e instanceof Uint8Array}t.Signature=b;const S=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function E(e){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");let t="";for(let r=0;r<e.length;r++)t+=S[e[r]];return t}function k(e){if(e>c)throw new Error("Expected number < 2^256");return e.toString(16).padStart(64,"0")}function A(e){return C(k(e))}function P(e){const t=e.toString(16);return 1&t.length?`0${t}`:t}function x(e){if("string"!=typeof e)throw new TypeError("hexToNumber: expected string, got "+typeof e);return BigInt(`0x${e}`)}function C(e){if("string"!=typeof e)throw new TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+e.length);const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r,i=e.slice(n,n+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error("Invalid byte sequence");t[r]=o;}return t}function T(e){return x(E(e))}function N(e){return e instanceof Uint8Array?Uint8Array.from(e):C(e)}function R(e){if("number"==typeof e&&Number.isSafeInteger(e)&&e>0)return BigInt(e);if("bigint"==typeof e&&L(e))return e;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function B(e,t=h.P){const r=e%t;return r>=0?r:t+r}function I(e,t){const{P:r}=h;let n=e;for(;t-- >o;)n*=n,n%=r;return n}function O(e,t=h.P){if(e===o||t<=o)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let r=B(e,t),n=t,i=o,l=s;for(;r!==o;){const e=n/r,t=n%r,o=i-l*e;n=r,r=t,i=l,l=o;}if(n!==s)throw new Error("invert: does not exist");return B(i,t)}const M=(e,t)=>(e+t/a)/t,D=a**BigInt(128);function U(e){const{n:t}=h,r=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-s*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),o=r,a=M(o*e,t),l=M(-n*e,t);let u=B(e-a*r-l*i,t),c=B(-a*n-l*o,t);const d=u>D,f=c>D;if(d&&(u=t-u),f&&(c=t-c),u>D||c>D)throw new Error("splitScalarEndo: Endomorphism failed");return {k1neg:d,k1:u,k2neg:f,k2:c}}function K(e){const{n:t}=h,r=8*e.length-256;let n=T(e);return r>0&&(n>>=BigInt(r)),n>=t&&(n-=t),n}class F{constructor(){this.v=new Uint8Array(32).fill(1),this.k=new Uint8Array(32).fill(0),this.counter=0;}hmac(...e){return t.utils.hmacSha256(this.k,...e)}hmacSync(...e){if("function"!=typeof t.utils.hmacSha256Sync)throw new Error("utils.hmacSha256Sync is undefined, you need to set it");const r=t.utils.hmacSha256Sync(this.k,...e);if(r instanceof Promise)throw new Error("To use sync sign(), ensure utils.hmacSha256 is sync");return r}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1;}async reseed(e=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),e),this.v=await this.hmac(this.v),0!==e.length&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),e),this.v=await this.hmac(this.v));}reseedSync(e=new Uint8Array){this.k=this.hmacSync(this.v,Uint8Array.from([0]),e),this.v=this.hmacSync(this.v),0!==e.length&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),e),this.v=this.hmacSync(this.v));}async generate(){return this.incr(),this.v=await this.hmac(this.v),this.v}generateSync(){return this.incr(),this.v=this.hmacSync(this.v),this.v}}function L(e){return o<e&&e<h.n}function j(e){return o<e&&e<h.P}function q(e,t,r){const n=T(e);if(!L(n))return;const{n:i}=h,a=y.BASE.multiply(n),l=B(a.x,i);if(l===o)return;const u=B(O(n,i)*B(t+r*l,i),i);if(u===o)return;const c=new b(l,u);return {sig:c,recovery:(a.x===c.r?0:2)|Number(a.y&s)}}function z(e){let t;if("bigint"==typeof e)t=e;else if("number"==typeof e&&Number.isSafeInteger(e)&&e>0)t=BigInt(e);else if("string"==typeof e){if(64!==e.length)throw new Error("Expected 32 bytes of private key");t=x(e);}else {if(!_(e))throw new TypeError("Expected valid private key");if(32!==e.length)throw new Error("Expected 32 bytes of private key");t=T(e);}if(!L(t))throw new Error("Expected private key: 0 < key < n");return t}function W(e){return e instanceof y?(e.assertValidity(),e):y.fromHex(e)}function G(e){if(e instanceof b)return e.assertValidity(),e;try{return b.fromDER(e)}catch(t){return b.fromCompact(e)}}function V(e){const t=_(e),r="string"==typeof e,n=(t||r)&&e.length;return t?33===n||65===n:r?66===n||130===n:e instanceof y}function H(e){return T(e.length>32?e.slice(0,32):e)}function J(e){const t=H(e),r=B(t,h.n);return $(r<o?t:r)}function $(e){if("bigint"!=typeof e)throw new Error("Expected bigint");return C(k(e))}function Z(e,r,n){if(null==e)throw new Error(`sign: expected valid message hash, not "${e}"`);const i=N(e),o=z(r),s=[$(o),J(i)];if(null!=n){!0===n&&(n=t.utils.randomBytes(32));const e=N(n);if(32!==e.length)throw new Error("sign: Expected 32 bytes of extra data");s.push(e);}return {seed:w(...s),m:H(i),d:o}}function X(e,t){let{sig:r,recovery:n}=e;const{canonical:i,der:o,recovered:s}=Object.assign({canonical:!0,der:!0},t);i&&r.hasHighS()&&(r=r.normalizeS(),n^=1);const a=o?r.toDERRawBytes():r.toCompactRawBytes();return s?[a,n]:a}t.getPublicKey=function(e,t=!1){return y.fromPrivateKey(e).toRawBytes(t)},t.recoverPublicKey=function(e,t,r){return y.fromSignature(e,t,r).toRawBytes()},t.getSharedSecret=function(e,t,r=!1){if(V(e))throw new TypeError("getSharedSecret: first arg must be private key");if(!V(t))throw new TypeError("getSharedSecret: second arg must be public key");const n=W(t);return n.assertValidity(),n.multiply(z(e)).toRawBytes(r)},t.sign=async function(e,t,r={}){const{seed:n,m:i,d:o}=Z(e,t,r.extraEntropy);let s;const a=new F;for(await a.reseed(n);!(s=q(await a.generate(),i,o));)await a.reseed();return X(s,r)},t.signSync=function(e,t,r={}){const{seed:n,m:i,d:o}=Z(e,t,r.extraEntropy);let s;const a=new F;for(a.reseedSync(n);!(s=q(a.generateSync(),i,o));)a.reseedSync();return X(s,r)};const Q={strict:!0};async function Y(e,...r){const n=new Uint8Array(e.split("").map((e=>e.charCodeAt(0)))),i=await t.utils.sha256(n);return T(await t.utils.sha256(w(i,i,...r)))}async function ee(e,t,r){const n=A(e);return B(await Y("BIP0340/challenge",n,t.toRawX(),r),h.n)}function te(e){return B(e.y,a)===o}t.verify=function(e,t,r,n=Q){let i;try{i=G(e),t=N(t);}catch(e){return !1}const{r:s,s:a}=i;if(n.strict&&i.hasHighS())return !1;const l=K(t);if(l===o)return !1;let u;try{u=p.fromAffine(W(r));}catch(e){return !1}const{n:c}=h,d=O(a,c),f=B(l*d,c),m=B(s*d,c),y=p.BASE.multiply(f),g=u.multiplyUnsafe(m);return B(y.add(g).toAffine().x,c)===s};class re{constructor(e,t){if(this.r=e,this.s=t,!j(e)||!L(t))throw new Error("Invalid signature")}static fromHex(e){const t=N(e);if(64!==t.length)throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${t.length}`);const r=T(t.slice(0,32)),n=T(t.slice(32,64));return new re(r,n)}toHex(){return k(this.r)+k(this.s)}toRawBytes(){return C(this.toHex())}}async function ne(e,t,r){const n=e instanceof re?e:re.fromHex(e),i=N(t),o=W(r),s=await ee(n.r,o,i),a=y.fromPrivateKey(n.s),l=o.multiply(s),u=a.subtract(l);return !(u.equals(y.BASE)||!te(u)||u.x!==n.r)}t.schnorr={Signature:re,getPublicKey:function(e){return y.fromPrivateKey(e).toRawX()},sign:async function(e,r,n=t.utils.randomBytes()){if(null==e)throw new TypeError(`sign: Expected valid message, not "${e}"`);const{n:i}=h,s=N(e),a=z(r),l=N(n);if(32!==l.length)throw new TypeError("sign: Expected 32 bytes of aux randomness");const u=y.fromPrivateKey(a),c=te(u)?a:i-a,d=c^await Y("BIP0340/aux",l),f=B(await Y("BIP0340/nonce",A(d),u.toRawX(),s),i);if(f===o)throw new Error("sign: Creation of signature failed. k is zero");const p=y.fromPrivateKey(f),m=te(p)?f:i-f,g=await ee(p.x,u,s),v=new re(p.x,B(m+g*c,i));if(!await ne(v.toRawBytes(),s,u.toRawX()))throw new Error("sign: Invalid signature produced");return v.toRawBytes()},verify:ne},y.BASE._setWindowSize(8);const ie={node:i.default,web:"object"==typeof self&&"crypto"in self?self.crypto:void 0};t.utils={isValidPrivateKey(e){try{return z(e),!0}catch(e){return !1}},randomBytes:(e=32)=>{if(ie.web)return ie.web.getRandomValues(new Uint8Array(e));if(ie.node){const{randomBytes:t}=ie.node;return Uint8Array.from(t(e))}throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>{let e=8;for(;e--;){const e=t.utils.randomBytes(32),r=T(e);if(L(r)&&r!==s)return e}throw new Error("Valid private key was not found in 8 iterations. PRNG is broken")},bytesToHex:E,mod:B,sha256:async e=>{if(ie.web){const t=await ie.web.subtle.digest("SHA-256",e.buffer);return new Uint8Array(t)}if(ie.node){const{createHash:t}=ie.node;return Uint8Array.from(t("sha256").update(e).digest())}throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(e,...t)=>{if(ie.web){const r=await ie.web.subtle.importKey("raw",e,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),n=w(...t),i=await ie.web.subtle.sign("HMAC",r,n);return new Uint8Array(i)}if(ie.node){const{createHmac:r}=ie.node,n=r("sha256",e);return t.forEach((e=>n.update(e))),Uint8Array.from(n.digest())}throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,precompute(e=8,t=y.BASE){const r=t===y.BASE?t:new y(t.x,t.y);return r._setWindowSize(e),r.multiply(l),r}};},4537:e=>{e.exports=function(e,t){for(var r=new Array(arguments.length-1),n=0,i=2,o=!0;i<arguments.length;)r[n++]=arguments[i++];return new Promise((function(i,s){r[n]=function(e){if(o)if(o=!1,e)s(e);else {for(var t=new Array(arguments.length-1),r=0;r<t.length;)t[r++]=arguments[r];i.apply(null,t);}};try{e.apply(t||null,r);}catch(e){o&&(o=!1,s(e));}}))};},7419:(e,t)=>{var r=t;r.length=function(e){var t=e.length;if(!t)return 0;for(var r=0;--t%4>1&&"="===e.charAt(t);)++r;return Math.ceil(3*e.length)/4-r};for(var n=new Array(64),i=new Array(123),o=0;o<64;)i[n[o]=o<26?o+65:o<52?o+71:o<62?o-4:o-59|43]=o++;r.encode=function(e,t,r){for(var i,o=null,s=[],a=0,l=0;t<r;){var u=e[t++];switch(l){case 0:s[a++]=n[u>>2],i=(3&u)<<4,l=1;break;case 1:s[a++]=n[i|u>>4],i=(15&u)<<2,l=2;break;case 2:s[a++]=n[i|u>>6],s[a++]=n[63&u],l=0;}a>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,s)),a=0);}return l&&(s[a++]=n[i],s[a++]=61,1===l&&(s[a++]=61)),o?(a&&o.push(String.fromCharCode.apply(String,s.slice(0,a))),o.join("")):String.fromCharCode.apply(String,s.slice(0,a))};var s="invalid encoding";r.decode=function(e,t,r){for(var n,o=r,a=0,l=0;l<e.length;){var u=e.charCodeAt(l++);if(61===u&&a>1)break;if(void 0===(u=i[u]))throw Error(s);switch(a){case 0:n=u,a=1;break;case 1:t[r++]=n<<2|(48&u)>>4,n=u,a=2;break;case 2:t[r++]=(15&n)<<4|(60&u)>>2,n=u,a=3;break;case 3:t[r++]=(3&n)<<6|u,a=0;}}if(1===a)throw Error(s);return r-o},r.test=function(e){return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)};},9211:e=>{function t(){this._listeners={};}e.exports=t,t.prototype.on=function(e,t,r){return (this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:r||this}),this},t.prototype.off=function(e,t){if(void 0===e)this._listeners={};else if(void 0===t)this._listeners[e]=[];else for(var r=this._listeners[e],n=0;n<r.length;)r[n].fn===t?r.splice(n,1):++n;return this},t.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var r=[],n=1;n<arguments.length;)r.push(arguments[n++]);for(n=0;n<t.length;)t[n].fn.apply(t[n++].ctx,r);}return this};},945:e=>{function t(e){return "undefined"!=typeof Float32Array?function(){var t=new Float32Array([-0]),r=new Uint8Array(t.buffer),n=128===r[3];function i(e,n,i){t[0]=e,n[i]=r[0],n[i+1]=r[1],n[i+2]=r[2],n[i+3]=r[3];}function o(e,n,i){t[0]=e,n[i]=r[3],n[i+1]=r[2],n[i+2]=r[1],n[i+3]=r[0];}function s(e,n){return r[0]=e[n],r[1]=e[n+1],r[2]=e[n+2],r[3]=e[n+3],t[0]}function a(e,n){return r[3]=e[n],r[2]=e[n+1],r[1]=e[n+2],r[0]=e[n+3],t[0]}e.writeFloatLE=n?i:o,e.writeFloatBE=n?o:i,e.readFloatLE=n?s:a,e.readFloatBE=n?a:s;}():function(){function t(e,t,r,n){var i=t<0?1:0;if(i&&(t=-t),0===t)e(1/t>0?0:2147483648,r,n);else if(isNaN(t))e(2143289344,r,n);else if(t>34028234663852886e22)e((i<<31|2139095040)>>>0,r,n);else if(t<11754943508222875e-54)e((i<<31|Math.round(t/1401298464324817e-60))>>>0,r,n);else {var o=Math.floor(Math.log(t)/Math.LN2);e((i<<31|o+127<<23|8388607&Math.round(t*Math.pow(2,-o)*8388608))>>>0,r,n);}}function s(e,t,r){var n=e(t,r),i=2*(n>>31)+1,o=n>>>23&255,s=8388607&n;return 255===o?s?NaN:i*(1/0):0===o?1401298464324817e-60*i*s:i*Math.pow(2,o-150)*(s+8388608)}e.writeFloatLE=t.bind(null,r),e.writeFloatBE=t.bind(null,n),e.readFloatLE=s.bind(null,i),e.readFloatBE=s.bind(null,o);}(),"undefined"!=typeof Float64Array?function(){var t=new Float64Array([-0]),r=new Uint8Array(t.buffer),n=128===r[7];function i(e,n,i){t[0]=e,n[i]=r[0],n[i+1]=r[1],n[i+2]=r[2],n[i+3]=r[3],n[i+4]=r[4],n[i+5]=r[5],n[i+6]=r[6],n[i+7]=r[7];}function o(e,n,i){t[0]=e,n[i]=r[7],n[i+1]=r[6],n[i+2]=r[5],n[i+3]=r[4],n[i+4]=r[3],n[i+5]=r[2],n[i+6]=r[1],n[i+7]=r[0];}function s(e,n){return r[0]=e[n],r[1]=e[n+1],r[2]=e[n+2],r[3]=e[n+3],r[4]=e[n+4],r[5]=e[n+5],r[6]=e[n+6],r[7]=e[n+7],t[0]}function a(e,n){return r[7]=e[n],r[6]=e[n+1],r[5]=e[n+2],r[4]=e[n+3],r[3]=e[n+4],r[2]=e[n+5],r[1]=e[n+6],r[0]=e[n+7],t[0]}e.writeDoubleLE=n?i:o,e.writeDoubleBE=n?o:i,e.readDoubleLE=n?s:a,e.readDoubleBE=n?a:s;}():function(){function t(e,t,r,n,i,o){var s=n<0?1:0;if(s&&(n=-n),0===n)e(0,i,o+t),e(1/n>0?0:2147483648,i,o+r);else if(isNaN(n))e(0,i,o+t),e(2146959360,i,o+r);else if(n>17976931348623157e292)e(0,i,o+t),e((s<<31|2146435072)>>>0,i,o+r);else {var a;if(n<22250738585072014e-324)e((a=n/5e-324)>>>0,i,o+t),e((s<<31|a/4294967296)>>>0,i,o+r);else {var l=Math.floor(Math.log(n)/Math.LN2);1024===l&&(l=1023),e(4503599627370496*(a=n*Math.pow(2,-l))>>>0,i,o+t),e((s<<31|l+1023<<20|1048576*a&1048575)>>>0,i,o+r);}}}function s(e,t,r,n,i){var o=e(n,i+t),s=e(n,i+r),a=2*(s>>31)+1,l=s>>>20&2047,u=4294967296*(1048575&s)+o;return 2047===l?u?NaN:a*(1/0):0===l?5e-324*a*u:a*Math.pow(2,l-1075)*(u+4503599627370496)}e.writeDoubleLE=t.bind(null,r,0,4),e.writeDoubleBE=t.bind(null,n,4,0),e.readDoubleLE=s.bind(null,i,0,4),e.readDoubleBE=s.bind(null,o,4,0);}(),e}function r(e,t,r){t[r]=255&e,t[r+1]=e>>>8&255,t[r+2]=e>>>16&255,t[r+3]=e>>>24;}function n(e,t,r){t[r]=e>>>24,t[r+1]=e>>>16&255,t[r+2]=e>>>8&255,t[r+3]=255&e;}function i(e,t){return (e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function o(e,t){return (e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}e.exports=t(t);},7199:module=>{function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(e){}return null}module.exports=inquire;},6662:e=>{e.exports=function(e,t,r){var n=r||8192,i=n>>>1,o=null,s=n;return function(r){if(r<1||r>i)return e(r);s+r>n&&(o=e(n),s=0);var a=t.call(o,s,s+=r);return 7&s&&(s=1+(7|s)),a}};},4997:(e,t)=>{var r=t;r.length=function(e){for(var t=0,r=0,n=0;n<e.length;++n)(r=e.charCodeAt(n))<128?t+=1:r<2048?t+=2:55296==(64512&r)&&56320==(64512&e.charCodeAt(n+1))?(++n,t+=4):t+=3;return t},r.read=function(e,t,r){if(r-t<1)return "";for(var n,i=null,o=[],s=0;t<r;)(n=e[t++])<128?o[s++]=n:n>191&&n<224?o[s++]=(31&n)<<6|63&e[t++]:n>239&&n<365?(n=((7&n)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,o[s++]=55296+(n>>10),o[s++]=56320+(1023&n)):o[s++]=(15&n)<<12|(63&e[t++])<<6|63&e[t++],s>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,o)),s=0);return i?(s&&i.push(String.fromCharCode.apply(String,o.slice(0,s))),i.join("")):String.fromCharCode.apply(String,o.slice(0,s))},r.write=function(e,t,r){for(var n,i,o=r,s=0;s<e.length;++s)(n=e.charCodeAt(s))<128?t[r++]=n:n<2048?(t[r++]=n>>6|192,t[r++]=63&n|128):55296==(64512&n)&&56320==(64512&(i=e.charCodeAt(s+1)))?(n=65536+((1023&n)<<10)+(1023&i),++s,t[r++]=n>>18|240,t[r++]=n>>12&63|128,t[r++]=n>>6&63|128,t[r++]=63&n|128):(t[r++]=n>>12|224,t[r++]=n>>6&63|128,t[r++]=63&n|128);return r-o};},3052:(__unused_webpack_module,__unused_webpack_exports,__webpack_require__)=>{(function(){const state_=Symbol("state_"),storedError_=Symbol("storedError_");function isInteger(e){if(!isFinite(e))return !1;const t=Math.abs(e);return Math.floor(t)===t}function isFiniteNonNegativeNumber(e){return !("number"!=typeof e||!isFinite(e))&&e>=0}function isAbortSignal(e){if("object"!=typeof e||null===e)return !1;try{return Object.getOwnPropertyDescriptor(AbortSignal.prototype,"aborted").get.call(e),!0}catch(e){return !1}}function invokeOrNoop(e,t,r){const n=e[t];if(void 0!==n)return Function.prototype.apply.call(n,e,r)}function cloneArrayBuffer(e,t,r,n){return e.slice(t,t+r)}function transferArrayBuffer(e){return e.slice(0)}function copyDataBlockBytes(e,t,r,n,i){new Uint8Array(e,t,i).set(new Uint8Array(r,n,i));}const objectCloneMemo=new WeakMap;let sharedArrayBufferSupported_;function supportsSharedArrayBuffer(){if(void 0===sharedArrayBufferSupported_)try{new SharedArrayBuffer(16),sharedArrayBufferSupported_=!0;}catch(e){sharedArrayBufferSupported_=!1;}return sharedArrayBufferSupported_}function cloneValue(e){switch(typeof e){case"number":case"string":case"boolean":case"undefined":case"bigint":return e;case"object":{if(objectCloneMemo.has(e))return objectCloneMemo.get(e);if(null===e)return e;if(e instanceof Date)return new Date(e.valueOf());if(e instanceof RegExp)return new RegExp(e);if(supportsSharedArrayBuffer()&&e instanceof SharedArrayBuffer)return e;if(e instanceof ArrayBuffer){const t=cloneArrayBuffer(e,0,e.byteLength);return objectCloneMemo.set(e,t),t}if(ArrayBuffer.isView(e)){const t=cloneValue(e.buffer);let r;return r=e instanceof DataView?e.byteLength:e.length,new e.constructor(t,e.byteOffset,r)}if(e instanceof Map){const t=new Map;return objectCloneMemo.set(e,t),e.forEach(((e,r)=>t.set(r,cloneValue(e)))),t}if(e instanceof Set){const t=new Map;return objectCloneMemo.set(e,t),e.forEach(((e,r)=>t.set(r,cloneValue(e)))),t}const t={};objectCloneMemo.set(e,t);const r=Object.getOwnPropertyNames(e);for(const n of r)t[n]=cloneValue(e[n]);return t}default:throw new DOMException("Uncloneable value in stream","DataCloneError")}}function promiseCall(e,t,r){try{const n=Function.prototype.apply.call(e,t,r);return Promise.resolve(n)}catch(e){return Promise.reject(e)}}function createAlgorithmFromUnderlyingMethod(e,t,r){const n=e[t];if(void 0===n)return ()=>Promise.resolve(void 0);if("function"!=typeof n)throw new TypeError(`Field "${t}" is not a function.`);return function(...t){return promiseCall(n,e,t.concat(r))}}function validateAndNormalizeHighWaterMark(e){const t=Number(e);if(isNaN(t)||t<0)throw new RangeError("highWaterMark must be a valid, non-negative integer.");return t}function makeSizeAlgorithmFromSizeFunction(e){if("function"!=typeof e&&void 0!==e)throw new TypeError("size function must be undefined or a function");return function(t){return "function"==typeof e?e(t):1}}function createControlledPromise(){const e={state:0};return e.promise=new Promise((function(t,r){e.resolve=function(r){e.state=1,t(r);},e.reject=function(t){e.state=2,r(t);};})),e}const CHUNK_SIZE=16384;class QueueImpl{constructor(){this.chunks_=[[]],this.readChunk_=this.writeChunk_=this.chunks_[0],this.length_=0;}push(e){this.writeChunk_.push(e),this.length_+=1,this.writeChunk_.length===CHUNK_SIZE&&(this.writeChunk_=[],this.chunks_.push(this.writeChunk_));}front(){if(0!==this.length_)return this.readChunk_[0]}shift(){if(0===this.length_)return;const e=this.readChunk_.shift();return this.length_-=1,0===this.readChunk_.length&&this.readChunk_!==this.writeChunk_&&(this.chunks_.shift(),this.readChunk_=this.chunks_[0]),e}get length(){return this.length_}}const queue_=Symbol("queue_"),queueTotalSize_=Symbol("queueTotalSize_");function dequeueValue(e){const t=e[queue_].shift(),r=e[queueTotalSize_]-t.size;return e[queueTotalSize_]=Math.max(0,r),t.value}function enqueueValueWithSize(e,t,r){if(!isFiniteNonNegativeNumber(r))throw new RangeError("Chunk size must be a non-negative, finite numbers");e[queue_].push({value:t,size:r}),e[queueTotalSize_]+=r;}function peekQueueValue(e){return e[queue_].front().value}function resetQueue(e){e[queue_]=new QueueImpl,e[queueTotalSize_]=0;}const controlledReadableStream_=Symbol("controlledReadableStream_"),pullAlgorithm_=Symbol("pullAlgorithm_"),cancelAlgorithm_=Symbol("cancelAlgorithm_"),strategySizeAlgorithm_=Symbol("strategySizeAlgorithm_"),strategyHWM_=Symbol("strategyHWM_"),started_=Symbol("started_"),closeRequested_=Symbol("closeRequested_"),pullAgain_=Symbol("pullAgain_"),pulling_=Symbol("pulling_"),cancelSteps_=Symbol("cancelSteps_"),pullSteps_=Symbol("pullSteps_"),autoAllocateChunkSize_=Symbol("autoAllocateChunkSize_"),byobRequest_=Symbol("byobRequest_"),controlledReadableByteStream_=Symbol("controlledReadableByteStream_"),pendingPullIntos_=Symbol("pendingPullIntos_"),closedPromise_=Symbol("closedPromise_"),ownerReadableStream_=Symbol("ownerReadableStream_"),readRequests_=Symbol("readRequests_"),readIntoRequests_=Symbol("readIntoRequests_"),associatedReadableByteStreamController_=Symbol("associatedReadableByteStreamController_"),view_=Symbol("view_"),reader_=Symbol("reader_"),readableStreamController_=Symbol("readableStreamController_");function initializeReadableStream(e){e[state_]="readable",e[reader_]=void 0,e[storedError_]=void 0,e[readableStreamController_]=void 0;}function isReadableStream(e){return "object"==typeof e&&null!==e&&readableStreamController_ in e}function isReadableStreamLocked(e){return void 0!==e[reader_]}function readableStreamGetNumReadIntoRequests(e){const t=e[reader_];return void 0===t?0:t[readIntoRequests_].length}function readableStreamGetNumReadRequests(e){const t=e[reader_];return void 0===t?0:t[readRequests_].length}function readableStreamCreateReadResult(e,t,r){const n=r?Object.prototype:null,i=Object.create(n);return i.value=e,i.done=t,i}function readableStreamAddReadIntoRequest(e,t){const r=e[reader_],n=createControlledPromise();return n.forAuthorCode=t,r[readIntoRequests_].push(n),n.promise}function readableStreamAddReadRequest(e,t){const r=e[reader_],n=createControlledPromise();return n.forAuthorCode=t,r[readRequests_].push(n),n.promise}function readableStreamHasBYOBReader(e){return isReadableStreamBYOBReader(e[reader_])}function readableStreamHasDefaultReader(e){return isReadableStreamDefaultReader(e[reader_])}function readableStreamCancel(e,t){return "closed"===e[state_]?Promise.resolve(void 0):"errored"===e[state_]?Promise.reject(e[storedError_]):(readableStreamClose(e),e[readableStreamController_][cancelSteps_](t).then((e=>{})))}function readableStreamClose(e){e[state_]="closed";const t=e[reader_];if(void 0!==t&&(t[closedPromise_].resolve(),t[closedPromise_].promise.catch((()=>{})),isReadableStreamDefaultReader(t))){for(const e of t[readRequests_])e.resolve(readableStreamCreateReadResult(void 0,!0,e.forAuthorCode));t[readRequests_]=[];}}function readableStreamError(e,t){if("readable"!==e[state_])throw new RangeError("Stream is in an invalid state");e[state_]="errored",e[storedError_]=t;const r=e[reader_];if(void 0!==r)if(r[closedPromise_].reject(t),isReadableStreamDefaultReader(r)){for(const e of r[readRequests_])e.reject(t);r[readRequests_]=[];}else {const e=r[readIntoRequests_];for(const r of e)r.reject(t);r[readIntoRequests_]=[];}}function isReadableStreamDefaultReader(e){return "object"==typeof e&&null!==e&&readRequests_ in e}function isReadableStreamBYOBReader(e){return "object"==typeof e&&null!==e&&readIntoRequests_ in e}function readableStreamReaderGenericInitialize(e,t){e[ownerReadableStream_]=t,t[reader_]=e;const r=t[state_];e[closedPromise_]=createControlledPromise(),"readable"===r||("closed"===r?e[closedPromise_].resolve(void 0):(e[closedPromise_].reject(t[storedError_]),e[closedPromise_].promise.catch((()=>{}))));}function readableStreamReaderGenericRelease(e){const t=e[ownerReadableStream_];if(void 0===t)throw new TypeError("Reader is in an inconsistent state");"readable"===t[state_]||(e[closedPromise_]=createControlledPromise()),e[closedPromise_].reject(new TypeError),e[closedPromise_].promise.catch((()=>{})),t[reader_]=void 0,e[ownerReadableStream_]=void 0;}function readableStreamBYOBReaderRead(e,t,r=!1){const n=e[ownerReadableStream_];return "errored"===n[state_]?Promise.reject(n[storedError_]):readableByteStreamControllerPullInto(n[readableStreamController_],t,r)}function readableStreamDefaultReaderRead(e,t=!1){const r=e[ownerReadableStream_];return "closed"===r[state_]?Promise.resolve(readableStreamCreateReadResult(void 0,!0,t)):"errored"===r[state_]?Promise.reject(r[storedError_]):r[readableStreamController_][pullSteps_](t)}function readableStreamFulfillReadIntoRequest(e,t,r){const n=e[reader_][readIntoRequests_].shift();n.resolve(readableStreamCreateReadResult(t,r,n.forAuthorCode));}function readableStreamFulfillReadRequest(e,t,r){const n=e[reader_][readRequests_].shift();n.resolve(readableStreamCreateReadResult(t,r,n.forAuthorCode));}function setUpReadableStreamDefaultController(e,t,r,n,i,o,s){t[controlledReadableStream_]=e,resetQueue(t),t[started_]=!1,t[closeRequested_]=!1,t[pullAgain_]=!1,t[pulling_]=!1,t[strategySizeAlgorithm_]=s,t[strategyHWM_]=o,t[pullAlgorithm_]=n,t[cancelAlgorithm_]=i,e[readableStreamController_]=t;const a=r();Promise.resolve(a).then((e=>{t[started_]=!0,readableStreamDefaultControllerCallPullIfNeeded(t);}),(e=>{readableStreamDefaultControllerError(t,e);}));}function isReadableStreamDefaultController(e){return "object"==typeof e&&null!==e&&controlledReadableStream_ in e}function readableStreamDefaultControllerHasBackpressure(e){return !readableStreamDefaultControllerShouldCallPull(e)}function readableStreamDefaultControllerCanCloseOrEnqueue(e){const t=e[controlledReadableStream_][state_];return !1===e[closeRequested_]&&"readable"===t}function readableStreamDefaultControllerGetDesiredSize(e){const t=e[controlledReadableStream_][state_];return "errored"===t?null:"closed"===t?0:e[strategyHWM_]-e[queueTotalSize_]}function readableStreamDefaultControllerClose(e){e[closeRequested_]=!0;const t=e[controlledReadableStream_];0===e[queue_].length&&(readableStreamDefaultControllerClearAlgorithms(e),readableStreamClose(t));}function readableStreamDefaultControllerEnqueue(e,t){const r=e[controlledReadableStream_];if(isReadableStreamLocked(r)&&readableStreamGetNumReadRequests(r)>0)readableStreamFulfillReadRequest(r,t,!1);else {let r;try{r=e[strategySizeAlgorithm_](t);}catch(t){throw readableStreamDefaultControllerError(e,t),t}try{enqueueValueWithSize(e,t,r);}catch(t){throw readableStreamDefaultControllerError(e,t),t}}readableStreamDefaultControllerCallPullIfNeeded(e);}function readableStreamDefaultControllerError(e,t){const r=e[controlledReadableStream_];"readable"===r[state_]&&(resetQueue(e),readableStreamDefaultControllerClearAlgorithms(e),readableStreamError(r,t));}function readableStreamDefaultControllerCallPullIfNeeded(e){if(readableStreamDefaultControllerShouldCallPull(e))if(e[pulling_])e[pullAgain_]=!0;else {if(e[pullAgain_])throw new RangeError("Stream controller is in an invalid state.");e[pulling_]=!0,e[pullAlgorithm_](e).then((t=>{e[pulling_]=!1,e[pullAgain_]&&(e[pullAgain_]=!1,readableStreamDefaultControllerCallPullIfNeeded(e));}),(t=>{readableStreamDefaultControllerError(e,t);}));}}function readableStreamDefaultControllerShouldCallPull(e){const t=e[controlledReadableStream_];if(!readableStreamDefaultControllerCanCloseOrEnqueue(e))return !1;if(!1===e[started_])return !1;if(isReadableStreamLocked(t)&&readableStreamGetNumReadRequests(t)>0)return !0;const r=readableStreamDefaultControllerGetDesiredSize(e);if(null===r)throw new RangeError("Stream is in an invalid state.");return r>0}function readableStreamDefaultControllerClearAlgorithms(e){e[pullAlgorithm_]=void 0,e[cancelAlgorithm_]=void 0,e[strategySizeAlgorithm_]=void 0;}function setUpReadableByteStreamController(e,t,r,n,i,o,s){if(void 0!==e[readableStreamController_])throw new TypeError("Cannot reuse streams");if(void 0!==s&&(!isInteger(s)||s<=0))throw new RangeError("autoAllocateChunkSize must be a positive, finite integer");t[controlledReadableByteStream_]=e,t[pullAgain_]=!1,t[pulling_]=!1,readableByteStreamControllerClearPendingPullIntos(t),resetQueue(t),t[closeRequested_]=!1,t[started_]=!1,t[strategyHWM_]=validateAndNormalizeHighWaterMark(o),t[pullAlgorithm_]=n,t[cancelAlgorithm_]=i,t[autoAllocateChunkSize_]=s,t[pendingPullIntos_]=[],e[readableStreamController_]=t;const a=r();Promise.resolve(a).then((e=>{t[started_]=!0,readableByteStreamControllerCallPullIfNeeded(t);}),(e=>{readableByteStreamControllerError(t,e);}));}function isReadableStreamBYOBRequest(e){return "object"==typeof e&&null!==e&&associatedReadableByteStreamController_ in e}function isReadableByteStreamController(e){return "object"==typeof e&&null!==e&&controlledReadableByteStream_ in e}function readableByteStreamControllerCallPullIfNeeded(e){readableByteStreamControllerShouldCallPull(e)&&(e[pulling_]?e[pullAgain_]=!0:(e[pulling_]=!0,e[pullAlgorithm_](e).then((t=>{e[pulling_]=!1,e[pullAgain_]&&(e[pullAgain_]=!1,readableByteStreamControllerCallPullIfNeeded(e));}),(t=>{readableByteStreamControllerError(e,t);}))));}function readableByteStreamControllerClearAlgorithms(e){e[pullAlgorithm_]=void 0,e[cancelAlgorithm_]=void 0;}function readableByteStreamControllerClearPendingPullIntos(e){readableByteStreamControllerInvalidateBYOBRequest(e),e[pendingPullIntos_]=[];}function readableByteStreamControllerClose(e){const t=e[controlledReadableByteStream_];if(e[queueTotalSize_]>0)e[closeRequested_]=!0;else {if(e[pendingPullIntos_].length>0&&e[pendingPullIntos_][0].bytesFilled>0){const t=new TypeError;throw readableByteStreamControllerError(e,t),t}readableByteStreamControllerClearAlgorithms(e),readableStreamClose(t);}}function readableByteStreamControllerCommitPullIntoDescriptor(e,t){let r=!1;"closed"===e[state_]&&(r=!0);const n=readableByteStreamControllerConvertPullIntoDescriptor(t);"default"===t.readerType?readableStreamFulfillReadRequest(e,n,r):readableStreamFulfillReadIntoRequest(e,n,r);}function readableByteStreamControllerConvertPullIntoDescriptor(e){const{bytesFilled:t,elementSize:r}=e;return new e.ctor(e.buffer,e.byteOffset,t/r)}function readableByteStreamControllerEnqueue(e,t){const r=e[controlledReadableByteStream_],{buffer:n,byteOffset:i,byteLength:o}=t,s=transferArrayBuffer(n);readableStreamHasDefaultReader(r)?0===readableStreamGetNumReadRequests(r)?readableByteStreamControllerEnqueueChunkToQueue(e,s,i,o):readableStreamFulfillReadRequest(r,new Uint8Array(s,i,o),!1):readableStreamHasBYOBReader(r)?(readableByteStreamControllerEnqueueChunkToQueue(e,s,i,o),readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(e)):readableByteStreamControllerEnqueueChunkToQueue(e,s,i,o),readableByteStreamControllerCallPullIfNeeded(e);}function readableByteStreamControllerEnqueueChunkToQueue(e,t,r,n){e[queue_].push({buffer:t,byteOffset:r,byteLength:n}),e[queueTotalSize_]+=n;}function readableByteStreamControllerError(e,t){const r=e[controlledReadableByteStream_];"readable"===r[state_]&&(readableByteStreamControllerClearPendingPullIntos(e),resetQueue(e),readableByteStreamControllerClearAlgorithms(e),readableStreamError(r,t));}function readableByteStreamControllerFillHeadPullIntoDescriptor(e,t,r){readableByteStreamControllerInvalidateBYOBRequest(e),r.bytesFilled+=t;}function readableByteStreamControllerFillPullIntoDescriptorFromQueue(e,t){const r=t.elementSize,n=t.bytesFilled-t.bytesFilled%r,i=Math.min(e[queueTotalSize_],t.byteLength-t.bytesFilled),o=t.bytesFilled+i,s=o-o%r;let a=i,l=!1;s>n&&(a=s-t.bytesFilled,l=!0);const u=e[queue_];for(;a>0;){const r=u.front(),n=Math.min(a,r.byteLength),i=t.byteOffset+t.bytesFilled;copyDataBlockBytes(t.buffer,i,r.buffer,r.byteOffset,n),r.byteLength===n?u.shift():(r.byteOffset+=n,r.byteLength-=n),e[queueTotalSize_]-=n,readableByteStreamControllerFillHeadPullIntoDescriptor(e,n,t),a-=n;}return l}function readableByteStreamControllerGetDesiredSize(e){const t=e[controlledReadableByteStream_][state_];return "errored"===t?null:"closed"===t?0:e[strategyHWM_]-e[queueTotalSize_]}function readableByteStreamControllerHandleQueueDrain(e){0===e[queueTotalSize_]&&e[closeRequested_]?(readableByteStreamControllerClearAlgorithms(e),readableStreamClose(e[controlledReadableByteStream_])):readableByteStreamControllerCallPullIfNeeded(e);}function readableByteStreamControllerInvalidateBYOBRequest(e){const t=e[byobRequest_];void 0!==t&&(t[associatedReadableByteStreamController_]=void 0,t[view_]=void 0,e[byobRequest_]=void 0);}function readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(e){const t=e[pendingPullIntos_];for(;t.length>0;){if(0===e[queueTotalSize_])return;const r=t[0];readableByteStreamControllerFillPullIntoDescriptorFromQueue(e,r)&&(readableByteStreamControllerShiftPendingPullInto(e),readableByteStreamControllerCommitPullIntoDescriptor(e[controlledReadableByteStream_],r));}}function readableByteStreamControllerPullInto(e,t,r){const n=e[controlledReadableByteStream_],i=t.BYTES_PER_ELEMENT||1,o=t.constructor,s=t.byteOffset,a=t.byteLength,l={buffer:transferArrayBuffer(t.buffer),byteOffset:s,byteLength:a,bytesFilled:0,elementSize:i,ctor:o,readerType:"byob"};if(e[pendingPullIntos_].length>0)return e[pendingPullIntos_].push(l),readableStreamAddReadIntoRequest(n,r);if("closed"===n[state_]){const e=new o(l.buffer,l.byteOffset,0);return Promise.resolve(readableStreamCreateReadResult(e,!0,r))}if(e[queueTotalSize_]>0){if(readableByteStreamControllerFillPullIntoDescriptorFromQueue(e,l)){const t=readableByteStreamControllerConvertPullIntoDescriptor(l);return readableByteStreamControllerHandleQueueDrain(e),Promise.resolve(readableStreamCreateReadResult(t,!1,r))}if(e[closeRequested_]){const t=new TypeError;return readableByteStreamControllerError(e,t),Promise.reject(t)}}e[pendingPullIntos_].push(l);const u=readableStreamAddReadIntoRequest(n,r);return readableByteStreamControllerCallPullIfNeeded(e),u}function readableByteStreamControllerRespond(e,t){if(!isFiniteNonNegativeNumber(t=Number(t)))throw new RangeError("bytesWritten must be a finite, non-negative number");readableByteStreamControllerRespondInternal(e,t);}function readableByteStreamControllerRespondInClosedState(e,t){t.buffer=transferArrayBuffer(t.buffer);const r=e[controlledReadableByteStream_];if(readableStreamHasBYOBReader(r))for(;readableStreamGetNumReadIntoRequests(r)>0;)readableByteStreamControllerCommitPullIntoDescriptor(r,readableByteStreamControllerShiftPendingPullInto(e));}function readableByteStreamControllerRespondInReadableState(e,t,r){if(r.bytesFilled+t>r.byteLength)throw new RangeError;if(readableByteStreamControllerFillHeadPullIntoDescriptor(e,t,r),r.bytesFilled<r.elementSize)return;readableByteStreamControllerShiftPendingPullInto(e);const n=r.bytesFilled%r.elementSize;if(n>0){const t=r.byteOffset+r.bytesFilled,i=cloneArrayBuffer(r.buffer,t-n,n);readableByteStreamControllerEnqueueChunkToQueue(e,i,0,i.byteLength);}r.buffer=transferArrayBuffer(r.buffer),r.bytesFilled=r.bytesFilled-n,readableByteStreamControllerCommitPullIntoDescriptor(e[controlledReadableByteStream_],r),readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(e);}function readableByteStreamControllerRespondInternal(e,t){const r=e[pendingPullIntos_][0];if("closed"===e[controlledReadableByteStream_][state_]){if(0!==t)throw new TypeError;readableByteStreamControllerRespondInClosedState(e,r);}else readableByteStreamControllerRespondInReadableState(e,t,r);readableByteStreamControllerCallPullIfNeeded(e);}function readableByteStreamControllerRespondWithNewView(e,t){const r=e[pendingPullIntos_][0];if(r.byteOffset+r.bytesFilled!==t.byteOffset)throw new RangeError;if(r.byteLength!==t.byteLength)throw new RangeError;r.buffer=t.buffer,readableByteStreamControllerRespondInternal(e,t.byteLength);}function readableByteStreamControllerShiftPendingPullInto(e){const t=e[pendingPullIntos_].shift();return readableByteStreamControllerInvalidateBYOBRequest(e),t}function readableByteStreamControllerShouldCallPull(e){const t=e[controlledReadableByteStream_];return "readable"===t[state_]&&!e[closeRequested_]&&!!e[started_]&&(!!(readableStreamHasDefaultReader(t)&&readableStreamGetNumReadRequests(t)>0)||!!(readableStreamHasBYOBReader(t)&&readableStreamGetNumReadIntoRequests(t)>0)||readableByteStreamControllerGetDesiredSize(e)>0)}function setUpReadableStreamBYOBRequest(e,t,r){if(!isReadableByteStreamController(t))throw new TypeError;if(!ArrayBuffer.isView(r))throw new TypeError;e[associatedReadableByteStreamController_]=t,e[view_]=r;}const backpressure_=Symbol("backpressure_"),closeRequest_=Symbol("closeRequest_"),inFlightWriteRequest_=Symbol("inFlightWriteRequest_"),inFlightCloseRequest_=Symbol("inFlightCloseRequest_"),pendingAbortRequest_=Symbol("pendingAbortRequest_"),writableStreamController_=Symbol("writableStreamController_"),writer_=Symbol("writer_"),writeRequests_=Symbol("writeRequests_"),abortAlgorithm_=Symbol("abortAlgorithm_"),closeAlgorithm_=Symbol("closeAlgorithm_"),controlledWritableStream_=Symbol("controlledWritableStream_"),started_$1=Symbol("started_"),strategyHWM_$1=Symbol("strategyHWM_"),strategySizeAlgorithm_$1=Symbol("strategySizeAlgorithm_"),writeAlgorithm_=Symbol("writeAlgorithm_"),ownerWritableStream_=Symbol("ownerWritableStream_"),closedPromise_$1=Symbol("closedPromise_"),readyPromise_=Symbol("readyPromise_"),errorSteps_=Symbol("errorSteps_"),abortSteps_=Symbol("abortSteps_");function initializeWritableStream(e){e[state_]="writable",e[storedError_]=void 0,e[writer_]=void 0,e[writableStreamController_]=void 0,e[inFlightWriteRequest_]=void 0,e[closeRequest_]=void 0,e[inFlightCloseRequest_]=void 0,e[pendingAbortRequest_]=void 0,e[writeRequests_]=[],e[backpressure_]=!1;}function isWritableStream(e){return "object"==typeof e&&null!==e&&writableStreamController_ in e}function isWritableStreamLocked(e){return void 0!==e[writer_]}function writableStreamAbort(e,t){const r=e[state_];if("closed"===r||"errored"===r)return Promise.resolve(void 0);let n=e[pendingAbortRequest_];if(void 0!==n)return n.promise;let i=!1;"erroring"===r&&(i=!0,t=void 0),n={reason:t,wasAlreadyErroring:i};const o=new Promise(((e,t)=>{n.resolve=e,n.reject=t;}));return n.promise=o,e[pendingAbortRequest_]=n,i||writableStreamStartErroring(e,t),o}function writableStreamAddWriteRequest(e){const t=createControlledPromise();return e[writeRequests_].push(t),t.promise}function writableStreamDealWithRejection(e,t){"writable"!==e[state_]?writableStreamFinishErroring(e):writableStreamStartErroring(e,t);}function writableStreamStartErroring(e,t){const r=e[writableStreamController_];e[state_]="erroring",e[storedError_]=t;const n=e[writer_];void 0!==n&&writableStreamDefaultWriterEnsureReadyPromiseRejected(n,t),!writableStreamHasOperationMarkedInFlight(e)&&r[started_$1]&&writableStreamFinishErroring(e);}function writableStreamFinishErroring(e){e[state_]="errored";const t=e[writableStreamController_];t[errorSteps_]();const r=e[storedError_];for(const t of e[writeRequests_])t.reject(r);e[writeRequests_]=[];const n=e[pendingAbortRequest_];if(void 0!==n)return e[pendingAbortRequest_]=void 0,n.wasAlreadyErroring?(n.reject(r),void writableStreamRejectCloseAndClosedPromiseIfNeeded(e)):void t[abortSteps_](n.reason).then((t=>{n.resolve(),writableStreamRejectCloseAndClosedPromiseIfNeeded(e);}),(t=>{n.reject(t),writableStreamRejectCloseAndClosedPromiseIfNeeded(e);}));writableStreamRejectCloseAndClosedPromiseIfNeeded(e);}function writableStreamFinishInFlightWrite(e){e[inFlightWriteRequest_].resolve(void 0),e[inFlightWriteRequest_]=void 0;}function writableStreamFinishInFlightWriteWithError(e,t){e[inFlightWriteRequest_].reject(t),e[inFlightWriteRequest_]=void 0,writableStreamDealWithRejection(e,t);}function writableStreamFinishInFlightClose(e){e[inFlightCloseRequest_].resolve(void 0),e[inFlightCloseRequest_]=void 0,"erroring"===e[state_]&&(e[storedError_]=void 0,void 0!==e[pendingAbortRequest_]&&(e[pendingAbortRequest_].resolve(),e[pendingAbortRequest_]=void 0)),e[state_]="closed";const t=e[writer_];void 0!==t&&t[closedPromise_$1].resolve(void 0);}function writableStreamFinishInFlightCloseWithError(e,t){e[inFlightCloseRequest_].reject(t),e[inFlightCloseRequest_]=void 0,void 0!==e[pendingAbortRequest_]&&(e[pendingAbortRequest_].reject(t),e[pendingAbortRequest_]=void 0),writableStreamDealWithRejection(e,t);}function writableStreamCloseQueuedOrInFlight(e){return void 0!==e[closeRequest_]||void 0!==e[inFlightCloseRequest_]}function writableStreamHasOperationMarkedInFlight(e){return void 0!==e[inFlightWriteRequest_]||void 0!==e[inFlightCloseRequest_]}function writableStreamMarkCloseRequestInFlight(e){e[inFlightCloseRequest_]=e[closeRequest_],e[closeRequest_]=void 0;}function writableStreamMarkFirstWriteRequestInFlight(e){const t=e[writeRequests_].shift();e[inFlightWriteRequest_]=t;}function writableStreamRejectCloseAndClosedPromiseIfNeeded(e){const t=e[closeRequest_];void 0!==t&&(t.reject(e[storedError_]),e[closeRequest_]=void 0);const r=e[writer_];void 0!==r&&(r[closedPromise_$1].reject(e[storedError_]),r[closedPromise_$1].promise.catch((()=>{})));}function writableStreamUpdateBackpressure(e,t){const r=e[writer_];void 0!==r&&t!==e[backpressure_]&&(t?r[readyPromise_]=createControlledPromise():r[readyPromise_].resolve(void 0)),e[backpressure_]=t;}function isWritableStreamDefaultWriter(e){return "object"==typeof e&&null!==e&&ownerWritableStream_ in e}function writableStreamDefaultWriterAbort(e,t){return writableStreamAbort(e[ownerWritableStream_],t)}function writableStreamDefaultWriterClose(e){const t=e[ownerWritableStream_],r=t[state_];if("closed"===r||"errored"===r)return Promise.reject(new TypeError("Writer stream is already closed or errored"));const n=createControlledPromise();return t[closeRequest_]=n,t[backpressure_]&&"writable"===r&&e[readyPromise_].resolve(void 0),writableStreamDefaultControllerClose(t[writableStreamController_]),n.promise}function writableStreamDefaultWriterCloseWithErrorPropagation(e){const t=e[ownerWritableStream_],r=t[state_];return writableStreamCloseQueuedOrInFlight(t)||"closed"===r?Promise.resolve(void 0):"errored"===r?Promise.reject(t[storedError_]):writableStreamDefaultWriterClose(e)}function writableStreamDefaultWriterEnsureClosedPromiseRejected(e,t){const r=e[closedPromise_$1];0===r.state?r.reject(t):(e[closedPromise_$1]=createControlledPromise(),e[closedPromise_$1].reject(t)),e[closedPromise_$1].promise.catch((()=>{}));}function writableStreamDefaultWriterEnsureReadyPromiseRejected(e,t){const r=e[readyPromise_];0===r.state?r.reject(t):(e[readyPromise_]=createControlledPromise(),e[readyPromise_].reject(t)),e[readyPromise_].promise.catch((()=>{}));}function writableStreamDefaultWriterGetDesiredSize(e){const t=e[ownerWritableStream_],r=t[state_];return "errored"===r||"erroring"===r?null:"closed"===r?0:writableStreamDefaultControllerGetDesiredSize(t[writableStreamController_])}function writableStreamDefaultWriterRelease(e){const t=e[ownerWritableStream_],r=new TypeError;writableStreamDefaultWriterEnsureReadyPromiseRejected(e,r),writableStreamDefaultWriterEnsureClosedPromiseRejected(e,r),t[writer_]=void 0,e[ownerWritableStream_]=void 0;}function writableStreamDefaultWriterWrite(e,t){const r=e[ownerWritableStream_],n=r[writableStreamController_],i=writableStreamDefaultControllerGetChunkSize(n,t);if(e[ownerWritableStream_]!==r)return Promise.reject(new TypeError);const o=r[state_];if("errored"===o)return Promise.reject(r[storedError_]);if(writableStreamCloseQueuedOrInFlight(r)||"closed"===o)return Promise.reject(new TypeError("Cannot write to a closing or closed stream"));if("erroring"===o)return Promise.reject(r[storedError_]);const s=writableStreamAddWriteRequest(r);return writableStreamDefaultControllerWrite(n,t,i),s}function setUpWritableStreamDefaultController(e,t,r,n,i,o,s,a){if(!isWritableStream(e))throw new TypeError;if(void 0!==e[writableStreamController_])throw new TypeError;t[controlledWritableStream_]=e,e[writableStreamController_]=t,resetQueue(t),t[started_$1]=!1,t[strategySizeAlgorithm_$1]=a,t[strategyHWM_$1]=s,t[writeAlgorithm_]=n,t[closeAlgorithm_]=i,t[abortAlgorithm_]=o;const l=writableStreamDefaultControllerGetBackpressure(t);writableStreamUpdateBackpressure(e,l);const u=r();Promise.resolve(u).then((e=>{t[started_$1]=!0,writableStreamDefaultControllerAdvanceQueueIfNeeded(t);}),(r=>{t[started_$1]=!0,writableStreamDealWithRejection(e,r);}));}function isWritableStreamDefaultController(e){return "object"==typeof e&&null!==e&&controlledWritableStream_ in e}function writableStreamDefaultControllerClearAlgorithms(e){e[writeAlgorithm_]=void 0,e[closeAlgorithm_]=void 0,e[abortAlgorithm_]=void 0,e[strategySizeAlgorithm_$1]=void 0;}function writableStreamDefaultControllerClose(e){enqueueValueWithSize(e,"close",0),writableStreamDefaultControllerAdvanceQueueIfNeeded(e);}function writableStreamDefaultControllerGetChunkSize(e,t){let r;try{r=e[strategySizeAlgorithm_$1](t);}catch(t){writableStreamDefaultControllerErrorIfNeeded(e,t),r=1;}return r}function writableStreamDefaultControllerGetDesiredSize(e){return e[strategyHWM_$1]-e[queueTotalSize_]}function writableStreamDefaultControllerWrite(e,t,r){try{enqueueValueWithSize(e,{chunk:t},r);}catch(t){return void writableStreamDefaultControllerErrorIfNeeded(e,t)}const n=e[controlledWritableStream_];writableStreamCloseQueuedOrInFlight(n)||"writable"!==n[state_]||writableStreamUpdateBackpressure(n,writableStreamDefaultControllerGetBackpressure(e)),writableStreamDefaultControllerAdvanceQueueIfNeeded(e);}function writableStreamDefaultControllerAdvanceQueueIfNeeded(e){if(!e[started_$1])return;const t=e[controlledWritableStream_];if(void 0!==t[inFlightWriteRequest_])return;const r=t[state_];if("closed"===r||"errored"===r)return;if("erroring"===r)return void writableStreamFinishErroring(t);if(0===e[queue_].length)return;const n=peekQueueValue(e);"close"===n?writableStreamDefaultControllerProcessClose(e):writableStreamDefaultControllerProcessWrite(e,n.chunk);}function writableStreamDefaultControllerErrorIfNeeded(e,t){"writable"===e[controlledWritableStream_][state_]&&writableStreamDefaultControllerError(e,t);}function writableStreamDefaultControllerProcessClose(e){const t=e[controlledWritableStream_];writableStreamMarkCloseRequestInFlight(t),dequeueValue(e);const r=e[closeAlgorithm_]();writableStreamDefaultControllerClearAlgorithms(e),r.then((e=>{writableStreamFinishInFlightClose(t);}),(e=>{writableStreamFinishInFlightCloseWithError(t,e);}));}function writableStreamDefaultControllerProcessWrite(e,t){const r=e[controlledWritableStream_];writableStreamMarkFirstWriteRequestInFlight(r),e[writeAlgorithm_](t).then((t=>{writableStreamFinishInFlightWrite(r);const n=r[state_];if(dequeueValue(e),!writableStreamCloseQueuedOrInFlight(r)&&"writable"===n){const t=writableStreamDefaultControllerGetBackpressure(e);writableStreamUpdateBackpressure(r,t);}writableStreamDefaultControllerAdvanceQueueIfNeeded(e);}),(t=>{"writable"===r[state_]&&writableStreamDefaultControllerClearAlgorithms(e),writableStreamFinishInFlightWriteWithError(r,t);}));}function writableStreamDefaultControllerGetBackpressure(e){return writableStreamDefaultControllerGetDesiredSize(e)<=0}function writableStreamDefaultControllerError(e,t){const r=e[controlledWritableStream_];writableStreamDefaultControllerClearAlgorithms(e),writableStreamStartErroring(r,t);}class ReadableStreamDefaultReader{constructor(e){if(!isReadableStream(e))throw new TypeError;if(isReadableStreamLocked(e))throw new TypeError("The stream is locked.");readableStreamReaderGenericInitialize(this,e),this[readRequests_]=[];}get closed(){return isReadableStreamDefaultReader(this)?this[closedPromise_].promise:Promise.reject(new TypeError)}cancel(e){if(!isReadableStreamDefaultReader(this))return Promise.reject(new TypeError);const t=this[ownerReadableStream_];return void 0===t?Promise.reject(new TypeError("Reader is not associated with a stream")):readableStreamCancel(t,e)}read(){return isReadableStreamDefaultReader(this)?void 0===this[ownerReadableStream_]?Promise.reject(new TypeError("Reader is not associated with a stream")):readableStreamDefaultReaderRead(this,!0):Promise.reject(new TypeError)}releaseLock(){if(!isReadableStreamDefaultReader(this))throw new TypeError;if(void 0!==this[ownerReadableStream_]){if(0!==this[readRequests_].length)throw new TypeError("Cannot release a stream with pending read requests");readableStreamReaderGenericRelease(this);}}}class WritableStreamDefaultWriter{constructor(e){if(!isWritableStream(e))throw new TypeError;if(isWritableStreamLocked(e))throw new TypeError("Stream is already locked");this[ownerWritableStream_]=e,e[writer_]=this;const t=createControlledPromise(),r=createControlledPromise();this[readyPromise_]=t,this[closedPromise_$1]=r;const n=e[state_];if("writable"===n)!writableStreamCloseQueuedOrInFlight(e)&&e[backpressure_]||t.resolve(void 0);else if("erroring"===n)t.reject(e[storedError_]),t.promise.catch((()=>{}));else if("closed"===n)t.resolve(void 0),r.resolve(void 0);else {const n=e[storedError_];t.reject(n),t.promise.catch((()=>{})),r.reject(n),r.promise.catch((()=>{}));}}abort(e){return isWritableStreamDefaultWriter(this)?void 0===this[ownerWritableStream_]?Promise.reject(new TypeError("Writer is not connected to a stream")):writableStreamDefaultWriterAbort(this,e):Promise.reject(new TypeError)}close(){if(!isWritableStreamDefaultWriter(this))return Promise.reject(new TypeError);const e=this[ownerWritableStream_];return void 0===e?Promise.reject(new TypeError("Writer is not connected to a stream")):writableStreamCloseQueuedOrInFlight(e)?Promise.reject(new TypeError):writableStreamDefaultWriterClose(this)}releaseLock(){void 0!==this[ownerWritableStream_]&&writableStreamDefaultWriterRelease(this);}write(e){return isWritableStreamDefaultWriter(this)?void 0===this[ownerWritableStream_]?Promise.reject(new TypeError("Writer is not connected to a stream")):writableStreamDefaultWriterWrite(this,e):Promise.reject(new TypeError)}get closed(){return isWritableStreamDefaultWriter(this)?this[closedPromise_$1].promise:Promise.reject(new TypeError)}get desiredSize(){if(!isWritableStreamDefaultWriter(this))throw new TypeError;if(void 0===this[ownerWritableStream_])throw new TypeError("Writer is not connected to stream");return writableStreamDefaultWriterGetDesiredSize(this)}get ready(){return isWritableStreamDefaultWriter(this)?this[readyPromise_].promise:Promise.reject(new TypeError)}}function pipeTo(e,t,r){const n=!!r.preventClose,i=!!r.preventAbort,o=!!r.preventCancel,s=r.signal;let a=!1,l=Promise.resolve();const u=createControlledPromise(),c=new ReadableStreamDefaultReader(e),h=new WritableStreamDefaultWriter(t);let d;function f(e,t,r){"errored"===e[state_]?r(e[storedError_]):t.catch(r);}if(void 0!==s&&(d=()=>{const r=new DOMException("Aborted","AbortError"),n=[];!1===i&&n.push((()=>"writable"===t[state_]?writableStreamAbort(t,r):Promise.resolve())),!1===o&&n.push((()=>"readable"===e[state_]?readableStreamCancel(e,r):Promise.resolve())),y((()=>Promise.all(n.map((e=>e()))).then((e=>{}))),{actualError:r});},!0===s.aborted?d():s.addEventListener("abort",d)),f(e,c[closedPromise_].promise,(e=>{y(i?void 0:()=>writableStreamAbort(t,e),{actualError:e});})),f(t,h[closedPromise_$1].promise,(t=>{y(o?void 0:()=>readableStreamCancel(e,t),{actualError:t});})),function(e,t,r){"closed"===e[state_]?r():t.then(r);}(e,c[closedPromise_].promise,(()=>{n?y():y((()=>writableStreamDefaultWriterCloseWithErrorPropagation(h)));})),writableStreamCloseQueuedOrInFlight(t)||"closed"===t[state_]){const t=new TypeError;y(o?void 0:()=>readableStreamCancel(e,t),{actualError:t});}function p(){const e=l;return l.then((()=>e===l?void 0:p()))}function m(){return "writable"!==t[state_]||writableStreamCloseQueuedOrInFlight(t)?void 0:p()}function y(e,t){if(a)return;function r(){e().then((e=>g(t)),(e=>g({actualError:e})));}a=!0,void 0===e&&(e=()=>Promise.resolve());const n=m();n?n.then(r):r();}function g(e){writableStreamDefaultWriterRelease(h),readableStreamReaderGenericRelease(c),s&&d&&s.removeEventListener("abort",d),e?u.reject(e.actualError):u.resolve(void 0);}return function e(){a||h[readyPromise_].promise.then((()=>{readableStreamDefaultReaderRead(c).then((({value:t,done:r})=>{r||(l=writableStreamDefaultWriterWrite(h,t).catch((()=>{})),e());}),(e=>{l=Promise.resolve();}));}));}(),u.promise}class ReadableStreamDefaultController{constructor(){throw new TypeError}get desiredSize(){return readableStreamDefaultControllerGetDesiredSize(this)}close(){if(!isReadableStreamDefaultController(this))throw new TypeError;if(!readableStreamDefaultControllerCanCloseOrEnqueue(this))throw new TypeError("Cannot close, the stream is already closing or not readable");readableStreamDefaultControllerClose(this);}enqueue(e){if(!isReadableStreamDefaultController(this))throw new TypeError;if(!readableStreamDefaultControllerCanCloseOrEnqueue(this))throw new TypeError("Cannot enqueue, the stream is closing or not readable");readableStreamDefaultControllerEnqueue(this,e);}error(e){if(!isReadableStreamDefaultController(this))throw new TypeError;readableStreamDefaultControllerError(this,e);}[cancelSteps_](e){resetQueue(this);const t=this[cancelAlgorithm_](e);return readableStreamDefaultControllerClearAlgorithms(this),t}[pullSteps_](e){const t=this[controlledReadableStream_];if(this[queue_].length>0){const r=dequeueValue(this);return this[closeRequested_]&&0===this[queue_].length?(readableStreamDefaultControllerClearAlgorithms(this),readableStreamClose(t)):readableStreamDefaultControllerCallPullIfNeeded(this),Promise.resolve(readableStreamCreateReadResult(r,!1,e))}const r=readableStreamAddReadRequest(t,e);return readableStreamDefaultControllerCallPullIfNeeded(this),r}}function setUpReadableStreamDefaultControllerFromUnderlyingSource(e,t,r,n){const i=Object.create(ReadableStreamDefaultController.prototype),o=createAlgorithmFromUnderlyingMethod(t,"pull",[i]),s=createAlgorithmFromUnderlyingMethod(t,"cancel",[]);setUpReadableStreamDefaultController(e,i,(()=>invokeOrNoop(t,"start",[i])),o,s,r,n);}class ReadableStreamBYOBRequest{constructor(){throw new TypeError}get view(){if(!isReadableStreamBYOBRequest(this))throw new TypeError;return this[view_]}respond(e){if(!isReadableStreamBYOBRequest(this))throw new TypeError;if(void 0===this[associatedReadableByteStreamController_])throw new TypeError;return readableByteStreamControllerRespond(this[associatedReadableByteStreamController_],e)}respondWithNewView(e){if(!isReadableStreamBYOBRequest(this))throw new TypeError;if(void 0===this[associatedReadableByteStreamController_])throw new TypeError;if(!ArrayBuffer.isView(e))throw new TypeError("view parameter must be a TypedArray");return readableByteStreamControllerRespondWithNewView(this[associatedReadableByteStreamController_],e)}}class ReadableByteStreamController{constructor(){throw new TypeError}get byobRequest(){if(!isReadableByteStreamController(this))throw new TypeError;if(void 0===this[byobRequest_]&&this[pendingPullIntos_].length>0){const e=this[pendingPullIntos_][0],t=new Uint8Array(e.buffer,e.byteOffset+e.bytesFilled,e.byteLength-e.bytesFilled),r=Object.create(ReadableStreamBYOBRequest.prototype);setUpReadableStreamBYOBRequest(r,this,t),this[byobRequest_]=r;}return this[byobRequest_]}get desiredSize(){if(!isReadableByteStreamController(this))throw new TypeError;return readableByteStreamControllerGetDesiredSize(this)}close(){if(!isReadableByteStreamController(this))throw new TypeError;if(this[closeRequested_])throw new TypeError("Stream is already closing");if("readable"!==this[controlledReadableByteStream_][state_])throw new TypeError("Stream is closed or errored");readableByteStreamControllerClose(this);}enqueue(e){if(!isReadableByteStreamController(this))throw new TypeError;if(this[closeRequested_])throw new TypeError("Stream is already closing");if("readable"!==this[controlledReadableByteStream_][state_])throw new TypeError("Stream is closed or errored");if(!ArrayBuffer.isView(e))throw new TypeError("chunk must be a valid ArrayBufferView");return readableByteStreamControllerEnqueue(this,e)}error(e){if(!isReadableByteStreamController(this))throw new TypeError;readableByteStreamControllerError(this,e);}[cancelSteps_](e){this[pendingPullIntos_].length>0&&(this[pendingPullIntos_][0].bytesFilled=0),resetQueue(this);const t=this[cancelAlgorithm_](e);return readableByteStreamControllerClearAlgorithms(this),t}[pullSteps_](e){const t=this[controlledReadableByteStream_];if(this[queueTotalSize_]>0){const t=this[queue_].shift();this[queueTotalSize_]-=t.byteLength,readableByteStreamControllerHandleQueueDrain(this);const r=new Uint8Array(t.buffer,t.byteOffset,t.byteLength);return Promise.resolve(readableStreamCreateReadResult(r,!1,e))}const r=this[autoAllocateChunkSize_];if(void 0!==r){let e;try{e=new ArrayBuffer(r);}catch(e){return Promise.reject(e)}const t={buffer:e,byteOffset:0,byteLength:r,bytesFilled:0,elementSize:1,ctor:Uint8Array,readerType:"default"};this[pendingPullIntos_].push(t);}const n=readableStreamAddReadRequest(t,e);return readableByteStreamControllerCallPullIfNeeded(this),n}}function setUpReadableByteStreamControllerFromUnderlyingSource(e,t,r){const n=Object.create(ReadableByteStreamController.prototype),i=createAlgorithmFromUnderlyingMethod(t,"pull",[n]),o=createAlgorithmFromUnderlyingMethod(t,"cancel",[]);let s=t.autoAllocateChunkSize;if(void 0!==s&&(s=Number(s),!isInteger(s)||s<=0))throw new RangeError("autoAllocateChunkSize must be a positive, finite integer");setUpReadableByteStreamController(e,n,(()=>invokeOrNoop(t,"start",[n])),i,o,r,s);}class SDReadableStreamBYOBReader{constructor(e){if(!isReadableStream(e))throw new TypeError;if(!isReadableByteStreamController(e[readableStreamController_]))throw new TypeError;if(isReadableStreamLocked(e))throw new TypeError("The stream is locked.");readableStreamReaderGenericInitialize(this,e),this[readIntoRequests_]=[];}get closed(){return isReadableStreamBYOBReader(this)?this[closedPromise_].promise:Promise.reject(new TypeError)}cancel(e){if(!isReadableStreamBYOBReader(this))return Promise.reject(new TypeError);const t=this[ownerReadableStream_];return void 0===t?Promise.reject(new TypeError("Reader is not associated with a stream")):readableStreamCancel(t,e)}read(e){return isReadableStreamBYOBReader(this)?void 0===this[ownerReadableStream_]?Promise.reject(new TypeError("Reader is not associated with a stream")):ArrayBuffer.isView(e)?0===e.byteLength?Promise.reject(new TypeError("supplied buffer view must be > 0 bytes")):readableStreamBYOBReaderRead(this,e,!0):Promise.reject(new TypeError("view argument must be a valid ArrayBufferView")):Promise.reject(new TypeError)}releaseLock(){if(!isReadableStreamBYOBReader(this))throw new TypeError;if(void 0===this[ownerReadableStream_])throw new TypeError("Reader is not associated with a stream");if(this[readIntoRequests_].length>0)throw new TypeError;readableStreamReaderGenericRelease(this);}}class SDReadableStream{constructor(e={},t={}){initializeReadableStream(this);const r=t.size,n=t.highWaterMark,i=e.type;if(void 0===i){const t=makeSizeAlgorithmFromSizeFunction(r);setUpReadableStreamDefaultControllerFromUnderlyingSource(this,e,validateAndNormalizeHighWaterMark(void 0===n?1:n),t);}else {if("bytes"!==String(i))throw new RangeError("The underlying source's `type` field must be undefined or 'bytes'");if(void 0!==r)throw new RangeError("bytes streams cannot have a strategy with a `size` field");setUpReadableByteStreamControllerFromUnderlyingSource(this,e,validateAndNormalizeHighWaterMark(void 0===n?0:n));}}get locked(){return isReadableStreamLocked(this)}getReader(e){if(!isReadableStream(this))throw new TypeError;void 0===e&&(e={});const{mode:t}=e;if(void 0===t)return new ReadableStreamDefaultReader(this);if("byob"===String(t))return new SDReadableStreamBYOBReader(this);throw RangeError("mode option must be undefined or `byob`")}cancel(e){return isReadableStream(this)?isReadableStreamLocked(this)?Promise.reject(new TypeError("Cannot cancel a locked stream")):readableStreamCancel(this,e):Promise.reject(new TypeError)}tee(){return readableStreamTee(this,!1)}pipeThrough(e,t={}){const{readable:r,writable:n}=e;if(!isReadableStream(this))throw new TypeError;if(!isWritableStream(n))throw new TypeError("writable must be a WritableStream");if(!isReadableStream(r))throw new TypeError("readable must be a ReadableStream");if(void 0!==t.signal&&!isAbortSignal(t.signal))throw new TypeError("options.signal must be an AbortSignal instance");if(isReadableStreamLocked(this))throw new TypeError("Cannot pipeThrough on a locked stream");if(isWritableStreamLocked(n))throw new TypeError("Cannot pipeThrough to a locked stream");return pipeTo(this,n,t).catch((()=>{})),r}pipeTo(e,t={}){return isReadableStream(this)?isWritableStream(e)?void 0===t.signal||isAbortSignal(t.signal)?isReadableStreamLocked(this)?Promise.reject(new TypeError("Cannot pipe from a locked stream")):isWritableStreamLocked(e)?Promise.reject(new TypeError("Cannot pipe to a locked stream")):pipeTo(this,e,t):Promise.reject(new TypeError("options.signal must be an AbortSignal instance")):Promise.reject(new TypeError("destination must be a WritableStream")):Promise.reject(new TypeError)}}function createReadableStream(e,t,r,n,i){void 0===n&&(n=1),void 0===i&&(i=()=>1);const o=Object.create(SDReadableStream.prototype);return initializeReadableStream(o),setUpReadableStreamDefaultController(o,Object.create(ReadableStreamDefaultController.prototype),e,t,r,n,i),o}function readableStreamTee(e,t){if(!isReadableStream(e))throw new TypeError;const r=new ReadableStreamDefaultReader(e);let n,i,o,s,a,l=!1,u=!1,c=!1;const h=new Promise((e=>a=e)),d=()=>readableStreamDefaultReaderRead(r).then((({value:e,done:r})=>{if(r&&!l&&(u||readableStreamDefaultControllerClose(o[readableStreamController_]),c||readableStreamDefaultControllerClose(s[readableStreamController_]),l=!0),l)return;const n=e;let i=e;u||readableStreamDefaultControllerEnqueue(o[readableStreamController_],n),c||(t&&(i=cloneValue(i)),readableStreamDefaultControllerEnqueue(s[readableStreamController_],i));})),f=()=>{};return o=createReadableStream(f,d,(t=>{if(u=!0,n=t,c){const t=readableStreamCancel(e,[n,i]);a(t);}return h})),s=createReadableStream(f,d,(t=>{if(c=!0,i=t,u){const t=readableStreamCancel(e,[n,i]);a(t);}return h})),r[closedPromise_].promise.catch((e=>{l||(readableStreamDefaultControllerError(o[readableStreamController_],e),readableStreamDefaultControllerError(s[readableStreamController_],e),l=!0);})),[o,s]}class WritableStreamDefaultController{constructor(){throw new TypeError}error(e){if(!isWritableStreamDefaultController(this))throw new TypeError;"writable"===this[controlledWritableStream_][state_]&&writableStreamDefaultControllerError(this,e);}[abortSteps_](e){const t=this[abortAlgorithm_](e);return writableStreamDefaultControllerClearAlgorithms(this),t}[errorSteps_](){resetQueue(this);}}function setUpWritableStreamDefaultControllerFromUnderlyingSink(e,t,r,n){const i=Object.create(WritableStreamDefaultController.prototype),o=createAlgorithmFromUnderlyingMethod(t,"write",[i]),s=createAlgorithmFromUnderlyingMethod(t,"close",[]),a=createAlgorithmFromUnderlyingMethod(t,"abort",[]);setUpWritableStreamDefaultController(e,i,(function(){return invokeOrNoop(t,"start",[i])}),o,s,a,r,n);}class WritableStream{constructor(e={},t={}){initializeWritableStream(this);const r=t.size,n=t.highWaterMark;if(void 0!==e.type)throw new RangeError("The type of an underlying sink must be undefined");const i=makeSizeAlgorithmFromSizeFunction(r);setUpWritableStreamDefaultControllerFromUnderlyingSink(this,e,validateAndNormalizeHighWaterMark(void 0===n?1:n),i);}get locked(){if(!isWritableStream(this))throw new TypeError;return isWritableStreamLocked(this)}abort(e){return isWritableStream(this)?isWritableStreamLocked(this)?Promise.reject(new TypeError("Cannot abort a locked stream")):writableStreamAbort(this,e):Promise.reject(new TypeError)}getWriter(){if(!isWritableStream(this))throw new TypeError;return new WritableStreamDefaultWriter(this)}}function createWritableStream(e,t,r,n,i,o){void 0===i&&(i=1),void 0===o&&(o=()=>1);const s=Object.create(WritableStream.prototype);return initializeWritableStream(s),setUpWritableStreamDefaultController(s,Object.create(WritableStreamDefaultController.prototype),e,t,r,n,i,o),s}const backpressure_$1=Symbol("backpressure_"),backpressureChangePromise_=Symbol("backpressureChangePromise_"),readable_=Symbol("readable_"),transformStreamController_=Symbol("transformStreamController_"),writable_=Symbol("writable_"),controlledTransformStream_=Symbol("controlledTransformStream_"),flushAlgorithm_=Symbol("flushAlgorithm_"),transformAlgorithm_=Symbol("transformAlgorithm_");function isTransformStream(e){return "object"==typeof e&&null!==e&&transformStreamController_ in e}function initializeTransformStream(e,t,r,n,i,o){const s=function(){return t};e[writable_]=createWritableStream(s,(function(t){return transformStreamDefaultSinkWriteAlgorithm(e,t)}),(function(){return transformStreamDefaultSinkCloseAlgorithm(e)}),(function(t){return transformStreamDefaultSinkAbortAlgorithm(e,t)}),r,n),e[readable_]=createReadableStream(s,(function(){return transformStreamDefaultSourcePullAlgorithm(e)}),(function(t){return transformStreamErrorWritableAndUnblockWrite(e,t),Promise.resolve(void 0)}),i,o),e[backpressure_$1]=void 0,e[backpressureChangePromise_]=void 0,transformStreamSetBackpressure(e,!0),e[transformStreamController_]=void 0;}function transformStreamError(e,t){readableStreamDefaultControllerError(e[readable_][readableStreamController_],t),transformStreamErrorWritableAndUnblockWrite(e,t);}function transformStreamErrorWritableAndUnblockWrite(e,t){transformStreamDefaultControllerClearAlgorithms(e[transformStreamController_]),writableStreamDefaultControllerErrorIfNeeded(e[writable_][writableStreamController_],t),e[backpressure_$1]&&transformStreamSetBackpressure(e,!1);}function transformStreamSetBackpressure(e,t){void 0!==e[backpressure_$1]&&e[backpressureChangePromise_].resolve(void 0),e[backpressureChangePromise_]=createControlledPromise(),e[backpressure_$1]=t;}function isTransformStreamDefaultController(e){return "object"==typeof e&&null!==e&&controlledTransformStream_ in e}function setUpTransformStreamDefaultController(e,t,r,n){t[controlledTransformStream_]=e,e[transformStreamController_]=t,t[transformAlgorithm_]=r,t[flushAlgorithm_]=n;}function transformStreamDefaultControllerClearAlgorithms(e){e[transformAlgorithm_]=void 0,e[flushAlgorithm_]=void 0;}function transformStreamDefaultControllerEnqueue(e,t){const r=e[controlledTransformStream_],n=r[readable_][readableStreamController_];if(!readableStreamDefaultControllerCanCloseOrEnqueue(n))throw new TypeError;try{readableStreamDefaultControllerEnqueue(n,t);}catch(e){throw transformStreamErrorWritableAndUnblockWrite(r,e),r[readable_][storedError_]}readableStreamDefaultControllerHasBackpressure(n)!==r[backpressure_$1]&&transformStreamSetBackpressure(r,!0);}function transformStreamDefaultControllerError(e,t){transformStreamError(e[controlledTransformStream_],t);}function transformStreamDefaultControllerPerformTransform(e,t){return e[transformAlgorithm_](t).catch((t=>{throw transformStreamError(e[controlledTransformStream_],t),t}))}function transformStreamDefaultControllerTerminate(e){const t=e[controlledTransformStream_],r=t[readable_][readableStreamController_];readableStreamDefaultControllerCanCloseOrEnqueue(r)&&readableStreamDefaultControllerClose(r),transformStreamErrorWritableAndUnblockWrite(t,new TypeError("The transform stream has been terminated"));}function transformStreamDefaultSinkWriteAlgorithm(e,t){const r=e[transformStreamController_];return e[backpressure_$1]?e[backpressureChangePromise_].promise.then((n=>{const i=e[writable_];if("erroring"===i[state_])throw i[storedError_];return transformStreamDefaultControllerPerformTransform(r,t)})):transformStreamDefaultControllerPerformTransform(r,t)}function transformStreamDefaultSinkAbortAlgorithm(e,t){return transformStreamError(e,t),Promise.resolve(void 0)}function transformStreamDefaultSinkCloseAlgorithm(e){const t=e[readable_],r=e[transformStreamController_],n=r[flushAlgorithm_]();return transformStreamDefaultControllerClearAlgorithms(r),n.then((e=>{if("errored"===t[state_])throw t[storedError_];const r=t[readableStreamController_];readableStreamDefaultControllerCanCloseOrEnqueue(r)&&readableStreamDefaultControllerClose(r);}),(r=>{throw transformStreamError(e,r),t[storedError_]}))}function transformStreamDefaultSourcePullAlgorithm(e){return transformStreamSetBackpressure(e,!1),e[backpressureChangePromise_].promise}class TransformStreamDefaultController{constructor(){throw new TypeError}get desiredSize(){if(!isTransformStreamDefaultController(this))throw new TypeError;return readableStreamDefaultControllerGetDesiredSize(this[controlledTransformStream_][readable_][readableStreamController_])}enqueue(e){if(!isTransformStreamDefaultController(this))throw new TypeError;transformStreamDefaultControllerEnqueue(this,e);}error(e){if(!isTransformStreamDefaultController(this))throw new TypeError;transformStreamDefaultControllerError(this,e);}terminate(){if(!isTransformStreamDefaultController(this))throw new TypeError;transformStreamDefaultControllerTerminate(this);}}class TransformStream$1{constructor(e={},t={},r={}){const n=t.size,i=t.highWaterMark,o=r.size,s=r.highWaterMark;if(void 0!==e.writableType)throw new RangeError("The transformer's `writableType` field must be undefined");const a=makeSizeAlgorithmFromSizeFunction(n),l=validateAndNormalizeHighWaterMark(void 0===i?1:i);if(void 0!==e.readableType)throw new RangeError("The transformer's `readableType` field must be undefined");const u=makeSizeAlgorithmFromSizeFunction(o),c=validateAndNormalizeHighWaterMark(void 0===s?0:s),h=createControlledPromise();initializeTransformStream(this,h.promise,l,a,c,u),setUpTransformStreamDefaultControllerFromTransformer(this,e);const d=invokeOrNoop(e,"start",[this[transformStreamController_]]);h.resolve(d);}get readable(){if(!isTransformStream(this))throw new TypeError;return this[readable_]}get writable(){if(!isTransformStream(this))throw new TypeError;return this[writable_]}}function setUpTransformStreamDefaultControllerFromTransformer(e,t){const r=Object.create(TransformStreamDefaultController.prototype);let n;const i=t.transform;if(void 0!==i){if("function"!=typeof i)throw new TypeError("`transform` field of the transformer must be a function");n=e=>promiseCall(i,t,[e,r]);}else n=function(e){try{transformStreamDefaultControllerEnqueue(r,e);}catch(e){return Promise.reject(e)}return Promise.resolve(void 0)};const o=createAlgorithmFromUnderlyingMethod(t,"flush",[r]);setUpTransformStreamDefaultController(e,r,n,o);}class ByteLengthQueuingStrategy{constructor(e){this.highWaterMark=e.highWaterMark;}size(e){return e.byteLength}}class CountQueuingStrategy{constructor(e){this.highWaterMark=e.highWaterMark;}size(){return 1}}function wrapReadableStream(e,t){let r;return new t({start(t){r=e.getReader(),r.closed.catch((e=>{t.error(e);}));},pull:e=>r.read().then((({value:t,done:r})=>{r?e.close():e.enqueue(t);}),(t=>{e.error(t);})),cancel(e){r.cancel(e);}})}function getMIMETypeFromHeadersInit(e){const t="Content-Type";if(void 0===e)return "";if(e instanceof Headers)return e.get(t)||"";if(Array.isArray(e)){const r=e.find((e=>Array.isArray(e)&&2===e.length&&e[0]===t));return r?r[1]:""}return e[t]||""}function resolveRequestInitStream(e,t,r){if(void 0===e)return Promise.resolve(e);const n=e.body;let i;if(n&&"object"==typeof n&&(t&&n instanceof t||n instanceof r)&&(i=n),!i)return Promise.resolve(e);const o=getMIMETypeFromHeadersInit(e.headers);return readAllBytesFromStream(i.getReader(),o).then((t=>(e.body=t,e)))}function createAdaptedFetch(e,t,r,n,i){return function(o,s){return resolveRequestInitStream(s,r,n).then((r=>e.call(void 0,o,r).then((e=>{if("body"in e){const r=e;let o,a;e=new Proxy(r,{get(l,u,c){let h;return "body"===u?(void 0===o&&(o=wrapReadableStream(r.body,n)),h=o):"clone"===u?(void 0===a&&(a=function(){const[r,n]=i(e.body,!0);return o=r,createResponseProxyWithStreamBody(t,i,n,s)}),h=a):h=l[u],"function"==typeof h?function(...e){return h.apply(l,e)}:h}});}else e.body=new n({pull:t=>e.arrayBuffer().then((e=>{t.enqueue(new Uint8Array(e)),t.close();}),(e=>{t.error(e);}))}),e.clone=function(){const[r,n]=i(e.body,!0);return e.body=r,createResponseProxyWithStreamBody(t,i,n,s)};return e}))))}}function readAllBytesFromStream(e,t){return new Promise(((r,n)=>{const i=[];!function o(){e.read().then((({value:e,done:s})=>{s?function(){0===i.length&&i.push(new Uint8Array(0));const e=new Blob(i,{type:t});r(e);}():e instanceof Uint8Array?(i.push(e),o()):n(new TypeError("A ReadableStream body must only yield Uint8Array values"));}),(e=>{n(e);}));}();}))}function createResponseProxyWithStreamBody(e,t,r,n){const i=new e("fake",n),o=getMIMETypeFromHeadersInit(i.headers);let s,a=!1;function l(){return void 0===s&&(s=new Promise(((t,i)=>{if(a=!0,r.locked)return i(new TypeError("The ReadableStream is locked"));readAllBytesFromStream(r.getReader(),o).then((r=>{t(new e(r,n));})).catch((e=>{i(e);}));}))),s}return new class{get type(){return i.type}get url(){return i.url}get redirected(){return i.redirected}get status(){return i.status}get ok(){return i.ok}get statusText(){return i.statusText}get headers(){return i.headers}clone(){const[i,o]=t(r,!0);return r=i,createResponseProxyWithStreamBody(e,t,o,n)}get body(){return r}get bodyUsed(){return a}arrayBuffer(){return l().then((e=>e.arrayBuffer()))}blob(){return l().then((e=>e.blob()))}formData(){return l().then((e=>e.formData()))}json(){return l().then((e=>e.json()))}text(){return l().then((e=>e.text()))}}}function createAdaptedResponse(e,t,r,n){const i=function(i,o){if(i instanceof r){if(void 0===t||!("body"in e))return createResponseProxyWithStreamBody(e,n,i,o);i=wrapReadableStream(i,t);}return new e(i,o)};return i.prototype=e.prototype,i}const decDecoder=Symbol("decDecoder"),decTransform=Symbol("decTransform");class TextDecodeTransformer{constructor(e){this.decoder_=e;}transform(e,t){if(!(e instanceof ArrayBuffer||ArrayBuffer.isView(e)))throw new TypeError("Input data must be a BufferSource");const r=this.decoder_.decode(e,{stream:!0});0!==r.length&&t.enqueue(r);}flush(e){const t=this.decoder_.decode();0!==t.length&&e.enqueue(t);}}class TextDecoderStream{constructor(e,t){this[decDecoder]=new TextDecoder(e,t),this[decTransform]=new TransformStream(new TextDecodeTransformer(this[decDecoder]));}get encoding(){return this[decDecoder].encoding}get fatal(){return this[decDecoder].fatal}get ignoreBOM(){return this[decDecoder].ignoreBOM}get readable(){return this[decTransform].readable}get writable(){return this[decTransform].writable}}const encEncoder=Symbol("encEncoder"),encTransform=Symbol("encTransform");class TextEncodeTransformer{constructor(e){this.encoder_=e,this.partial_=void 0;}transform(e,t){let r=String(e);void 0!==this.partial_&&(r=this.partial_+r,this.partial_=void 0);const n=r.length-1,i=r.charCodeAt(n);i>=55296&&i<56320&&(this.partial_=String.fromCharCode(i),r=r.substring(0,n));const o=this.encoder_.encode(r);0!==o.length&&t.enqueue(o);}flush(e){this.partial_&&(e.enqueue(this.encoder_.encode(this.partial_)),this.partial_=void 0);}}class TextEncoderStream{constructor(){this[encEncoder]=new TextEncoder,this[encTransform]=new TransformStream(new TextEncodeTransformer(this[encEncoder]));}get encoding(){return this[encEncoder].encoding}get readable(){return this[encTransform].readable}get writable(){return this[encTransform].writable}}const PRESET_DICT=32,Z_DEFLATED=8,GZIP_ID1=31,GZIP_ID2=139,inflate_mask=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],swap32=e=>(e>>>24&255|e>>>8&65280|(65280&e)<<8|(255&e)<<24)>>>0;function u8ArrayFromBufferSource(e){return e instanceof ArrayBuffer?new Uint8Array(e):ArrayBuffer.isView(e)?e instanceof Uint8Array?e:new Uint8Array(e.buffer,e.byteOffset,e.byteLength):void 0}function adler32(e,t=1){const r=u8ArrayFromBufferSource(e);if(!r)throw new TypeError("source must be a BufferSource");return computeAdler32(r,t)}const BASE=65521,NMAX=5552;function computeAdler32(e,t=1){let r=t>>>16&65535;t&=65535;let n=e.length,i=0;for(;n>=NMAX;){n-=NMAX;let o=NMAX/16;do{r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++];}while(--o);t%=BASE,r+=BASE;}if(n){for(;n>=16;)n-=16,r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++],r+=t+=e[i++];for(;n--;)r+=t+=e[i++];t%=BASE,r%=BASE;}return t|r<<16}function crc32(e,t=0){const r=u8ArrayFromBufferSource(e);if(!r)throw new TypeError("source must be a BufferSource");return computeCRC32(r,t)}const endian=new Uint32Array([1]),endianCheck=new Uint8Array(endian.buffer,0,1)[0],computeCRC32=1===endianCheck?computeCRC32Little:computeCRC32Big;function computeCRC32Little(e,t=0){let r=~t,n=e.byteOffset,i=0,o=e.byteLength;const s=crcTables[0],a=crcTables[1],l=crcTables[2],u=crcTables[3];for(;o&&3&n;)r=s[255&(r^e[i++])]^r>>>8,o--,n++;const c=new Uint32Array(e.buffer,n,o>>>2);let h=0;for(;o>=32;)r^=c[h++],r=u[255&r]^l[r>>>8&255]^a[r>>>16&255]^s[r>>>24],r^=c[h++],r=u[255&r]^l[r>>>8&255]^a[r>>>16&255]^s[r>>>24],r^=c[h++],r=u[255&r]^l[r>>>8&255]^a[r>>>16&255]^s[r>>>24],r^=c[h++],r=u[255&r]^l[r>>>8&255]^a[r>>>16&255]^s[r>>>24],r^=c[h++],r=u[255&r]^l[r>>>8&255]^a[r>>>16&255]^s[r>>>24],r^=c[h++],r=u[255&r]^l[r>>>8&255]^a[r>>>16&255]^s[r>>>24],r^=c[h++],r=u[255&r]^l[r>>>8&255]^a[r>>>16&255]^s[r>>>24],r^=c[h++],r=u[255&r]^l[r>>>8&255]^a[r>>>16&255]^s[r>>>24],o-=32;for(;o>=4;)r^=c[h++],r=u[255&r]^l[r>>>8&255]^a[r>>>16&255]^s[r>>>24],o-=4;if(o){i+=4*h;do{r=s[255&(r^e[i++])]^r>>>8;}while(--o)}return r=~r,r}function computeCRC32Big(e,t=0){let r=~swap32(t),n=e.byteOffset,i=0,o=e.byteLength;const s=crcTables[4],a=crcTables[5],l=crcTables[6],u=crcTables[7];for(;o&&3&n;)r=s[r>>>24^e[i++]]^r<<8,o--,n++;const c=new Uint32Array(e.buffer,n,o>>>2);let h=0;for(;o>=32;)r^=c[h++],r=s[255&r]^a[r>>>8&255]^l[r>>>16&255]^u[r>>>24],r^=c[h++],r=s[255&r]^a[r>>>8&255]^l[r>>>16&255]^u[r>>>24],r^=c[h++],r=s[255&r]^a[r>>>8&255]^l[r>>>16&255]^u[r>>>24],r^=c[h++],r=s[255&r]^a[r>>>8&255]^l[r>>>16&255]^u[r>>>24],r^=c[h++],r=s[255&r]^a[r>>>8&255]^l[r>>>16&255]^u[r>>>24],r^=c[h++],r=s[255&r]^a[r>>>8&255]^l[r>>>16&255]^u[r>>>24],r^=c[h++],r=s[255&r]^a[r>>>8&255]^l[r>>>16&255]^u[r>>>24],r^=c[h++],r=s[255&r]^a[r>>>8&255]^l[r>>>16&255]^u[r>>>24],o-=32;for(;o>=4;)r^=c[h++],r=s[255&r]^a[r>>>8&255]^l[r>>>16&255]^u[r>>>24],o-=4;if(o){i+=4*h;do{r=s[r>>>24^e[i++]]^r<<8;}while(--o)}return r=~r,swap32(r)}function makeCRCTables(){const e=new ArrayBuffer(8192),t=[new Uint32Array(e,0,256),new Uint32Array(e,1024,256),new Uint32Array(e,2048,256),new Uint32Array(e,3072,256),new Uint32Array(e,4096,256),new Uint32Array(e,5120,256),new Uint32Array(e,6144,256),new Uint32Array(e,7168,256)];for(let e=0;e<256;e++){let r=e;for(let e=0;e<8;e++)r=1&r?3988292384^r>>>1:r>>>1;t[0][e]=r,t[4][e]=swap32(r);}for(let e=0;e<256;e++){let r=t[0][e];for(let n=1;n<4;n++)r=t[0][255&r]^r>>>8,t[n][e]=r,t[n+4][e]=swap32(r);}return t}const crcTables=makeCRCTables(),OUTPUT_BUFSIZE=16384;class ZStream{constructor(){this.avail_in=0,this.next_in_index=0,this.next_out=new Uint8Array(OUTPUT_BUFSIZE),this.avail_out=this.next_out.byteLength,this.next_out_index=0,this.total_in=this.total_out=0,this.msg="";}append(e){this.next_in=e,this.avail_in=e.length,this.next_in_index=0;}read_buf(e,t){return this.next_in.subarray(e,e+t)}read_into_buf(e,t,r){let n=this.avail_in;return n>r&&(n=r),0===n?0:(e.set(this.next_in.subarray(this.next_in_index,this.next_in_index+n),t),this.avail_in-=n,this.next_in_index+=n,this.total_in+=n,n)}flush_pending(e){var t=e.pending;t>this.avail_out&&(t=this.avail_out),0!==t&&(this.next_out.set(e.pending_buf.subarray(e.pending_out,e.pending_out+t),this.next_out_index),this.next_out_index+=t,e.pending_out+=t,this.total_out+=t,this.avail_out-=t,e.pending-=t,0===e.pending&&(e.pending_out=0));}}function InfCodes(){let e,t,r,n,i=0,o=0,s=0,a=0,l=0,u=0,c=0,h=0,d=0,f=0;function p(e,t,r,n,i,o,s,a){let l,u,c,h,d,f,p,m,y,g,v,b,w,_,S,E;p=a.next_in_index,m=a.avail_in,d=s.bitb,f=s.bitk,y=s.write,g=y<s.read?s.read-y-1:s.end-y,v=inflate_mask[e],b=inflate_mask[t];do{for(;f<20;)m--,d|=(255&a.next_in[p++])<<f,f+=8;if(l=d&v,u=r,c=n,E=3*(c+l),h=u[E],0!==h)for(;;){if(d>>=u[E+1],f-=u[E+1],0!=(16&h)){for(h&=15,w=u[E+2]+(d&inflate_mask[h]),d>>=h,f-=h;f<15;)m--,d|=(255&a.next_in[p++])<<f,f+=8;for(l=d&b,u=i,c=o,E=3*(c+l),h=u[E];;){if(d>>=u[E+1],f-=u[E+1],0!=(16&h)){for(h&=15;f<h;)m--,d|=(255&a.next_in[p++])<<f,f+=8;if(_=u[E+2]+(d&inflate_mask[h]),d>>=h,f-=h,g-=w,y>=_)S=y-_,s.window[y++]=s.window[S++],s.window[y++]=s.window[S++],w-=2;else {S=y-_;do{S+=s.end;}while(S<0);if(h=s.end-S,w>h){w-=h;do{s.window[y++]=s.window[S++];}while(0!=--h);S=0;}}do{s.window[y++]=s.window[S++];}while(0!=--w);break}if(0!=(64&h))return a.msg="invalid distance code",w=a.avail_in-m,w=f>>3<w?f>>3:w,m+=w,p-=w,f-=w<<3,s.bitb=d,s.bitk=f,a.avail_in=m,a.total_in+=p-a.next_in_index,a.next_in_index=p,s.write=y,-3;l+=u[E+2],l+=d&inflate_mask[h],E=3*(c+l),h=u[E];}break}if(0!=(64&h))return 0!=(32&h)?(w=a.avail_in-m,w=f>>3<w?f>>3:w,m+=w,p-=w,f-=w<<3,s.bitb=d,s.bitk=f,a.avail_in=m,a.total_in+=p-a.next_in_index,a.next_in_index=p,s.write=y,1):(a.msg="invalid literal/length code",w=a.avail_in-m,w=f>>3<w?f>>3:w,m+=w,p-=w,f-=w<<3,s.bitb=d,s.bitk=f,a.avail_in=m,a.total_in+=p-a.next_in_index,a.next_in_index=p,s.write=y,-3);if(l+=u[E+2],l+=d&inflate_mask[h],E=3*(c+l),h=u[E],0===h){d>>=u[E+1],f-=u[E+1],s.window[y++]=u[E+2],g--;break}}else d>>=u[E+1],f-=u[E+1],s.window[y++]=u[E+2],g--;}while(g>=258&&m>=10);return w=a.avail_in-m,w=f>>3<w?f>>3:w,m+=w,p-=w,f-=w<<3,s.bitb=d,s.bitk=f,a.avail_in=m,a.total_in+=p-a.next_in_index,a.next_in_index=p,s.write=y,0}return {init:function(t,i,o,s,a,l){e=0,c=t,h=i,r=o,d=s,n=a,f=l;},proc:function(m,y,g){let v,b,w,_,S,E,k,A=0,P=0,x=0;for(x=y.next_in_index,_=y.avail_in,A=m.bitb,P=m.bitk,S=m.write,E=S<m.read?m.read-S-1:m.end-S;;)switch(e){case 0:if(E>=258&&_>=10&&(m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,g=p(c,h,r,d,n,f,m,y),x=y.next_in_index,_=y.avail_in,A=m.bitb,P=m.bitk,S=m.write,E=S<m.read?m.read-S-1:m.end-S,0!==g)){e=1===g?7:9;break}s=c,t=r,o=d,e=1;case 1:for(v=s;P<v;){if(0===_)return m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);g=0,_--,A|=(255&y.next_in[x++])<<P,P+=8;}if(b=3*(o+(A&inflate_mask[v])),A>>>=t[b+1],P-=t[b+1],w=t[b],0===w){a=t[b+2],e=6;break}if(0!=(16&w)){l=15&w,i=t[b+2],e=2;break}if(0==(64&w)){s=w,o=b/3+t[b+2];break}if(0!=(32&w)){e=7;break}return e=9,y.msg="invalid literal/length code",g=-3,m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);case 2:for(v=l;P<v;){if(0===_)return m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);g=0,_--,A|=(255&y.next_in[x++])<<P,P+=8;}i+=A&inflate_mask[v],A>>=v,P-=v,s=h,t=n,o=f,e=3;case 3:for(v=s;P<v;){if(0===_)return m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);g=0,_--,A|=(255&y.next_in[x++])<<P,P+=8;}if(b=3*(o+(A&inflate_mask[v])),A>>=t[b+1],P-=t[b+1],w=t[b],0!=(16&w)){l=15&w,u=t[b+2],e=4;break}if(0==(64&w)){s=w,o=b/3+t[b+2];break}return e=9,y.msg="invalid distance code",g=-3,m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);case 4:for(v=l;P<v;){if(0===_)return m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);g=0,_--,A|=(255&y.next_in[x++])<<P,P+=8;}u+=A&inflate_mask[v],A>>=v,P-=v,e=5;case 5:for(k=S-u;k<0;)k+=m.end;for(;0!==i;){if(0===E&&(S===m.end&&0!==m.read&&(S=0,E=S<m.read?m.read-S-1:m.end-S),0===E&&(m.write=S,g=m.inflate_flush(y,g),S=m.write,E=S<m.read?m.read-S-1:m.end-S,S===m.end&&0!==m.read&&(S=0,E=S<m.read?m.read-S-1:m.end-S),0===E)))return m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);m.window[S++]=m.window[k++],E--,k===m.end&&(k=0),i--;}e=0;break;case 6:if(0===E&&(S===m.end&&0!==m.read&&(S=0,E=S<m.read?m.read-S-1:m.end-S),0===E&&(m.write=S,g=m.inflate_flush(y,g),S=m.write,E=S<m.read?m.read-S-1:m.end-S,S===m.end&&0!==m.read&&(S=0,E=S<m.read?m.read-S-1:m.end-S),0===E)))return m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);g=0,m.window[S++]=a,E--,e=0;break;case 7:if(P>7&&(P-=8,_++,x--),m.write=S,g=m.inflate_flush(y,g),S=m.write,E=S<m.read?m.read-S-1:m.end-S,m.read!==m.write)return m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);e=8;case 8:return g=1,m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);case 9:return g=-3,m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g);default:return g=-2,m.bitb=A,m.bitk=P,y.avail_in=_,y.total_in+=x-y.next_in_index,y.next_in_index=x,m.write=S,m.inflate_flush(y,g)}}}}const fixed_bl=9,fixed_bd=5,fixed_tl=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],fixed_td=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],cplens=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],cplext=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],cpdist=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],cpdext=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],BMAX=15;let v;const hn=[0],c=new Int32Array(BMAX+1),r=new Int32Array(3),u=new Int32Array(BMAX),x=new Int32Array(BMAX+1);function huft_build(e,t,n,i,o,s,a,l,h,d,f){let p,m,y,g,v,b,w,_,S,E,k,A,P,C,T;E=0,v=n;do{c[e[t+E]]++,E++,v--;}while(0!==v);if(c[0]===n)return a[0]=-1,l[0]=0,0;for(_=l[0],b=1;b<=BMAX&&0===c[b];b++);for(w=b,_<b&&(_=b),v=BMAX;0!==v&&0===c[v];v--);for(y=v,_>v&&(_=v),l[0]=_,C=1<<b;b<v;b++,C<<=1)if(C-=c[b],C<0)return -3;if(C-=c[v],C<0)return -3;for(c[v]+=C,x[1]=b=0,E=1,P=2;0!=--v;)x[P]=b+=c[E],P++,E++;v=0,E=0;do{b=e[t+E],0!==b&&(f[x[b]++]=v),E++;}while(++v<n);for(n=x[y],x[0]=v=0,E=0,g=-1,A=-_,u[0]=0,k=0,T=0;w<=y;w++)for(p=c[w];0!=p--;){for(;w>A+_;){if(g++,A+=_,T=y-A,T=T>_?_:T,m=1<<(b=w-A),m>p+1&&(m-=p+1,P=w,b<T))for(;++b<T&&(m<<=1,!(m<=c[++P]));)m-=c[P];if(T=1<<b,d[0]+T>1400)return -3;u[g]=k=d[0],d[0]+=T,0!==g?(x[g]=v,r[0]=b,r[1]=_,b=v>>>A-_,r[2]=k-u[g-1]-b,h.set(r,3*(u[g-1]+b))):a[0]=k;}for(r[1]=w-A,E>=n?r[0]=192:f[E]<i?(r[0]=f[E]<256?0:96,r[2]=f[E++]):(r[0]=s[f[E]-i]+16+64,r[2]=o[f[E++]-i]),m=1<<w-A,b=v>>>A;b<T;b+=m)h.set(r,3*(k+b));for(b=1<<w-1;0!=(v&b);b>>>=1)v^=b;for(v^=b,S=(1<<A)-1;(v&S)!==x[g];)g--,A-=_,S=(1<<A)-1;}return 0!==C&&1!==y?-5:0}function initWorkArea(e){v=new Int32Array(e);for(let e=0;e<BMAX+1;e++)c[e]=0,u[e]=0,x[e]=0;for(let e=0;e<3;e++)r[e]=0;}function inflate_trees_bits(e,t,r,n,i){initWorkArea(19),hn[0]=0;let o=huft_build(e,0,19,19,null,null,r,t,n,hn,v);return -3===o?i.msg="oversubscribed dynamic bit lengths tree":-5!==o&&0!==t[0]||(i.msg="incomplete dynamic bit lengths tree",o=-3),o}function inflate_trees_dynamic(e,t,r,n,i,o,s,a,l){initWorkArea(288),hn[0]=0;let u=huft_build(r,0,e,257,cplens,cplext,o,n,a,hn,v);return 0!==u||0===n[0]?(-3===u?l.msg="oversubscribed literal/length tree":(l.msg="incomplete literal/length tree",u=-3),u):(initWorkArea(288),u=huft_build(r,e,t,0,cpdist,cpdext,s,i,a,hn,v),0!==u||0===i[0]&&e>257?(-3===u?l.msg="oversubscribed distance tree":-5===u?(l.msg="incomplete distance tree",u=-3):(l.msg="empty distance tree with lengths",u=-3),u):0)}function inflate_trees_fixed(e,t,r,n){return e[0]=fixed_bl,t[0]=fixed_bd,r[0]=fixed_tl,n[0]=fixed_td,0}const border=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];class InfBlocks{constructor(e){this.codes=InfCodes(),this.hufts=new Int32Array(4200),this.mode=0,this.bitk=0,this.bitb=0,this.read=0,this.write=0,this.last=0,this.end=e,this.window=new Uint8Array(e);}reset(){this.bitk=0,this.bitb=0,this.read=0,this.write=0,this.last=0;}inflate_flush(e,t){let r,n,i;return n=e.next_out_index,i=this.read,r=(i<=this.write?this.write:this.end)-i,r>e.avail_out&&(r=e.avail_out),0!==r&&-5===t&&(t=0),e.avail_out-=r,e.total_out+=r,e.next_out.set(this.window.subarray(i,i+r),n),n+=r,i+=r,i===this.end&&(i=0,this.write===this.end&&(this.write=0),r=this.write-i,r>e.avail_out&&(r=e.avail_out),0!==r&&-5===t&&(t=0),e.avail_out-=r,e.total_out+=r,e.next_out.set(this.window.subarray(i,i+r),n),n+=r,i+=r),e.next_out_index=n,this.read=i,t}proc(e,t){let r,n,i,o,s,a,l,u,c=0,h=0,d=0;const f=new Uint8Array(320),p=[0],m=[0],y=this.codes,g=this.hufts;for(o=e.next_in_index,s=e.avail_in,n=this.bitb,i=this.bitk,a=this.write,l=a<this.read?this.read-a-1:this.end-a;;)switch(this.mode){case 0:if(this.last)return 1;for(;i<3;){if(0===s)return this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);t=0,s--,n|=(255&e.next_in[o++])<<i,i+=8;}switch(r=7&n,this.last=1&r,r>>>1){case 0:n>>>=3,i-=3,r=7&i,n>>>=r,i-=r,this.mode=1;break;case 1:const l=[0],u=[0],c=[[]],h=[[]];inflate_trees_fixed(l,u,c,h),y.init(l[0],u[0],c[0],0,h[0],0),n>>>=3,i-=3,this.mode=6;break;case 2:n>>>=3,i-=3,this.mode=3;break;case 3:return n>>>=3,i-=3,this.mode=9,e.msg="invalid block type",t=-3,this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t)}break;case 1:for(;i<32;){if(0===s)return this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);t=0,s--,n|=(255&e.next_in[o++])<<i,i+=8;}if((~n>>>16&65535)!=(65535&n))return this.mode=9,e.msg="invalid stored block lengths",t=-3,this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);c=65535&n,n=i=0,this.mode=0!==c?2:0!==this.last?7:0;break;case 2:if(0===s)return this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);if(0===l&&(a===this.end&&0!==this.read&&(a=0,l=a<this.read?this.read-a-1:this.end-a),0===l&&(this.write=a,t=this.inflate_flush(e,t),a=this.write,l=a<this.read?this.read-a-1:this.end-a,a===this.end&&0!==this.read&&(a=0,l=a<this.read?this.read-a-1:this.end-a),0===l)))return this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);if(t=0,r=c,r>s&&(r=s),r>l&&(r=l),this.window.set(e.read_buf(o,r),a),o+=r,s-=r,a+=r,l-=r,c-=r,0!==c)break;this.mode=0!==this.last?7:0;break;case 3:for(;i<14;){if(0===s)return this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);t=0,s--,n|=(255&e.next_in[o++])<<i,i+=8;}if(h=r=16383&n,(31&r)>29||(r>>5&31)>29)return this.mode=9,e.msg="too many length or distance symbols",t=-3,this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);for(r=258+(31&r)+(r>>5&31),u=0;u<r;u++)f[u]=0;for(n>>>=14,i-=14,d=0,this.mode=4;d<4+(h>>>10);){for(;i<3;){if(0===s)return this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);t=0,s--,n|=(255&e.next_in[o++])<<i,i+=8;}f[border[d++]]=7&n,n>>>=3,i-=3;}for(;d<19;)f[border[d++]]=0;if(p[0]=7,r=inflate_trees_bits(f,p,m,g,e),0!==r)return -3===(t=r)&&(this.mode=9),this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);for(d=0,this.mode=5;r=h,!(d>=258+(31&r)+(r>>5&31));){let l,c;for(r=p[0];i<r;){if(0===s)return this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);t=0,s--,n|=(255&e.next_in[o++])<<i,i+=8;}if(r=g[3*(m[0]+(n&inflate_mask[r]))+1],c=g[3*(m[0]+(n&inflate_mask[r]))+2],c<16)n>>>=r,i-=r,f[d++]=c;else {for(u=18===c?7:c-14,l=18===c?11:3;i<r+u;){if(0===s)return this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);t=0,s--,n|=(255&e.next_in[o++])<<i,i+=8;}if(n>>>=r,i-=r,l+=n&inflate_mask[u],n>>>=u,i-=u,u=d,r=h,u+l>258+(31&r)+(r>>5&31)||16===c&&u<1)return this.mode=9,e.msg="invalid bit length repeat",t=-3,this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);c=16===c?f[u-1]:0;do{f[u++]=c;}while(0!=--l);d=u;}}m[0]=-1;const v=[9],b=[6],w=[0],_=[0];if(r=inflate_trees_dynamic(257+(31&r),1+(r>>5&31),f,v,b,w,_,g,e),0!==r)return -3===r&&(this.mode=9),t=r,this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);y.init(v[0],b[0],g,w[0],g,_[0]),this.mode=6;case 6:if(this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,1!==(t=y.proc(this,e,t)))return this.inflate_flush(e,t);if(t=0,o=e.next_in_index,s=e.avail_in,n=this.bitb,i=this.bitk,a=this.write,l=a<this.read?this.read-a-1:this.end-a,0===this.last){this.mode=0;break}this.mode=7;case 7:if(this.write=a,t=this.inflate_flush(e,t),a=this.write,l=a<this.read?this.read-a-1:this.end-a,this.read!==this.write)return this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);this.mode=8;case 8:return t=1,this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);case 9:return t=-3,this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t);default:return t=-2,this.bitb=n,this.bitk=i,e.avail_in=s,e.total_in+=o-e.next_in_index,e.next_in_index=o,this.write=a,this.inflate_flush(e,t)}}set_dictionary(e,t,r){this.window.set(e.subarray(t,t+r),0),this.read=this.write=r;}}class Inflate{constructor(e){this.isGZip=!1,this.method=0,this.gflags=0,this.name="",this.mtime=0,this.xlen=0,this.dictChecksum=0,this.fullChecksum=0,this.inflatedSize=0,this.wbits=0,this.wbits=15,this.blocks=new InfBlocks(1<<this.wbits),this.mode=e?22:0;}get isComplete(){const{blocks:e}=this,t=(0===e.mode||8===e.mode)&&0===e.bitb&&0===e.bitk;return 31===this.mode&&t}get fileName(){return this.name}get modDate(){if(0!==this.mtime)return new Date(1e3*this.mtime)}get checksum(){return this.fullChecksum}get fullSize(){return this.inflatedSize}get containerFormat(){return this.isGZip?2:0===this.method?0:1}inflate(e){let t;if(!e||!e.next_in)return -2;let r=-5;for(;;)switch(this.mode){case 0:if(0===e.avail_in)return r;if(t=e.next_in[e.next_in_index],t!==GZIP_ID1){this.mode=2;break}this.mode=1,r=0,e.avail_in--,e.total_in++,e.next_in_index++;case 1:if(0===e.avail_in)return r;if(r=0,e.avail_in--,e.total_in++,t=e.next_in[e.next_in_index++],t!==GZIP_ID2){this.mode=32,e.msg="invalid gzip id";break}this.isGZip=!0,this.mode=2;case 2:if(0===e.avail_in)return r;if(r=0,e.avail_in--,e.total_in++,this.method=e.next_in[e.next_in_index++],(15&this.method)!==Z_DEFLATED){this.mode=32,e.msg="unknown compression method";break}if(8+(this.method>>4)>this.wbits){this.mode=32,e.msg="invalid window size";break}this.mode=3;case 3:if(0===e.avail_in)return r;if(r=0,e.avail_in--,e.total_in++,t=255&e.next_in[e.next_in_index++],this.isGZip){this.gflags=t,this.mode=9;break}if(((this.method<<8)+t)%31!=0){this.mode=32,e.msg="incorrect header check";break}if(0==(t&PRESET_DICT)){this.mode=22;break}this.mode=4;case 4:if(0===e.avail_in)return r;r=0,e.avail_in--,e.total_in++,this.dictChecksum=(255&e.next_in[e.next_in_index++])<<24&4278190080,this.mode=5;case 5:if(0===e.avail_in)return r;r=0,e.avail_in--,e.total_in++,this.dictChecksum|=(255&e.next_in[e.next_in_index++])<<16&16711680,this.mode=6;case 6:if(0===e.avail_in)return r;r=0,e.avail_in--,e.total_in++,this.dictChecksum|=(255&e.next_in[e.next_in_index++])<<8&65280,this.mode=7;case 7:return 0===e.avail_in?r:(r=0,e.avail_in--,e.total_in++,this.dictChecksum|=255&e.next_in[e.next_in_index++],this.mode=8,2);case 8:return this.mode=32,e.msg="need dictionary",-2;case 9:case 10:case 11:case 12:if(0===e.avail_in)return r;if(r=0,e.avail_in--,e.total_in++,t=255&e.next_in[e.next_in_index++],this.mtime=this.mtime>>>8|t<<24,12!==this.mode){this.mode++;break}this.mode=13;case 13:case 14:case 20:case 21:if(0===e.avail_in)return r;r=0,e.avail_in--,e.total_in++,e.next_in_index++,14===this.mode?4&this.gflags?this.mode=15:8&this.gflags?this.mode=18:16&this.gflags?this.mode=19:2&this.gflags?this.mode=20:this.mode=22:this.mode++;break;case 15:case 16:if(0===e.avail_in)return r;if(r=0,e.avail_in--,e.total_in++,t=255&e.next_in[e.next_in_index++],this.xlen=this.xlen>>>8|t<<24,15===this.mode)break;this.xlen=this.xlen>>>16;case 17:if(0===e.avail_in)return r;r=0,e.avail_in--,e.total_in++,e.next_in_index++,this.xlen--,0===this.xlen&&(8&this.gflags?this.mode=18:16&this.gflags?this.mode=19:2&this.gflags?this.mode=20:this.mode=22);break;case 18:case 19:if(0===e.avail_in)return r;r=0,e.avail_in--,e.total_in++,t=255&e.next_in[e.next_in_index++],0!==t?18===this.mode&&(this.name+=String.fromCharCode(t)):19!==this.mode&&16&this.gflags?this.mode=19:2&this.gflags?this.mode=20:this.mode=22;break;case 22:if(r=this.blocks.proc(e,r),-3===r){this.mode=32;break}if(1!==r)return r;if(r=0,this.blocks.reset(),0===this.method){this.mode=31;break}this.mode=23;case 23:case 24:case 25:case 26:if(0===e.avail_in)return r;r=0,e.avail_in--,e.total_in++,t=255&e.next_in[e.next_in_index++],this.isGZip?this.fullChecksum=this.fullChecksum>>>8|t<<24:this.fullChecksum=this.fullChecksum<<8|t,this.mode++,27!==this.mode||this.isGZip||(this.mode=31);break;case 27:case 28:case 29:case 30:if(0===e.avail_in)return r;r=0,e.avail_in--,e.total_in++,t=255&e.next_in[e.next_in_index++],this.inflatedSize=this.inflatedSize>>>8|t<<24,this.mode++;break;case 31:return 1;case 32:return -3;default:return -2}}inflateSetDictionary(e){if(8!==this.mode)return -2;const t=u8ArrayFromBufferSource(e);if(!t)return -3;let r=0,n=t.byteLength;return n>=1<<this.wbits&&(n=(1<<this.wbits)-1,r=t.byteLength-n),adler32(t)!==this.dictChecksum?-3:(this.blocks.set_dictionary(t,r,n),this.mode=22,0)}}class Inflater{constructor(e){const t=null==e?void 0:e.raw;if(void 0!==t&&!0!==t&&!1!==t)throw new TypeError("options.raw must be undefined or true or false");const r=void 0!==t&&t,n=null==e?void 0:e.dictionary;if(void 0!==n){if(r)throw new RangeError("options.dictionary cannot be set when options.raw is true");if(void 0===u8ArrayFromBufferSource(n))throw new TypeError("options.dictionary must be undefined or a buffer or a buffer view");this.customDict=n;}this.inflate=new Inflate(r),this.z=new ZStream;}append(e){const t=u8ArrayFromBufferSource(e);if(!(t instanceof Uint8Array))throw new TypeError("data must be an ArrayBuffer or buffer view");if(0===t.length)return [];const{inflate:r,z:n}=this,i=[];let o=!1;n.append(t);do{n.next_out_index=0,n.avail_out=OUTPUT_BUFSIZE,0!==n.avail_in||o||(n.next_in_index=0,o=!0);const e=r.inflate(n);if(o&&-5===e){if(0!==n.avail_in)throw new Error("inflate error: bad input")}else if(2===e){if(!this.customDict)throw new Error("Custom dictionary required for this data");if(0!==r.inflateSetDictionary(this.customDict))throw new Error("Custom dictionary is not valid for this data")}else if(0!==e&&1!==e)throw new Error("inflate error: "+n.msg);if((o||1===e)&&n.avail_in===t.length)throw new Error("inflate error: bad input data");if(n.next_out_index){const e=new Uint8Array(n.next_out.subarray(0,n.next_out_index)),t=2===r.containerFormat;void 0===this.checksum&&(this.checksum=t?0:1),this.checksum=t?crc32(e,this.checksum):adler32(e,this.checksum),i.push(e);}}while(n.avail_in>0||0===n.avail_out);return i}finish(){const e=this.inflate.checksum,t=this.inflate.fullSize,r=this.inflate.isComplete,n=0===e?"unchecked":e===this.checksum?"match":"mismatch",i=0===t?"unchecked":t===this.z.total_out?"match":"mismatch";return {success:r&&"mismatch"!==n&&"mismatch"!==i,complete:r,checksum:n,fileSize:i,fileName:this.inflate.fileName,modDate:this.inflate.modDate}}}const D_CODES=30,BL_CODES=19,LENGTH_CODES=29,LITERALS=256,L_CODES=LITERALS+1+LENGTH_CODES,HEAP_SIZE=2*L_CODES+1,MAX_BL_BITS=7,_dist_code=[0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,16,17,18,18,19,19,20,20,20,20,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29];class Tree{constructor(e,t){this.dyn_tree=e,this.stat_desc=t,this.max_code=0;}gen_bitlen(e){var t,r,n,i,o,s,a=this.dyn_tree,l=this.stat_desc.static_tree,u=this.stat_desc.extra_bits,c=this.stat_desc.extra_base,h=this.stat_desc.max_length,d=0;for(i=0;i<=15;i++)e.bl_count[i]=0;for(a[2*e.heap[e.heap_max]+1]=0,t=e.heap_max+1;t<HEAP_SIZE;t++)(i=a[2*a[2*(r=e.heap[t])+1]+1]+1)>h&&(i=h,d++),a[2*r+1]=i,r>this.max_code||(e.bl_count[i]++,o=0,r>=c&&(o=u[r-c]),s=a[2*r],e.opt_len+=s*(i+o),l&&(e.static_len+=s*(l[2*r+1]+o)));if(0!==d){do{for(i=h-1;0===e.bl_count[i];)i--;e.bl_count[i]--,e.bl_count[i+1]+=2,e.bl_count[h]--,d-=2;}while(d>0);for(i=h;0!==i;i--)for(r=e.bl_count[i];0!==r;)(n=e.heap[--t])>this.max_code||(a[2*n+1]!=i&&(e.opt_len+=(i-a[2*n+1])*a[2*n],a[2*n+1]=i),r--);}}bi_reverse(e,t){let r=0;do{r|=1&e,e>>>=1,r<<=1;}while(--t>0);return r>>>1}gen_codes(e,t,r){const n=new Uint16Array(16);let i=0;for(let e=1;e<=15;e++)n[e]=i=i+r[e-1]<<1;for(let r=0;r<=t;r++){const t=e[2*r+1];0!==t&&(e[2*r]=this.bi_reverse(n[t]++,t));}}build_tree(e){var t,r,n,i=this.dyn_tree,o=this.stat_desc.static_tree,s=this.stat_desc.elems,a=-1;for(e.heap_len=0,e.heap_max=HEAP_SIZE,t=0;t<s;t++)0!==i[2*t]?(e.heap[++e.heap_len]=a=t,e.depth[t]=0):i[2*t+1]=0;for(;e.heap_len<2;)i[2*(n=e.heap[++e.heap_len]=a<2?++a:0)]=1,e.depth[n]=0,e.opt_len--,o&&(e.static_len-=o[2*n+1]);for(this.max_code=a,t=Math.floor(e.heap_len/2);t>=1;t--)e.pqdownheap(i,t);n=s;do{t=e.heap[1],e.heap[1]=e.heap[e.heap_len--],e.pqdownheap(i,1),r=e.heap[1],e.heap[--e.heap_max]=t,e.heap[--e.heap_max]=r,i[2*n]=i[2*t]+i[2*r],e.depth[n]=Math.max(e.depth[t],e.depth[r])+1,i[2*t+1]=i[2*r+1]=n,e.heap[1]=n++,e.pqdownheap(i,1);}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],this.gen_bitlen(e),this.gen_codes(i,this.max_code,e.bl_count);}static d_code(e){return e<256?_dist_code[e]:_dist_code[256+(e>>>7)]}}Tree._length_code=[0,1,2,3,4,5,6,7,8,8,9,9,10,10,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28],Tree.base_length=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],Tree.base_dist=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],Tree.extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Tree.extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],Tree.extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],Tree.bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];class StaticTree{constructor(e,t,r,n,i){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=i;}}StaticTree.static_ltree=new Uint16Array([12,8,140,8,76,8,204,8,44,8,172,8,108,8,236,8,28,8,156,8,92,8,220,8,60,8,188,8,124,8,252,8,2,8,130,8,66,8,194,8,34,8,162,8,98,8,226,8,18,8,146,8,82,8,210,8,50,8,178,8,114,8,242,8,10,8,138,8,74,8,202,8,42,8,170,8,106,8,234,8,26,8,154,8,90,8,218,8,58,8,186,8,122,8,250,8,6,8,134,8,70,8,198,8,38,8,166,8,102,8,230,8,22,8,150,8,86,8,214,8,54,8,182,8,118,8,246,8,14,8,142,8,78,8,206,8,46,8,174,8,110,8,238,8,30,8,158,8,94,8,222,8,62,8,190,8,126,8,254,8,1,8,129,8,65,8,193,8,33,8,161,8,97,8,225,8,17,8,145,8,81,8,209,8,49,8,177,8,113,8,241,8,9,8,137,8,73,8,201,8,41,8,169,8,105,8,233,8,25,8,153,8,89,8,217,8,57,8,185,8,121,8,249,8,5,8,133,8,69,8,197,8,37,8,165,8,101,8,229,8,21,8,149,8,85,8,213,8,53,8,181,8,117,8,245,8,13,8,141,8,77,8,205,8,45,8,173,8,109,8,237,8,29,8,157,8,93,8,221,8,61,8,189,8,125,8,253,8,19,9,275,9,147,9,403,9,83,9,339,9,211,9,467,9,51,9,307,9,179,9,435,9,115,9,371,9,243,9,499,9,11,9,267,9,139,9,395,9,75,9,331,9,203,9,459,9,43,9,299,9,171,9,427,9,107,9,363,9,235,9,491,9,27,9,283,9,155,9,411,9,91,9,347,9,219,9,475,9,59,9,315,9,187,9,443,9,123,9,379,9,251,9,507,9,7,9,263,9,135,9,391,9,71,9,327,9,199,9,455,9,39,9,295,9,167,9,423,9,103,9,359,9,231,9,487,9,23,9,279,9,151,9,407,9,87,9,343,9,215,9,471,9,55,9,311,9,183,9,439,9,119,9,375,9,247,9,503,9,15,9,271,9,143,9,399,9,79,9,335,9,207,9,463,9,47,9,303,9,175,9,431,9,111,9,367,9,239,9,495,9,31,9,287,9,159,9,415,9,95,9,351,9,223,9,479,9,63,9,319,9,191,9,447,9,127,9,383,9,255,9,511,9,0,7,64,7,32,7,96,7,16,7,80,7,48,7,112,7,8,7,72,7,40,7,104,7,24,7,88,7,56,7,120,7,4,7,68,7,36,7,100,7,20,7,84,7,52,7,116,7,3,8,131,8,67,8,195,8,35,8,163,8,99,8,227,8]),StaticTree.static_dtree=new Uint16Array([0,5,16,5,8,5,24,5,4,5,20,5,12,5,28,5,2,5,18,5,10,5,26,5,6,5,22,5,14,5,30,5,1,5,17,5,9,5,25,5,5,5,21,5,13,5,29,5,3,5,19,5,11,5,27,5,7,5,23,5]),StaticTree.static_l_desc=new StaticTree(StaticTree.static_ltree,Tree.extra_lbits,LITERALS+1,L_CODES,15),StaticTree.static_d_desc=new StaticTree(StaticTree.static_dtree,Tree.extra_dbits,0,D_CODES,15),StaticTree.static_bl_desc=new StaticTree(null,Tree.extra_blbits,0,BL_CODES,MAX_BL_BITS);const makeConfig=(e,t,r,n,i)=>({good_length:e,max_lazy:t,nice_length:r,max_chain:n,func:i}),config_table=[makeConfig(0,0,0,0,0),makeConfig(4,4,8,4,1),makeConfig(4,5,16,8,1),makeConfig(4,6,32,32,1),makeConfig(4,4,16,16,2),makeConfig(8,16,32,32,2),makeConfig(8,16,128,128,2),makeConfig(8,32,128,256,2),makeConfig(32,128,258,1024,2),makeConfig(32,258,258,4096,2)];function smaller(e,t,r,n){const i=e[2*t],o=e[2*r];return i<o||i==o&&n[t]<=n[r]}const END_BLOCK=256,REP_3_6=16,REPZ_3_10=17,REPZ_11_138=18,STORED_BLOCK=0,STATIC_TREES=1,DYN_TREES=2,MIN_MATCH=3,MAX_MATCH=258,MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1,hash_bits=15,hash_size=1<<hash_bits,hash_mask=hash_size-1,hash_shift=Math.floor((hash_bits+MIN_MATCH-1)/MIN_MATCH),lit_bufsize=16384,pending_buf_size=4*lit_bufsize,d_buf=Math.floor(lit_bufsize/2),l_buf=3*lit_bufsize,window_size=65536;class Deflate{constructor(e,t=6,r=0){if(this.status=1,this.pending_buf=new Uint8Array(pending_buf_size),this.pending=0,this.pending_out=0,this.last_flush=0,this.window=new Uint8Array(window_size),this.prev=new Uint16Array(32768),this.head=new Uint16Array(hash_size),this.ins_h=0,this.block_start=0,this.match_length=MIN_MATCH-1,this.match_available=!1,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=MIN_MATCH-1,this.dyn_ltree=new Uint16Array(2*HEAP_SIZE),this.dyn_dtree=new Uint16Array(2*(2*D_CODES+1)),this.bl_tree=new Uint16Array(2*(2*BL_CODES+1)),this.l_desc=new Tree(this.dyn_ltree,StaticTree.static_l_desc),this.d_desc=new Tree(this.dyn_dtree,StaticTree.static_d_desc),this.bl_desc=new Tree(this.bl_tree,StaticTree.static_bl_desc),this.depth=new Uint16Array(2*L_CODES+1),this.last_lit=0,this.matches=0,this.opt_len=0,this.static_len=0,this.last_eob_len=8,this.bi_buf=0,this.bi_valid=0,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(2*L_CODES+1),this.heap_len=0,this.heap_max=HEAP_SIZE,t<0||t>9||r<0||r>2)throw RangeError("level or strategy is out of range");this.strm=e,this.level=t,this.strategy=r,e.msg="",e.total_in=e.total_out=0,this.init_block();for(let e=0;e<hash_size;++e)this.head[e]=0;this.max_lazy_match=config_table[t].max_lazy,this.good_match=config_table[t].good_length,this.nice_match=config_table[t].nice_length,this.max_chain_length=config_table[t].max_chain;}init_block(){for(let e=0;e<L_CODES;e++)this.dyn_ltree[2*e]=0;for(let e=0;e<D_CODES;e++)this.dyn_dtree[2*e]=0;for(let e=0;e<BL_CODES;e++)this.bl_tree[2*e]=0;this.dyn_ltree[2*END_BLOCK]=1,this.opt_len=this.static_len=0,this.last_lit=this.matches=0;}pqdownheap(e,t){const r=this.heap,n=r[t];let i=t<<1;for(;i<=this.heap_len&&(i<this.heap_len&&smaller(e,r[i+1],r[i],this.depth)&&i++,!smaller(e,n,r[i],this.depth));)r[t]=r[i],t=i,i<<=1;r[t]=n;}scan_tree(e,t){var r,n=-1,i=e[1],o=0,s=7,a=4;0===i&&(s=138,a=3),e[2*(t+1)+1]=65535;for(let l=0;l<=t;l++)r=i,i=e[2*(l+1)+1],++o<s&&r==i||(o<a?this.bl_tree[2*r]+=o:0!==r?(r!=n&&this.bl_tree[2*r]++,this.bl_tree[2*REP_3_6]++):o<=10?this.bl_tree[2*REPZ_3_10]++:this.bl_tree[2*REPZ_11_138]++,o=0,n=r,0===i?(s=138,a=3):r==i?(s=6,a=3):(s=7,a=4));}build_bl_tree(){let e;for(this.scan_tree(this.dyn_ltree,this.l_desc.max_code),this.scan_tree(this.dyn_dtree,this.d_desc.max_code),this.bl_desc.build_tree(this),e=BL_CODES-1;e>=3&&0===this.bl_tree[2*Tree.bl_order[e]+1];e--);return this.opt_len+=3*(e+1)+5+5+4,e}put_short(e){this.pending_buf[this.pending++]=255&e,this.pending_buf[this.pending++]=e>>>8&255;}send_bits(e,t){if(this.bi_valid>16-t){this.bi_buf|=e<<this.bi_valid&65535;const r=this.pending;this.pending_buf[r]=this.bi_buf,this.pending_buf[r+1]=this.bi_buf>>>8,this.pending=r+2,this.bi_buf=e>>>16-this.bi_valid,this.bi_valid+=t-16;}else this.bi_buf|=e<<this.bi_valid&65535,this.bi_valid+=t;}send_code(e,t){const r=2*e;this.send_bits(65535&t[r],65535&t[r+1]);}send_tree(e,t){var r,n=-1,i=e[1],o=0,s=7,a=4;0===i&&(s=138,a=3);for(let l=0;l<=t;l++)if(r=i,i=e[2*(l+1)+1],!(++o<s&&r==i)){if(o<a)do{this.send_code(r,this.bl_tree);}while(0!=--o);else 0!==r?(r!=n&&(this.send_code(r,this.bl_tree),o--),this.send_code(REP_3_6,this.bl_tree),this.send_bits(o-3,2)):o<=10?(this.send_code(REPZ_3_10,this.bl_tree),this.send_bits(o-3,3)):(this.send_code(REPZ_11_138,this.bl_tree),this.send_bits(o-11,7));o=0,n=r,0===i?(s=138,a=3):r==i?(s=6,a=3):(s=7,a=4);}}send_all_trees(e,t,r){this.send_bits(e-257,5),this.send_bits(t-1,5),this.send_bits(r-4,4);for(let e=0;e<r;e++)this.send_bits(this.bl_tree[2*Tree.bl_order[e]+1],3);this.send_tree(this.dyn_ltree,e-1),this.send_tree(this.dyn_dtree,t-1);}bi_flush(){16===this.bi_valid?(this.put_short(this.bi_buf),this.bi_buf=0,this.bi_valid=0):this.bi_valid>=8&&(this.pending_buf[this.pending++]=this.bi_buf,this.bi_buf>>>=8,this.bi_valid-=8);}_tr_align(){this.send_bits(STATIC_TREES<<1,3),this.send_code(END_BLOCK,StaticTree.static_ltree),this.bi_flush(),1+this.last_eob_len+10-this.bi_valid<9&&(this.send_bits(STATIC_TREES<<1,3),this.send_code(END_BLOCK,StaticTree.static_ltree),this.bi_flush()),this.last_eob_len=7;}_tr_tally(e,t){if(this.pending_buf[d_buf+2*this.last_lit]=e>>>8&255,this.pending_buf[d_buf+2*this.last_lit+1]=255&e,this.pending_buf[l_buf+this.last_lit]=255&t,this.last_lit++,0===e?this.dyn_ltree[2*t]++:(this.matches++,e--,this.dyn_ltree[2*(Tree._length_code[t]+LITERALS+1)]++,this.dyn_dtree[2*Tree.d_code(e)]++),0==(8191&this.last_lit)&&this.level>2){let e=8*this.last_lit,t=this.strstart-this.block_start;for(let t=0;t<D_CODES;t++)e+=this.dyn_dtree[2*t]*(5+Tree.extra_dbits[t]);if(e>>>=3,this.matches<Math.floor(this.last_lit/2)&&e<Math.floor(t/2))return !0}return this.last_lit===lit_bufsize-1}compress_block(e,t){let r=0;if(0!==this.last_lit)do{let n=this.pending_buf[d_buf+2*r]<<8&65280|255&this.pending_buf[d_buf+2*r+1],i=255&this.pending_buf[l_buf+r];if(r++,0===n)this.send_code(i,e);else {let r=Tree._length_code[i];this.send_code(r+LITERALS+1,e);let o=Tree.extra_lbits[r];0!==o&&(i-=Tree.base_length[r],this.send_bits(i,o)),n--,r=Tree.d_code(n),this.send_code(r,t),o=Tree.extra_dbits[r],0!==o&&(n-=Tree.base_dist[r],this.send_bits(n,o));}}while(r<this.last_lit);this.send_code(END_BLOCK,e),this.last_eob_len=e[2*END_BLOCK+1];}bi_windup(){this.bi_valid>8?this.put_short(this.bi_buf):this.bi_valid>0&&(this.pending_buf[this.pending++]=this.bi_buf),this.bi_buf=0,this.bi_valid=0;}copy_block(e,t,r){this.bi_windup(),this.last_eob_len=8,r&&(this.put_short(t),this.put_short(~t)),this.pending_buf.set(this.window.subarray(e,e+t),this.pending),this.pending+=t;}_tr_stored_block(e,t,r){this.send_bits((STORED_BLOCK<<1)+(r?1:0),3),this.copy_block(e,t,!0);}_tr_flush_block(e,t,r){let n,i,o=0;this.level>0?(this.l_desc.build_tree(this),this.d_desc.build_tree(this),o=this.build_bl_tree(),n=this.opt_len+3+7>>>3,i=this.static_len+3+7>>>3,i<=n&&(n=i)):n=i=t+5,t+4<=n&&-1!==e?this._tr_stored_block(e,t,r):i==n?(this.send_bits((STATIC_TREES<<1)+(r?1:0),3),this.compress_block(StaticTree.static_ltree,StaticTree.static_dtree)):(this.send_bits((DYN_TREES<<1)+(r?1:0),3),this.send_all_trees(this.l_desc.max_code+1,this.d_desc.max_code+1,o+1),this.compress_block(this.dyn_ltree,this.dyn_dtree)),this.init_block(),r&&this.bi_windup();}flush_block_only(e){this._tr_flush_block(this.block_start>=0?this.block_start:-1,this.strstart-this.block_start,e),this.block_start=this.strstart,this.strm.flush_pending(this);}fill_window(){do{let e=window_size-this.lookahead-this.strstart;if(0===e&&0===this.strstart&&0===this.lookahead)e=32768;else if(-1===e)e--;else if(this.strstart>=65536-MIN_LOOKAHEAD){this.window.set(this.window.subarray(32768,65536),0),this.match_start-=32768,this.strstart-=32768,this.block_start-=32768;let t=hash_size,r=t;do{let e=65535&this.head[--r];this.head[r]=e>=32768?e-32768:0;}while(0!=--t);t=32768,r=t;do{let e=65535&this.prev[--r];this.prev[r]=e>=32768?e-32768:0;}while(0!=--t);e+=32768;}if(0===this.strm.avail_in)return;const t=this.strm.read_into_buf(this.window,this.strstart+this.lookahead,e);this.lookahead+=t,this.lookahead>=MIN_MATCH&&(this.ins_h=255&this.window[this.strstart],this.ins_h=(this.ins_h<<hash_shift^255&this.window[this.strstart+1])&hash_mask);}while(this.lookahead<MIN_LOOKAHEAD&&0!==this.strm.avail_in)}deflate_stored(e){let t=65535;for(t>pending_buf_size-5&&(t=pending_buf_size-5);;){if(this.lookahead<=1){if(this.fill_window(),0===this.lookahead&&0===e)return 0;if(0===this.lookahead)break}this.strstart+=this.lookahead,this.lookahead=0;let r=this.block_start+t;if((0===this.strstart||this.strstart>=r)&&(this.lookahead=this.strstart-r,this.strstart=r,this.flush_block_only(!1),0===this.strm.avail_out))return 0;if(this.strstart-this.block_start>=32768-MIN_LOOKAHEAD&&(this.flush_block_only(!1),0===this.strm.avail_out))return 0}return this.flush_block_only(4===e),0===this.strm.avail_out?4===e?2:0:4===e?3:1}longest_match(e){let t=this.max_chain_length,r=this.strstart,n=this.prev_length,i=this.strstart>32768-MIN_LOOKAHEAD?this.strstart-(32768-MIN_LOOKAHEAD):0,o=this.nice_match;const s=this.window,a=this.strstart+MAX_MATCH;let l=s[r+n-1],u=s[r+n];const c=s[r],h=s[r+1];this.prev_length>=this.good_match&&(t>>=2),o>this.lookahead&&(o=this.lookahead);do{let d=e,f=!0;for(;;){if(d=e,s[d+n]!==u||s[d+n-1]!==l){if((e=this.prev[32767&e])>i&&0!=--t)continue;f=!1;}break}if(!f)break;if(s[d]!==c||s[d+1]!==h)continue;r+=2,d+=2;do{const e=(s[r]<<24|s[r+1]<<16|s[r+2]<<8|s[r+3])^(s[d]<<24|s[d+1]<<16|s[d+2]<<8|s[d+3]);if(e){const t=Math.clz32(e)>>3;r+=t,d+=t;break}r+=4,d+=4;}while(r<a);r>a&&(r=a);let p=MAX_MATCH-(a-r);if(r=a-MAX_MATCH,p>n){if(this.match_start=e,n=p,p>=o)break;l=s[r+n-1],u=s[r+n];}}while((e=this.prev[32767&e])>i&&0!=--t);return n<=this.lookahead?n:this.lookahead}deflate_fast(e){let t,r=0;for(;;){if(this.lookahead<MIN_LOOKAHEAD){if(this.fill_window(),this.lookahead<MIN_LOOKAHEAD&&0===e)return 0;if(0===this.lookahead)break}if(this.lookahead>=MIN_MATCH&&(this.ins_h=(this.ins_h<<hash_shift^255&this.window[this.strstart+(MIN_MATCH-1)])&hash_mask,r=65535&this.head[this.ins_h],this.prev[32767&this.strstart]=this.head[this.ins_h],this.head[this.ins_h]=this.strstart),0!==r&&(this.strstart-r&65535)<=32768-MIN_LOOKAHEAD&&2!==this.strategy&&(this.match_length=this.longest_match(r)),this.match_length>=MIN_MATCH)if(t=this._tr_tally(this.strstart-this.match_start,this.match_length-MIN_MATCH),this.lookahead-=this.match_length,this.match_length<=this.max_lazy_match&&this.lookahead>=MIN_MATCH){this.match_length--;do{this.strstart++,this.ins_h=(this.ins_h<<hash_shift^255&this.window[this.strstart+(MIN_MATCH-1)])&hash_mask,r=65535&this.head[this.ins_h],this.prev[32767&this.strstart]=this.head[this.ins_h],this.head[this.ins_h]=this.strstart;}while(0!=--this.match_length);this.strstart++;}else this.strstart+=this.match_length,this.match_length=0,this.ins_h=255&this.window[this.strstart],this.ins_h=(this.ins_h<<hash_shift^255&this.window[this.strstart+1])&hash_mask;else t=this._tr_tally(0,255&this.window[this.strstart]),this.lookahead--,this.strstart++;if(t&&(this.flush_block_only(!1),0===this.strm.avail_out))return 0}return this.flush_block_only(4===e),0===this.strm.avail_out?4===e?2:0:4===e?3:1}deflate_slow(e){let t,r,n,i=0;for(;;){if(this.lookahead<MIN_LOOKAHEAD){if(this.fill_window(),this.lookahead<MIN_LOOKAHEAD&&0===e)return 0;if(0===this.lookahead)break}if(this.lookahead>=MIN_MATCH&&(this.ins_h=(this.ins_h<<hash_shift^255&this.window[this.strstart+(MIN_MATCH-1)])&hash_mask,i=65535&this.head[this.ins_h],this.prev[32767&this.strstart]=this.head[this.ins_h],this.head[this.ins_h]=this.strstart),this.prev_length=this.match_length,n=this.match_start,this.match_length=MIN_MATCH-1,0!==i&&this.prev_length<this.max_lazy_match&&(this.strstart-i&65535)<=32768-MIN_LOOKAHEAD&&(2!==this.strategy&&(this.match_length=this.longest_match(i)),this.match_length<=5&&(1===this.strategy||this.match_length===MIN_MATCH&&this.strstart-this.match_start>4096)&&(this.match_length=MIN_MATCH-1)),this.prev_length>=MIN_MATCH&&this.match_length<=this.prev_length){r=this.strstart+this.lookahead-MIN_MATCH,t=this._tr_tally(this.strstart-1-n,this.prev_length-MIN_MATCH),this.lookahead-=this.prev_length-1,this.prev_length-=2;do{++this.strstart<=r&&(this.ins_h=(this.ins_h<<hash_shift^255&this.window[this.strstart+(MIN_MATCH-1)])&hash_mask,i=65535&this.head[this.ins_h],this.prev[32767&this.strstart]=this.head[this.ins_h],this.head[this.ins_h]=this.strstart);}while(0!=--this.prev_length);if(this.match_available=!1,this.match_length=MIN_MATCH-1,this.strstart++,t&&(this.flush_block_only(!1),0===this.strm.avail_out))return 0}else if(this.match_available){if(t=this._tr_tally(0,255&this.window[this.strstart-1]),t&&this.flush_block_only(!1),this.strstart++,this.lookahead--,0===this.strm.avail_out)return 0}else this.match_available=!0,this.strstart++,this.lookahead--;}return this.match_available&&(t=this._tr_tally(0,255&this.window[this.strstart-1]),this.match_available=!1),this.flush_block_only(4===e),0===this.strm.avail_out?4===e?2:0:4===e?3:1}deflateSetDictionary(e){const t=e.byteLength;let r,n=t,i=0;if(!e||1!==this.status)return -2;if(n<MIN_MATCH)return 0;for(n>32768-MIN_LOOKAHEAD&&(n=32768-MIN_LOOKAHEAD,i=t-n),this.window.set(e.subarray(i,i+n),0),this.strstart=n,this.block_start=n,this.ins_h=255&this.window[0],this.ins_h=(this.ins_h<<hash_shift^255&this.window[1])&hash_mask,r=0;r<=n-MIN_MATCH;r++)this.ins_h=(this.ins_h<<hash_shift^255&this.window[r+(MIN_MATCH-1)])&hash_mask,this.prev[32767&r]=this.head[this.ins_h],this.head[this.ins_h]=r;return 0}deflate(e){if(e>4||e<0)return -2;const{strm:t}=this;if(!t.next_out||!t.next_in&&0!==t.avail_in||3===this.status&&4!=e)return -2;if(0===t.avail_out)return -5;let r=this.last_flush;if(this.last_flush=e,1===this.status&&(this.status=2),0!==this.pending){if(t.flush_pending(this),0===t.avail_out)return this.last_flush=-1,0}else if(0===t.avail_in&&e<=r&&4!==e)return -5;if(3===this.status&&0!==t.avail_in)return -5;if(0!==t.avail_in||0!==this.lookahead||0!==e&&3!==this.status){let r;switch(config_table[this.level].func){case 0:r=this.deflate_stored(e);break;case 1:r=this.deflate_fast(e);break;default:r=this.deflate_slow(e);}if(2!=r&&3!==r||(this.status=3),0===r||2===r)return 0===t.avail_out&&(this.last_flush=-1),0;if(1===r){if(1===e)this._tr_align();else if(this._tr_stored_block(0,0,!1),3===e)for(let e=0;e<hash_size;e++)this.head[e]=0;if(t.flush_pending(this),0===t.avail_out)return this.last_flush=-1,0}}return 4!==e?0:1}}class Deflater{constructor(e){var t,r;this.checksum=1,this.origSize=0,this.dictChecksum=0;const n=null!==(t=null==e?void 0:e.level)&&void 0!==t?t:6,i=null!==(r=null==e?void 0:e.format)&&void 0!==r?r:"deflate",o=null==e?void 0:e.dictionary,s=null==e?void 0:e.fileName;if("number"!=typeof n||n<1||n>9)throw new RangeError("level must be between 1 and 9, inclusive");if("gzip"!==i&&"raw"!==i&&"deflate"!==i)throw new RangeError("container must be one of `raw`, `deflate`, `gzip`");if(void 0!==s&&"string"!=typeof s)throw new TypeError("fileName must be a string");if(this.fileName=s||"",this.z=new ZStream,this.deflate=new Deflate(this.z,n,0),o){if("deflate"!==i)throw new TypeError("Can only provide a dictionary for `deflate` containers.");const e=u8ArrayFromBufferSource(o);if(!e)throw new TypeError("dictionary must be an ArrayBuffer or buffer view");this.dictChecksum=adler32(e),this.deflate.deflateSetDictionary(e);}this.format=i,"gzip"===this.format&&(this.checksum=0);}buildZlibHeader(){let e=2,t=1;0!==this.dictChecksum&&(e+=4,t=PRESET_DICT);const r=new ArrayBuffer(e),n=new DataView(r);return n.setUint16(0,30720|t),0!==this.dictChecksum&&n.setUint32(2,this.dictChecksum),new Uint8Array(r)}buildGZipHeader(){let e=0,t=[];this.fileName.length>0&&(e|=8,t=Array.from(this.fileName).map((e=>{const t=e.charCodeAt(0);return t>255?95:t})),t.push(0));const r=new ArrayBuffer(10+t.length),n=new DataView(r);n.setUint16(0,GZIP_ID1<<8|GZIP_ID2),n.setUint16(2,Z_DEFLATED<<8|e);const i=Math.floor(Date.now()/1e3);n.setUint32(4,i,!0),n.setUint16(8,255);const o=new Uint8Array(r);return t.length&&o.set(t,10),o}buildTrailer(){const e="gzip"===this.format,t=new ArrayBuffer(e?8:4),r=new DataView(t);return r.setUint32(0,this.checksum,e),e&&r.setUint32(4,this.origSize,!0),new Uint8Array(t)}append(e){const t=[],r=u8ArrayFromBufferSource(e);if(!(r instanceof Uint8Array))throw new TypeError("data must be an ArrayBuffer or buffer view");if(!r.length)return t;"gzip"!==this.format?this.checksum=adler32(r,this.checksum):this.checksum=crc32(r,this.checksum),this.origSize+=r.length;const{deflate:n,z:i}=this;i.next_in_index=0,i.next_in=r,i.avail_in=r.length,1===n.status&&("deflate"===this.format?t.push(this.buildZlibHeader()):"gzip"===this.format&&t.push(this.buildGZipHeader()));do{if(i.next_out_index=0,i.avail_out=OUTPUT_BUFSIZE,0!==n.deflate(0))throw new Error("deflating: "+i.msg);i.next_out_index&&t.push(new Uint8Array(i.next_out.subarray(0,i.next_out_index)));}while(i.avail_in>0||0===i.avail_out);return t}finish(){const e=[],{deflate:t,z:r}=this;if(1===t.status)throw new Error("Cannot call finish before at least 1 call to append");do{r.next_out_index=0,r.avail_out=OUTPUT_BUFSIZE;const n=t.deflate(4);if(1!==n&&0!==n)throw new Error("deflating: "+r.msg);OUTPUT_BUFSIZE-r.avail_out>0&&e.push(new Uint8Array(r.next_out.subarray(0,r.next_out_index)));}while(r.avail_in>0||0===r.avail_out);return "raw"!==this.format&&e.push(this.buildTrailer()),e}}const decContext=Symbol("decContext"),decTransform$1=Symbol("decTransform");class DecompressionTransformer{constructor(e){this.inflater_=e;}transform(e,t){if(!(e instanceof ArrayBuffer||ArrayBuffer.isView(e)))throw new TypeError("Input data must be a BufferSource");const r=this.inflater_.append(e);for(const e of r)t.enqueue(e);}flush(e){const t=this.inflater_.finish();if(!t.success){if(!t.complete)throw new Error("Unexpected EOF during decompression");if("mismatch"===t.checksum)throw new Error("Data integrity check failed");if("mismatch"===t.fileSize)throw new Error("Data size check failed");throw new Error("Decompression error")}}}class DecompressionStream{constructor(e){if("deflate"!==e&&"gzip"!==e)throw new TypeError("format must be one of `deflate`, `gzip`");this[decContext]=new Inflater,this[decTransform$1]=new TransformStream(new DecompressionTransformer(this[decContext]));}get readable(){return this[decTransform$1].readable}get writable(){return this[decTransform$1].writable}}const comContext=Symbol("comContext"),comTransform=Symbol("comTransform");class CompressionTransformer{constructor(e){this.deflater_=e;}transform(e,t){if(!(e instanceof ArrayBuffer||ArrayBuffer.isView(e)))throw new TypeError("Input data must be a BufferSource");const r=this.deflater_.append(e);for(const e of r)t.enqueue(e);}flush(e){const t=this.deflater_.finish();for(const r of t)e.enqueue(r);}}class CompressionStream{constructor(e){if("deflate"!==e&&"gzip"!==e)throw new TypeError("format must be one of `deflate`, `gzip`");this[comContext]=new Deflater({format:e}),this[comTransform]=new TransformStream(new CompressionTransformer(this[comContext]));}get readable(){return this[comTransform].readable}get writable(){return this[comTransform].writable}}function getGlobal(){return "undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==__webpack_require__.g?__webpack_require__.g:void 0}function getGlobalValue(e){const t=getGlobal();let r;return void 0!==t&&(r=t[e]),r}function getGlobalOrContextualValue(name){const global=getGlobal();let value;if(void 0!==global&&(value=global[name]),void 0===value)try{value=eval(name);}catch(e){}return value}function hasCompleteStreamsImplementation(){const e=getGlobalValue("ReadableStream"),t=getGlobalValue("WritableStream"),r=getGlobalValue("TransformStream"),n=getGlobalValue("ByteLengthQueuingStrategy"),i=getGlobalValue("CountQueuingStrategy"),o=e=>"function"==typeof e;if(!(o(e)&&o(t)&&o(r)&&o(n)&&o(i)))return !1;try{const t=new e({type:"bytes"}).getReader({mode:"byob"});if(null==t||"object"!=typeof t)return !1}catch(e){return !1}return !0}function installStardazedStreams(){const e=getGlobal();if(!e)return !1;if(hasCompleteStreamsImplementation())return !1;const t=getGlobalOrContextualValue("fetch"),r=getGlobalOrContextualValue("Response"),n=getGlobalValue("ReadableStream");if(t&&r){const i=createAdaptedFetch(t,r,n,SDReadableStream,readableStreamTee),o=createAdaptedResponse(r,n,SDReadableStream,readableStreamTee);e.fetch=i,e.Response=o;}return e.ReadableStream=SDReadableStream,e.WritableStream=WritableStream,e.TransformStream=TransformStream$1,e.ByteLengthQueuingStrategy=ByteLengthQueuingStrategy,e.CountQueuingStrategy=CountQueuingStrategy,!0}function installEncodingStreams(e){const t=getGlobal();if(!t)return;const r=getGlobalValue("TextDecoderStream");(e||"function"!=typeof r)&&(t.TextDecoderStream=TextDecoderStream);const n=getGlobalValue("TextEncoderStream");(e||"function"!=typeof n)&&(t.TextEncoderStream=TextEncoderStream);}function installCompressionStreams(e){const t=getGlobal();if(!t)return;const r=getGlobalValue("CompressionStream");(e||"function"!=typeof r)&&(t.CompressionStream=CompressionStream);const n=getGlobalValue("DecompressionStream");(e||"function"!=typeof n)&&(t.DecompressionStream=DecompressionStream);}const overwritten=installStardazedStreams();installEncodingStreams(overwritten),installCompressionStreams(overwritten);})();},930:(e,t,r)=>{e.exports=r(3681);},3681:(e,t,r)=>{var n=t;function i(){n.util._configure(),n.Writer._configure(n.BufferWriter),n.Reader._configure(n.BufferReader);}n.build="minimal",n.Writer=r(7768),n.BufferWriter=r(3676),n.Reader=r(5109),n.BufferReader=r(5477),n.util=r(1429),n.rpc=r(5988),n.roots=r(4508),n.configure=i,i();},5109:(e,t,r)=>{e.exports=l;var n,i=r(1429),o=i.LongBits,s=i.utf8;function a(e,t){return RangeError("index out of range: "+e.pos+" + "+(t||1)+" > "+e.len)}function l(e){this.buf=e,this.pos=0,this.len=e.length;}var u,c="undefined"!=typeof Uint8Array?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new l(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new l(e);throw Error("illegal buffer")},h=function(){return i.Buffer?function(e){return (l.create=function(e){return i.Buffer.isBuffer(e)?new n(e):c(e)})(e)}:c};function d(){var e=new o(0,0),t=0;if(!(this.len-this.pos>4)){for(;t<3;++t){if(this.pos>=this.len)throw a(this);if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(127&this.buf[this.pos++])<<7*t)>>>0,e}for(;t<4;++t)if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(127&this.buf[this.pos])<<28)>>>0,e.hi=(e.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return e;if(t=0,this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw a(this);if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}function f(e,t){return (e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0}function p(){if(this.pos+8>this.len)throw a(this,8);return new o(f(this.buf,this.pos+=4),f(this.buf,this.pos+=4))}l.create=h(),l.prototype._slice=i.Array.prototype.subarray||i.Array.prototype.slice,l.prototype.uint32=(u=4294967295,function(){if(u=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return u;if(u=(u|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return u;if(u=(u|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return u;if(u=(u|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return u;if(u=(u|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return u;if((this.pos+=5)>this.len)throw this.pos=this.len,a(this,10);return u}),l.prototype.int32=function(){return 0|this.uint32()},l.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(1&e)|0},l.prototype.bool=function(){return 0!==this.uint32()},l.prototype.fixed32=function(){if(this.pos+4>this.len)throw a(this,4);return f(this.buf,this.pos+=4)},l.prototype.sfixed32=function(){if(this.pos+4>this.len)throw a(this,4);return 0|f(this.buf,this.pos+=4)},l.prototype.float=function(){if(this.pos+4>this.len)throw a(this,4);var e=i.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},l.prototype.double=function(){if(this.pos+8>this.len)throw a(this,4);var e=i.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},l.prototype.bytes=function(){var e=this.uint32(),t=this.pos,r=this.pos+e;if(r>this.len)throw a(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,r):t===r?new this.buf.constructor(0):this._slice.call(this.buf,t,r)},l.prototype.string=function(){var e=this.bytes();return s.read(e,0,e.length)},l.prototype.skip=function(e){if("number"==typeof e){if(this.pos+e>this.len)throw a(this,e);this.pos+=e;}else do{if(this.pos>=this.len)throw a(this)}while(128&this.buf[this.pos++]);return this},l.prototype.skipType=function(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+e+" at offset "+this.pos)}return this},l._configure=function(e){n=e,l.create=h(),n._configure();var t=i.Long?"toLong":"toNumber";i.merge(l.prototype,{int64:function(){return d.call(this)[t](!1)},uint64:function(){return d.call(this)[t](!0)},sint64:function(){return d.call(this).zzDecode()[t](!1)},fixed64:function(){return p.call(this)[t](!0)},sfixed64:function(){return p.call(this)[t](!1)}});};},5477:(e,t,r)=>{e.exports=o;var n=r(5109);(o.prototype=Object.create(n.prototype)).constructor=o;var i=r(1429);function o(e){n.call(this,e);}o._configure=function(){i.Buffer&&(o.prototype._slice=i.Buffer.prototype.slice);},o.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))},o._configure();},4508:e=>{e.exports={};},5988:(e,t,r)=>{t.Service=r(1365);},1365:(e,t,r)=>{e.exports=i;var n=r(1429);function i(e,t,r){if("function"!=typeof e)throw TypeError("rpcImpl must be a function");n.EventEmitter.call(this),this.rpcImpl=e,this.requestDelimited=Boolean(t),this.responseDelimited=Boolean(r);}(i.prototype=Object.create(n.EventEmitter.prototype)).constructor=i,i.prototype.rpcCall=function e(t,r,i,o,s){if(!o)throw TypeError("request must be specified");var a=this;if(!s)return n.asPromise(e,a,t,r,i,o);if(a.rpcImpl)try{return a.rpcImpl(t,r[a.requestDelimited?"encodeDelimited":"encode"](o).finish(),(function(e,r){if(e)return a.emit("error",e,t),s(e);if(null!==r){if(!(r instanceof i))try{r=i[a.responseDelimited?"decodeDelimited":"decode"](r);}catch(e){return a.emit("error",e,t),s(e)}return a.emit("data",r,t),s(null,r)}a.end(!0);}))}catch(e){return a.emit("error",e,t),void setTimeout((function(){s(e);}),0)}else setTimeout((function(){s(Error("already ended"));}),0);},i.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this};},9340:(e,t,r)=>{e.exports=i;var n=r(1429);function i(e,t){this.lo=e>>>0,this.hi=t>>>0;}var o=i.zero=new i(0,0);o.toNumber=function(){return 0},o.zzEncode=o.zzDecode=function(){return this},o.length=function(){return 1};var s=i.zeroHash="\0\0\0\0\0\0\0\0";i.fromNumber=function(e){if(0===e)return o;var t=e<0;t&&(e=-e);var r=e>>>0,n=(e-r)/4294967296>>>0;return t&&(n=~n>>>0,r=~r>>>0,++r>4294967295&&(r=0,++n>4294967295&&(n=0))),new i(r,n)},i.from=function(e){if("number"==typeof e)return i.fromNumber(e);if(n.isString(e)){if(!n.Long)return i.fromNumber(parseInt(e,10));e=n.Long.fromString(e);}return e.low||e.high?new i(e.low>>>0,e.high>>>0):o},i.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var t=1+~this.lo>>>0,r=~this.hi>>>0;return t||(r=r+1>>>0),-(t+4294967296*r)}return this.lo+4294967296*this.hi},i.prototype.toLong=function(e){return n.Long?new n.Long(0|this.lo,0|this.hi,Boolean(e)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(e)}};var a=String.prototype.charCodeAt;i.fromHash=function(e){return e===s?o:new i((a.call(e,0)|a.call(e,1)<<8|a.call(e,2)<<16|a.call(e,3)<<24)>>>0,(a.call(e,4)|a.call(e,5)<<8|a.call(e,6)<<16|a.call(e,7)<<24)>>>0)},i.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},i.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this},i.prototype.zzDecode=function(){var e=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this},i.prototype.length=function(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,r=this.hi>>>24;return 0===r?0===t?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:r<128?9:10};},1429:function(e,t,r){var n=t;function i(e,t,r){for(var n=Object.keys(t),i=0;i<n.length;++i)void 0!==e[n[i]]&&r||(e[n[i]]=t[n[i]]);return e}function o(e){function t(e,r){if(!(this instanceof t))return new t(e,r);Object.defineProperty(this,"message",{get:function(){return e}}),Error.captureStackTrace?Error.captureStackTrace(this,t):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),r&&i(this,r);}return t.prototype=Object.create(Error.prototype,{constructor:{value:t,writable:!0,enumerable:!1,configurable:!0},name:{get:()=>e,set:void 0,enumerable:!1,configurable:!0},toString:{value(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),t}n.asPromise=r(4537),n.base64=r(7419),n.EventEmitter=r(9211),n.float=r(945),n.inquire=r(7199),n.utf8=r(4997),n.pool=r(6662),n.LongBits=r(9340),n.isNode=Boolean(void 0!==r.g&&r.g&&r.g.process&&r.g.process.versions&&r.g.process.versions.node),n.global=n.isNode&&r.g||"undefined"!=typeof window&&window||"undefined"!=typeof self&&self||this,n.emptyArray=Object.freeze?Object.freeze([]):[],n.emptyObject=Object.freeze?Object.freeze({}):{},n.isInteger=Number.isInteger||function(e){return "number"==typeof e&&isFinite(e)&&Math.floor(e)===e},n.isString=function(e){return "string"==typeof e||e instanceof String},n.isObject=function(e){return e&&"object"==typeof e},n.isset=n.isSet=function(e,t){var r=e[t];return !(null==r||!e.hasOwnProperty(t))&&("object"!=typeof r||(Array.isArray(r)?r.length:Object.keys(r).length)>0)},n.Buffer=function(){try{var e=n.inquire("buffer").Buffer;return e.prototype.utf8Write?e:null}catch(e){return null}}(),n._Buffer_from=null,n._Buffer_allocUnsafe=null,n.newBuffer=function(e){return "number"==typeof e?n.Buffer?n._Buffer_allocUnsafe(e):new n.Array(e):n.Buffer?n._Buffer_from(e):"undefined"==typeof Uint8Array?e:new Uint8Array(e)},n.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,n.Long=n.global.dcodeIO&&n.global.dcodeIO.Long||n.global.Long||n.inquire("long"),n.key2Re=/^true|false|0|1$/,n.key32Re=/^-?(?:0|[1-9][0-9]*)$/,n.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,n.longToHash=function(e){return e?n.LongBits.from(e).toHash():n.LongBits.zeroHash},n.longFromHash=function(e,t){var r=n.LongBits.fromHash(e);return n.Long?n.Long.fromBits(r.lo,r.hi,t):r.toNumber(Boolean(t))},n.merge=i,n.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)},n.newError=o,n.ProtocolError=o("ProtocolError"),n.oneOfGetter=function(e){for(var t={},r=0;r<e.length;++r)t[e[r]]=1;return function(){for(var e=Object.keys(this),r=e.length-1;r>-1;--r)if(1===t[e[r]]&&void 0!==this[e[r]]&&null!==this[e[r]])return e[r]}},n.oneOfSetter=function(e){return function(t){for(var r=0;r<e.length;++r)e[r]!==t&&delete this[e[r]];}},n.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},n._configure=function(){var e=n.Buffer;e?(n._Buffer_from=e.from!==Uint8Array.from&&e.from||function(t,r){return new e(t,r)},n._Buffer_allocUnsafe=e.allocUnsafe||function(t){return new e(t)}):n._Buffer_from=n._Buffer_allocUnsafe=null;};},7768:(e,t,r)=>{e.exports=h;var n,i=r(1429),o=i.LongBits,s=i.base64,a=i.utf8;function l(e,t,r){this.fn=e,this.len=t,this.next=void 0,this.val=r;}function u(){}function c(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states;}function h(){this.len=0,this.head=new l(u,0,0),this.tail=this.head,this.states=null;}var d=function(){return i.Buffer?function(){return (h.create=function(){return new n})()}:function(){return new h}};function f(e,t,r){t[r]=255&e;}function p(e,t){this.len=e,this.next=void 0,this.val=t;}function m(e,t,r){for(;e.hi;)t[r++]=127&e.lo|128,e.lo=(e.lo>>>7|e.hi<<25)>>>0,e.hi>>>=7;for(;e.lo>127;)t[r++]=127&e.lo|128,e.lo=e.lo>>>7;t[r++]=e.lo;}function y(e,t,r){t[r]=255&e,t[r+1]=e>>>8&255,t[r+2]=e>>>16&255,t[r+3]=e>>>24;}h.create=d(),h.alloc=function(e){return new i.Array(e)},i.Array!==Array&&(h.alloc=i.pool(h.alloc,i.Array.prototype.subarray)),h.prototype._push=function(e,t,r){return this.tail=this.tail.next=new l(e,t,r),this.len+=t,this},p.prototype=Object.create(l.prototype),p.prototype.fn=function(e,t,r){for(;e>127;)t[r++]=127&e|128,e>>>=7;t[r]=e;},h.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new p((e>>>=0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},h.prototype.int32=function(e){return e<0?this._push(m,10,o.fromNumber(e)):this.uint32(e)},h.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)},h.prototype.uint64=function(e){var t=o.from(e);return this._push(m,t.length(),t)},h.prototype.int64=h.prototype.uint64,h.prototype.sint64=function(e){var t=o.from(e).zzEncode();return this._push(m,t.length(),t)},h.prototype.bool=function(e){return this._push(f,1,e?1:0)},h.prototype.fixed32=function(e){return this._push(y,4,e>>>0)},h.prototype.sfixed32=h.prototype.fixed32,h.prototype.fixed64=function(e){var t=o.from(e);return this._push(y,4,t.lo)._push(y,4,t.hi)},h.prototype.sfixed64=h.prototype.fixed64,h.prototype.float=function(e){return this._push(i.float.writeFloatLE,4,e)},h.prototype.double=function(e){return this._push(i.float.writeDoubleLE,8,e)};var g=i.Array.prototype.set?function(e,t,r){t.set(e,r);}:function(e,t,r){for(var n=0;n<e.length;++n)t[r+n]=e[n];};h.prototype.bytes=function(e){var t=e.length>>>0;if(!t)return this._push(f,1,0);if(i.isString(e)){var r=h.alloc(t=s.length(e));s.decode(e,r,0),e=r;}return this.uint32(t)._push(g,t,e)},h.prototype.string=function(e){var t=a.length(e);return t?this.uint32(t)._push(a.write,t,e):this._push(f,1,0)},h.prototype.fork=function(){return this.states=new c(this),this.head=this.tail=new l(u,0,0),this.len=0,this},h.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new l(u,0,0),this.len=0),this},h.prototype.ldelim=function(){var e=this.head,t=this.tail,r=this.len;return this.reset().uint32(r),r&&(this.tail.next=e.next,this.tail=t,this.len+=r),this},h.prototype.finish=function(){for(var e=this.head.next,t=this.constructor.alloc(this.len),r=0;e;)e.fn(e.val,t,r),r+=e.len,e=e.next;return t},h._configure=function(e){n=e,h.create=d(),n._configure();};},3676:(e,t,r)=>{e.exports=o;var n=r(7768);(o.prototype=Object.create(n.prototype)).constructor=o;var i=r(1429);function o(){n.call(this);}function s(e,t,r){e.length<40?i.utf8.write(e,t,r):t.utf8Write?t.utf8Write(e,r):t.write(e,r);}o._configure=function(){o.alloc=i._Buffer_allocUnsafe,o.writeBytesBuffer=i.Buffer&&i.Buffer.prototype instanceof Uint8Array&&"set"===i.Buffer.prototype.set.name?function(e,t,r){t.set(e,r);}:function(e,t,r){if(e.copy)e.copy(t,r,0,e.length);else for(var n=0;n<e.length;)t[r++]=e[n++];};},o.prototype.bytes=function(e){i.isString(e)&&(e=i._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(o.writeBytesBuffer,t,e),this},o.prototype.string=function(e){var t=i.Buffer.byteLength(e);return this.uint32(t),t&&this._push(s,t,e),this},o._configure();},9210:(e,t,r)=>{r.r(t),r.d(t,{authn:()=>a,ciphertext:()=>l,composite:()=>h,contact:()=>f,content:()=>c,fetcher:()=>n,invitation:()=>p,message:()=>u,messageApi:()=>i,privateKey:()=>d,publicKey:()=>s,signature:()=>o});var n={};r.r(n),r.d(n,{b64Decode:()=>w,b64Encode:()=>v,fetchReq:()=>S,fetchStreamingRequest:()=>E,renderURLSearchParams:()=>P,replacer:()=>_});var i={};r.r(i),r.d(i,{MessageApi:()=>C,SortDirection:()=>x});var o={};r.r(o),r.d(o,{Signature:()=>ie,Signature_ECDSACompact:()=>se,Signature_WalletECDSACompact:()=>le,protobufPackage:()=>ne});var s={};r.r(s),r.d(s,{PublicKey:()=>Se,PublicKeyBundle:()=>Ae,PublicKey_Secp256k1Uncompressed:()=>ke,SignedPublicKey:()=>be,SignedPublicKeyBundle:()=>we,UnsignedPublicKey:()=>me,UnsignedPublicKey_Secp256k1Uncompressed:()=>ge,protobufPackage:()=>fe});var a={};r.r(a),r.d(a,{AuthData:()=>Oe,Token:()=>Be,protobufPackage:()=>Ne});var l={};r.r(l),r.d(l,{Ciphertext:()=>Fe,Ciphertext_Aes256gcmHkdfsha256:()=>je,protobufPackage:()=>Ke});var u={};r.r(u),r.d(u,{Message:()=>tt,MessageHeaderV1:()=>Je,MessageHeaderV2:()=>Qe,MessageV1:()=>Ze,MessageV2:()=>et,protobufPackage:()=>Ve});var c={};r.r(c),r.d(c,{Compression:()=>at,ContentTypeId:()=>ct,EncodedContent:()=>dt,EncodedContent_ParametersEntry:()=>ft,SignedContent:()=>mt,compressionFromJSON:()=>lt,compressionToJSON:()=>ut,protobufPackage:()=>st});var h={};r.r(h),r.d(h,{Composite:()=>_t,Composite_Part:()=>St,protobufPackage:()=>wt});var d={};r.r(d),r.d(d,{EncryptedPrivateKeyBundle:()=>Kt,EncryptedPrivateKeyBundleV1:()=>Ut,PrivateKey:()=>Rt,PrivateKeyBundle:()=>Mt,PrivateKeyBundleV1:()=>Ot,PrivateKeyBundleV2:()=>Tt,PrivateKey_Secp256k1:()=>It,SignedPrivateKey:()=>Pt,SignedPrivateKey_Secp256k1:()=>Ct,protobufPackage:()=>kt});var f={};r.r(f),r.d(f,{ContactBundle:()=>Vt,ContactBundleV1:()=>Wt,ContactBundleV2:()=>Gt,protobufPackage:()=>zt});var p={};r.r(p),r.d(p,{InvitationV1:()=>$t,InvitationV1_Aes256gcmHkdfsha256:()=>Xt,InvitationV1_Context:()=>Qt,InvitationV1_Context_MetadataEntry:()=>Yt,SealedInvitation:()=>ir,SealedInvitationHeaderV1:()=>tr,SealedInvitationV1:()=>nr,protobufPackage:()=>Jt});var m=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(n=Object.getOwnPropertySymbols(e);i<n.length;i++)t.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(e,n[i])&&(r[n[i]]=e[n[i]]);}return r};const y=new Array(64),g=new Array(123);for(let e=0;e<64;)g[y[e]=e<26?e+65:e<52?e+71:e<62?e-4:e-59|43]=e++;function v(e,t,r){let n=null;const i=[];let o,s=0,a=0;for(;t<r;){const r=e[t++];switch(a){case 0:i[s++]=y[r>>2],o=(3&r)<<4,a=1;break;case 1:i[s++]=y[o|r>>4],o=(15&r)<<2,a=2;break;case 2:i[s++]=y[o|r>>6],i[s++]=y[63&r],a=0;}s>8191&&((n||(n=[])).push(String.fromCharCode.apply(String,i)),s=0);}return a&&(i[s++]=y[o],i[s++]=61,1===a&&(i[s++]=61)),n?(s&&n.push(String.fromCharCode.apply(String,i.slice(0,s))),n.join("")):String.fromCharCode.apply(String,i.slice(0,s))}const b="invalid encoding";function w(e){const t=[];let r,n=0,i=0;for(let o=0;o<e.length;){let s=e.charCodeAt(o++);if(61===s&&i>1)break;if(void 0===(s=g[s]))throw Error(b);switch(i){case 0:r=s,i=1;break;case 1:t[n++]=r<<2|(48&s)>>4,r=s,i=2;break;case 2:t[n++]=(15&r)<<4|(60&s)>>2,r=s,i=3;break;case 3:t[n++]=(3&r)<<6|s,i=0;}}if(1===i)throw Error(b);return new Uint8Array(t)}function _(e,t){return t&&t.constructor===Uint8Array?v(t,0,t.length):t}function S(e,t){const r=t||{},{pathPrefix:n}=r,i=m(r,["pathPrefix"]);return fetch(n?`${n}${e}`:e,i).then((e=>e.json().then((t=>{if(!e.ok)throw t;return t}))))}function E(e,t,r){return n=this,i=void 0,s=function*(){const n=r||{},{pathPrefix:i}=n,o=m(n,["pathPrefix"]),s=i?`${i}${e}`:e,a=yield fetch(s,o);if(!a.ok){const e=yield a.json(),t=e.error&&e.error.message?e.error.message:"";throw new Error(t)}if(!a.body)throw new Error("response doesnt have a body");var l;yield a.body.pipeThrough(new TextDecoderStream).pipeThrough(new TransformStream({start(e){e.buf="",e.pos=0;},transform(e,t){for(void 0===t.buf&&(t.buf=""),void 0===t.pos&&(t.pos=0),t.buf+=e;t.pos<t.buf.length;)if("\n"===t.buf[t.pos]){const e=t.buf.substring(0,t.pos),r=JSON.parse(e);t.enqueue(r.result),t.buf=t.buf.substring(t.pos+1),t.pos=0;}else ++t.pos;}})).pipeTo((l=e=>{t&&t(e);},new WritableStream({write(e){l(e);}})));},new((o=void 0)||(o=Promise))((function(e,t){function r(e){try{l(s.next(e));}catch(e){t(e);}}function a(e){try{l(s.throw(e));}catch(e){t(e);}}function l(t){var n;t.done?e(t.value):(n=t.value,n instanceof o?n:new o((function(e){e(n);}))).then(r,a);}l((s=s.apply(n,i||[])).next());}));var n,i,o,s;}function k(e){return ["string","number","boolean"].some((t=>typeof e===t))}function A(e,t=""){return Object.keys(e).reduce(((r,n)=>{const i=e[n],o=t?[t,n].join("."):n,s=Array.isArray(i)&&i.every((e=>k(e)))&&i.length>0,a=k(i)&&!function(e){return !1===e||0===e||""===e}(i);let l={};return function(e){const t="Object"===Object.prototype.toString.call(e).slice(8,-1);if(null===e||!t||!t)return !1;const r=Object.getPrototypeOf(e);return "object"==typeof r&&r.constructor===Object.prototype.constructor}(i)?l=A(i,o):(a||s)&&(l={[o]:i}),Object.assign(Object.assign({},r),l)}),{})}function P(e,t=[]){const r=A(e),n=Object.keys(r).reduce(((e,n)=>{const i=r[n];return t.find((e=>e===n))?e:Array.isArray(i)?[...e,...i.map((e=>[n,e.toString()]))]:e=[...e,[n,i.toString()]]}),[]);return new URLSearchParams(n).toString()}var x;!function(e){e.SORT_DIRECTION_UNSPECIFIED="SORT_DIRECTION_UNSPECIFIED",e.SORT_DIRECTION_ASCENDING="SORT_DIRECTION_ASCENDING",e.SORT_DIRECTION_DESCENDING="SORT_DIRECTION_DESCENDING";}(x||(x={}));class C{static Publish(e,t){return S("/message/v1/publish",Object.assign(Object.assign({},t),{method:"POST",body:JSON.stringify(e,_)}))}static Subscribe(e,t,r){return E("/message/v1/subscribe",t,Object.assign(Object.assign({},r),{method:"POST",body:JSON.stringify(e,_)}))}static SubscribeAll(e,t,r){return E("/message/v1/subscribe-all",t,Object.assign(Object.assign({},r),{method:"POST",body:JSON.stringify(e,_)}))}static Query(e,t){return S("/message/v1/query",Object.assign(Object.assign({},t),{method:"POST",body:JSON.stringify(e,_)}))}}var T=null;try{T=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports;}catch(e){}function N(e,t,r){this.low=0|e,this.high=0|t,this.unsigned=!!r;}function R(e){return !0===(e&&e.__isLong__)}function B(e){var t=Math.clz32(e&-e);return e?31-t:t}N.prototype.__isLong__,Object.defineProperty(N.prototype,"__isLong__",{value:!0}),N.isLong=R;var I={},O={};function M(e,t){var r,n,i;return t?(i=0<=(e>>>=0)&&e<256)&&(n=O[e])?n:(r=U(e,0,!0),i&&(O[e]=r),r):(i=-128<=(e|=0)&&e<128)&&(n=I[e])?n:(r=U(e,e<0?-1:0,!1),i&&(I[e]=r),r)}function D(e,t){if(isNaN(e))return t?V:G;if(t){if(e<0)return V;if(e>=q)return X}else {if(e<=-z)return Q;if(e+1>=z)return Z}return e<0?D(-e,t).neg():U(e%j|0,e/j|0,t)}function U(e,t,r){return new N(e,t,r)}N.fromInt=M,N.fromNumber=D,N.fromBits=U;var K=Math.pow;function F(e,t,r){if(0===e.length)throw Error("empty string");if("number"==typeof t?(r=t,t=!1):t=!!t,"NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return t?V:G;if((r=r||10)<2||36<r)throw RangeError("radix");var n;if((n=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===n)return F(e.substring(1),t,r).neg();for(var i=D(K(r,8)),o=G,s=0;s<e.length;s+=8){var a=Math.min(8,e.length-s),l=parseInt(e.substring(s,s+a),r);if(a<8){var u=D(K(r,a));o=o.mul(u).add(D(l));}else o=(o=o.mul(i)).add(D(l));}return o.unsigned=t,o}function L(e,t){return "number"==typeof e?D(e,t):"string"==typeof e?F(e,t):U(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}N.fromString=F,N.fromValue=L;var j=4294967296,q=j*j,z=q/2,W=M(1<<24),G=M(0);N.ZERO=G;var V=M(0,!0);N.UZERO=V;var H=M(1);N.ONE=H;var J=M(1,!0);N.UONE=J;var $=M(-1);N.NEG_ONE=$;var Z=U(-1,2147483647,!1);N.MAX_VALUE=Z;var X=U(-1,-1,!0);N.MAX_UNSIGNED_VALUE=X;var Q=U(0,-2147483648,!1);N.MIN_VALUE=Q;var Y=N.prototype;Y.toInt=function(){return this.unsigned?this.low>>>0:this.low},Y.toNumber=function(){return this.unsigned?(this.high>>>0)*j+(this.low>>>0):this.high*j+(this.low>>>0)},Y.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return "0";if(this.isNegative()){if(this.eq(Q)){var t=D(e),r=this.div(t),n=r.mul(t).sub(this);return r.toString(e)+n.toInt().toString(e)}return "-"+this.neg().toString(e)}for(var i=D(K(e,6),this.unsigned),o=this,s="";;){var a=o.div(i),l=(o.sub(a.mul(i)).toInt()>>>0).toString(e);if((o=a).isZero())return l+s;for(;l.length<6;)l="0"+l;s=""+l+s;}},Y.getHighBits=function(){return this.high},Y.getHighBitsUnsigned=function(){return this.high>>>0},Y.getLowBits=function(){return this.low},Y.getLowBitsUnsigned=function(){return this.low>>>0},Y.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Q)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},Y.isZero=function(){return 0===this.high&&0===this.low},Y.eqz=Y.isZero,Y.isNegative=function(){return !this.unsigned&&this.high<0},Y.isPositive=function(){return this.unsigned||this.high>=0},Y.isOdd=function(){return 1==(1&this.low)},Y.isEven=function(){return 0==(1&this.low)},Y.equals=function(e){return R(e)||(e=L(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},Y.eq=Y.equals,Y.notEquals=function(e){return !this.eq(e)},Y.neq=Y.notEquals,Y.ne=Y.notEquals,Y.lessThan=function(e){return this.comp(e)<0},Y.lt=Y.lessThan,Y.lessThanOrEqual=function(e){return this.comp(e)<=0},Y.lte=Y.lessThanOrEqual,Y.le=Y.lessThanOrEqual,Y.greaterThan=function(e){return this.comp(e)>0},Y.gt=Y.greaterThan,Y.greaterThanOrEqual=function(e){return this.comp(e)>=0},Y.gte=Y.greaterThanOrEqual,Y.ge=Y.greaterThanOrEqual,Y.compare=function(e){if(R(e)||(e=L(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},Y.comp=Y.compare,Y.negate=function(){return !this.unsigned&&this.eq(Q)?Q:this.not().add(H)},Y.neg=Y.negate,Y.add=function(e){R(e)||(e=L(e));var t=this.high>>>16,r=65535&this.high,n=this.low>>>16,i=65535&this.low,o=e.high>>>16,s=65535&e.high,a=e.low>>>16,l=0,u=0,c=0,h=0;return c+=(h+=i+(65535&e.low))>>>16,u+=(c+=n+a)>>>16,l+=(u+=r+s)>>>16,l+=t+o,U((c&=65535)<<16|(h&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},Y.subtract=function(e){return R(e)||(e=L(e)),this.add(e.neg())},Y.sub=Y.subtract,Y.multiply=function(e){if(this.isZero())return this;if(R(e)||(e=L(e)),T)return U(T.mul(this.low,this.high,e.low,e.high),T.get_high(),this.unsigned);if(e.isZero())return this.unsigned?V:G;if(this.eq(Q))return e.isOdd()?Q:G;if(e.eq(Q))return this.isOdd()?Q:G;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(W)&&e.lt(W))return D(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,n=this.low>>>16,i=65535&this.low,o=e.high>>>16,s=65535&e.high,a=e.low>>>16,l=65535&e.low,u=0,c=0,h=0,d=0;return h+=(d+=i*l)>>>16,c+=(h+=n*l)>>>16,h&=65535,c+=(h+=i*a)>>>16,u+=(c+=r*l)>>>16,c&=65535,u+=(c+=n*a)>>>16,c&=65535,u+=(c+=i*s)>>>16,u+=t*l+r*a+n*s+i*o,U((h&=65535)<<16|(d&=65535),(u&=65535)<<16|(c&=65535),this.unsigned)},Y.mul=Y.multiply,Y.divide=function(e){if(R(e)||(e=L(e)),e.isZero())throw Error("division by zero");var t,r,n;if(T)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?U((this.unsigned?T.div_u:T.div_s)(this.low,this.high,e.low,e.high),T.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?V:G;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return V;if(e.gt(this.shru(1)))return J;n=V;}else {if(this.eq(Q))return e.eq(H)||e.eq($)?Q:e.eq(Q)?H:(t=this.shr(1).div(e).shl(1)).eq(G)?e.isNegative()?H:$:(r=this.sub(e.mul(t)),n=t.add(r.div(e)));if(e.eq(Q))return this.unsigned?V:G;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();n=G;}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:K(2,i-48),s=D(t),a=s.mul(e);a.isNegative()||a.gt(r);)a=(s=D(t-=o,this.unsigned)).mul(e);s.isZero()&&(s=H),n=n.add(s),r=r.sub(a);}return n},Y.div=Y.divide,Y.modulo=function(e){return R(e)||(e=L(e)),T?U((this.unsigned?T.rem_u:T.rem_s)(this.low,this.high,e.low,e.high),T.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},Y.mod=Y.modulo,Y.rem=Y.modulo,Y.not=function(){return U(~this.low,~this.high,this.unsigned)},Y.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32},Y.clz=Y.countLeadingZeros,Y.countTrailingZeros=function(){return this.low?B(this.low):B(this.high)+32},Y.ctz=Y.countTrailingZeros,Y.and=function(e){return R(e)||(e=L(e)),U(this.low&e.low,this.high&e.high,this.unsigned)},Y.or=function(e){return R(e)||(e=L(e)),U(this.low|e.low,this.high|e.high,this.unsigned)},Y.xor=function(e){return R(e)||(e=L(e)),U(this.low^e.low,this.high^e.high,this.unsigned)},Y.shiftLeft=function(e){return R(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?U(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):U(0,this.low<<e-32,this.unsigned)},Y.shl=Y.shiftLeft,Y.shiftRight=function(e){return R(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?U(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):U(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},Y.shr=Y.shiftRight,Y.shiftRightUnsigned=function(e){return R(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?U(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):U(32===e?this.high:this.high>>>e-32,0,this.unsigned)},Y.shru=Y.shiftRightUnsigned,Y.shr_u=Y.shiftRightUnsigned,Y.rotateLeft=function(e){var t;return R(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?U(this.high,this.low,this.unsigned):e<32?(t=32-e,U(this.low<<e|this.high>>>t,this.high<<e|this.low>>>t,this.unsigned)):(t=32-(e-=32),U(this.high<<e|this.low>>>t,this.low<<e|this.high>>>t,this.unsigned))},Y.rotl=Y.rotateLeft,Y.rotateRight=function(e){var t;return R(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?U(this.high,this.low,this.unsigned):e<32?(t=32-e,U(this.high<<t|this.low>>>e,this.low<<t|this.high>>>e,this.unsigned)):(t=32-(e-=32),U(this.low<<t|this.high>>>e,this.high<<t|this.low>>>e,this.unsigned))},Y.rotr=Y.rotateRight,Y.toSigned=function(){return this.unsigned?U(this.low,this.high,!1):this},Y.toUnsigned=function(){return this.unsigned?this:U(this.low,this.high,!0)},Y.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},Y.toBytesLE=function(){var e=this.high,t=this.low;return [255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},Y.toBytesBE=function(){var e=this.high,t=this.low;return [e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},N.fromBytes=function(e,t,r){return r?N.fromBytesLE(e,t):N.fromBytesBE(e,t)},N.fromBytesLE=function(e,t){return new N(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},N.fromBytesBE=function(e,t){return new N(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const ee=N;var te=r(930),re=r.n(te);const ne="xmtp.message_contents",ie={encode:(e,t=re().Writer.create())=>(void 0!==e.ecdsaCompact&&se.encode(e.ecdsaCompact,t.uint32(10).fork()).ldelim(),void 0!==e.walletEcdsaCompact&&le.encode(e.walletEcdsaCompact,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={ecdsaCompact:void 0,walletEcdsaCompact:void 0};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.ecdsaCompact=se.decode(r,r.uint32());break;case 2:i.walletEcdsaCompact=le.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({ecdsaCompact:de(e.ecdsaCompact)?se.fromJSON(e.ecdsaCompact):void 0,walletEcdsaCompact:de(e.walletEcdsaCompact)?le.fromJSON(e.walletEcdsaCompact):void 0}),toJSON(e){const t={};return void 0!==e.ecdsaCompact&&(t.ecdsaCompact=e.ecdsaCompact?se.toJSON(e.ecdsaCompact):void 0),void 0!==e.walletEcdsaCompact&&(t.walletEcdsaCompact=e.walletEcdsaCompact?le.toJSON(e.walletEcdsaCompact):void 0),t},fromPartial(e){const t={ecdsaCompact:void 0,walletEcdsaCompact:void 0};return t.ecdsaCompact=void 0!==e.ecdsaCompact&&null!==e.ecdsaCompact?se.fromPartial(e.ecdsaCompact):void 0,t.walletEcdsaCompact=void 0!==e.walletEcdsaCompact&&null!==e.walletEcdsaCompact?le.fromPartial(e.walletEcdsaCompact):void 0,t}};function oe(){return {bytes:new Uint8Array,recovery:0}}const se={encode:(e,t=re().Writer.create())=>(0!==e.bytes.length&&t.uint32(10).bytes(e.bytes),0!==e.recovery&&t.uint32(16).uint32(e.recovery),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=oe();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.bytes=r.bytes();break;case 2:i.recovery=r.uint32();break;default:r.skipType(7&e);}}return i},fromJSON:e=>({bytes:de(e.bytes)?ce(e.bytes):new Uint8Array,recovery:de(e.recovery)?Number(e.recovery):0}),toJSON(e){const t={};return void 0!==e.bytes&&(t.bytes=he(void 0!==e.bytes?e.bytes:new Uint8Array)),void 0!==e.recovery&&(t.recovery=Math.round(e.recovery)),t},fromPartial(e){var t,r;const n=oe();return n.bytes=null!==(t=e.bytes)&&void 0!==t?t:new Uint8Array,n.recovery=null!==(r=e.recovery)&&void 0!==r?r:0,n}};function ae(){return {bytes:new Uint8Array,recovery:0}}const le={encode:(e,t=re().Writer.create())=>(0!==e.bytes.length&&t.uint32(10).bytes(e.bytes),0!==e.recovery&&t.uint32(16).uint32(e.recovery),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=ae();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.bytes=r.bytes();break;case 2:i.recovery=r.uint32();break;default:r.skipType(7&e);}}return i},fromJSON:e=>({bytes:de(e.bytes)?ce(e.bytes):new Uint8Array,recovery:de(e.recovery)?Number(e.recovery):0}),toJSON(e){const t={};return void 0!==e.bytes&&(t.bytes=he(void 0!==e.bytes?e.bytes:new Uint8Array)),void 0!==e.recovery&&(t.recovery=Math.round(e.recovery)),t},fromPartial(e){var t,r;const n=ae();return n.bytes=null!==(t=e.bytes)&&void 0!==t?t:new Uint8Array,n.recovery=null!==(r=e.recovery)&&void 0!==r?r:0,n}};var ue=(()=>{if(void 0!==ue)return ue;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==r.g)return r.g;throw "Unable to locate global object"})();function ce(e){if(ue.Buffer)return Uint8Array.from(ue.Buffer.from(e,"base64"));{const t=ue.atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r}}function he(e){if(ue.Buffer)return ue.Buffer.from(e).toString("base64");{const t=[];return e.forEach((e=>{t.push(String.fromCharCode(e));})),ue.btoa(t.join(""))}}function de(e){return null!=e}re().util.Long!==ee&&(re().util.Long=ee,re().configure());const fe="xmtp.message_contents";function pe(){return {createdNs:ee.UZERO,secp256k1Uncompressed:void 0}}const me={encode:(e,t=re().Writer.create())=>(e.createdNs.isZero()||t.uint32(8).uint64(e.createdNs),void 0!==e.secp256k1Uncompressed&&ge.encode(e.secp256k1Uncompressed,t.uint32(26).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=pe();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.createdNs=r.uint64();break;case 3:i.secp256k1Uncompressed=ge.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({createdNs:Te(e.createdNs)?ee.fromValue(e.createdNs):ee.UZERO,secp256k1Uncompressed:Te(e.secp256k1Uncompressed)?ge.fromJSON(e.secp256k1Uncompressed):void 0}),toJSON(e){const t={};return void 0!==e.createdNs&&(t.createdNs=(e.createdNs||ee.UZERO).toString()),void 0!==e.secp256k1Uncompressed&&(t.secp256k1Uncompressed=e.secp256k1Uncompressed?ge.toJSON(e.secp256k1Uncompressed):void 0),t},fromPartial(e){const t=pe();return t.createdNs=void 0!==e.createdNs&&null!==e.createdNs?ee.fromValue(e.createdNs):ee.UZERO,t.secp256k1Uncompressed=void 0!==e.secp256k1Uncompressed&&null!==e.secp256k1Uncompressed?ge.fromPartial(e.secp256k1Uncompressed):void 0,t}};function ye(){return {bytes:new Uint8Array}}const ge={encode:(e,t=re().Writer.create())=>(0!==e.bytes.length&&t.uint32(10).bytes(e.bytes),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=ye();for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.bytes=r.bytes():r.skipType(7&e);}return i},fromJSON:e=>({bytes:Te(e.bytes)?xe(e.bytes):new Uint8Array}),toJSON(e){const t={};return void 0!==e.bytes&&(t.bytes=Ce(void 0!==e.bytes?e.bytes:new Uint8Array)),t},fromPartial(e){var t;const r=ye();return r.bytes=null!==(t=e.bytes)&&void 0!==t?t:new Uint8Array,r}};function ve(){return {keyBytes:new Uint8Array,signature:void 0}}const be={encode:(e,t=re().Writer.create())=>(0!==e.keyBytes.length&&t.uint32(10).bytes(e.keyBytes),void 0!==e.signature&&ie.encode(e.signature,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=ve();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.keyBytes=r.bytes();break;case 2:i.signature=ie.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({keyBytes:Te(e.keyBytes)?xe(e.keyBytes):new Uint8Array,signature:Te(e.signature)?ie.fromJSON(e.signature):void 0}),toJSON(e){const t={};return void 0!==e.keyBytes&&(t.keyBytes=Ce(void 0!==e.keyBytes?e.keyBytes:new Uint8Array)),void 0!==e.signature&&(t.signature=e.signature?ie.toJSON(e.signature):void 0),t},fromPartial(e){var t;const r=ve();return r.keyBytes=null!==(t=e.keyBytes)&&void 0!==t?t:new Uint8Array,r.signature=void 0!==e.signature&&null!==e.signature?ie.fromPartial(e.signature):void 0,r}},we={encode:(e,t=re().Writer.create())=>(void 0!==e.identityKey&&be.encode(e.identityKey,t.uint32(10).fork()).ldelim(),void 0!==e.preKey&&be.encode(e.preKey,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={identityKey:void 0,preKey:void 0};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.identityKey=be.decode(r,r.uint32());break;case 2:i.preKey=be.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({identityKey:Te(e.identityKey)?be.fromJSON(e.identityKey):void 0,preKey:Te(e.preKey)?be.fromJSON(e.preKey):void 0}),toJSON(e){const t={};return void 0!==e.identityKey&&(t.identityKey=e.identityKey?be.toJSON(e.identityKey):void 0),void 0!==e.preKey&&(t.preKey=e.preKey?be.toJSON(e.preKey):void 0),t},fromPartial(e){const t={identityKey:void 0,preKey:void 0};return t.identityKey=void 0!==e.identityKey&&null!==e.identityKey?be.fromPartial(e.identityKey):void 0,t.preKey=void 0!==e.preKey&&null!==e.preKey?be.fromPartial(e.preKey):void 0,t}};function _e(){return {timestamp:ee.UZERO,signature:void 0,secp256k1Uncompressed:void 0}}const Se={encode:(e,t=re().Writer.create())=>(e.timestamp.isZero()||t.uint32(8).uint64(e.timestamp),void 0!==e.signature&&ie.encode(e.signature,t.uint32(18).fork()).ldelim(),void 0!==e.secp256k1Uncompressed&&ke.encode(e.secp256k1Uncompressed,t.uint32(26).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=_e();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.timestamp=r.uint64();break;case 2:i.signature=ie.decode(r,r.uint32());break;case 3:i.secp256k1Uncompressed=ke.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({timestamp:Te(e.timestamp)?ee.fromValue(e.timestamp):ee.UZERO,signature:Te(e.signature)?ie.fromJSON(e.signature):void 0,secp256k1Uncompressed:Te(e.secp256k1Uncompressed)?ke.fromJSON(e.secp256k1Uncompressed):void 0}),toJSON(e){const t={};return void 0!==e.timestamp&&(t.timestamp=(e.timestamp||ee.UZERO).toString()),void 0!==e.signature&&(t.signature=e.signature?ie.toJSON(e.signature):void 0),void 0!==e.secp256k1Uncompressed&&(t.secp256k1Uncompressed=e.secp256k1Uncompressed?ke.toJSON(e.secp256k1Uncompressed):void 0),t},fromPartial(e){const t=_e();return t.timestamp=void 0!==e.timestamp&&null!==e.timestamp?ee.fromValue(e.timestamp):ee.UZERO,t.signature=void 0!==e.signature&&null!==e.signature?ie.fromPartial(e.signature):void 0,t.secp256k1Uncompressed=void 0!==e.secp256k1Uncompressed&&null!==e.secp256k1Uncompressed?ke.fromPartial(e.secp256k1Uncompressed):void 0,t}};function Ee(){return {bytes:new Uint8Array}}const ke={encode:(e,t=re().Writer.create())=>(0!==e.bytes.length&&t.uint32(10).bytes(e.bytes),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=Ee();for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.bytes=r.bytes():r.skipType(7&e);}return i},fromJSON:e=>({bytes:Te(e.bytes)?xe(e.bytes):new Uint8Array}),toJSON(e){const t={};return void 0!==e.bytes&&(t.bytes=Ce(void 0!==e.bytes?e.bytes:new Uint8Array)),t},fromPartial(e){var t;const r=Ee();return r.bytes=null!==(t=e.bytes)&&void 0!==t?t:new Uint8Array,r}},Ae={encode:(e,t=re().Writer.create())=>(void 0!==e.identityKey&&Se.encode(e.identityKey,t.uint32(10).fork()).ldelim(),void 0!==e.preKey&&Se.encode(e.preKey,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={identityKey:void 0,preKey:void 0};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.identityKey=Se.decode(r,r.uint32());break;case 2:i.preKey=Se.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({identityKey:Te(e.identityKey)?Se.fromJSON(e.identityKey):void 0,preKey:Te(e.preKey)?Se.fromJSON(e.preKey):void 0}),toJSON(e){const t={};return void 0!==e.identityKey&&(t.identityKey=e.identityKey?Se.toJSON(e.identityKey):void 0),void 0!==e.preKey&&(t.preKey=e.preKey?Se.toJSON(e.preKey):void 0),t},fromPartial(e){const t={identityKey:void 0,preKey:void 0};return t.identityKey=void 0!==e.identityKey&&null!==e.identityKey?Se.fromPartial(e.identityKey):void 0,t.preKey=void 0!==e.preKey&&null!==e.preKey?Se.fromPartial(e.preKey):void 0,t}};var Pe=(()=>{if(void 0!==Pe)return Pe;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==r.g)return r.g;throw "Unable to locate global object"})();function xe(e){if(Pe.Buffer)return Uint8Array.from(Pe.Buffer.from(e,"base64"));{const t=Pe.atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r}}function Ce(e){if(Pe.Buffer)return Pe.Buffer.from(e).toString("base64");{const t=[];return e.forEach((e=>{t.push(String.fromCharCode(e));})),Pe.btoa(t.join(""))}}function Te(e){return null!=e}re().util.Long!==ee&&(re().util.Long=ee,re().configure());const Ne="xmtp.message_api.v1";function Re(){return {identityKey:void 0,authDataBytes:new Uint8Array,authDataSignature:void 0}}const Be={encode:(e,t=re().Writer.create())=>(void 0!==e.identityKey&&Se.encode(e.identityKey,t.uint32(10).fork()).ldelim(),0!==e.authDataBytes.length&&t.uint32(18).bytes(e.authDataBytes),void 0!==e.authDataSignature&&ie.encode(e.authDataSignature,t.uint32(26).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=Re();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.identityKey=Se.decode(r,r.uint32());break;case 2:i.authDataBytes=r.bytes();break;case 3:i.authDataSignature=ie.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({identityKey:Ue(e.identityKey)?Se.fromJSON(e.identityKey):void 0,authDataBytes:Ue(e.authDataBytes)?De(e.authDataBytes):new Uint8Array,authDataSignature:Ue(e.authDataSignature)?ie.fromJSON(e.authDataSignature):void 0}),toJSON(e){const t={};return void 0!==e.identityKey&&(t.identityKey=e.identityKey?Se.toJSON(e.identityKey):void 0),void 0!==e.authDataBytes&&(t.authDataBytes=function(e){if(Me.Buffer)return Me.Buffer.from(e).toString("base64");{const t=[];return e.forEach((e=>{t.push(String.fromCharCode(e));})),Me.btoa(t.join(""))}}(void 0!==e.authDataBytes?e.authDataBytes:new Uint8Array)),void 0!==e.authDataSignature&&(t.authDataSignature=e.authDataSignature?ie.toJSON(e.authDataSignature):void 0),t},fromPartial(e){var t;const r=Re();return r.identityKey=void 0!==e.identityKey&&null!==e.identityKey?Se.fromPartial(e.identityKey):void 0,r.authDataBytes=null!==(t=e.authDataBytes)&&void 0!==t?t:new Uint8Array,r.authDataSignature=void 0!==e.authDataSignature&&null!==e.authDataSignature?ie.fromPartial(e.authDataSignature):void 0,r}};function Ie(){return {walletAddr:"",createdNs:ee.UZERO}}const Oe={encode:(e,t=re().Writer.create())=>(""!==e.walletAddr&&t.uint32(10).string(e.walletAddr),e.createdNs.isZero()||t.uint32(16).uint64(e.createdNs),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=Ie();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.walletAddr=r.string();break;case 2:i.createdNs=r.uint64();break;default:r.skipType(7&e);}}return i},fromJSON:e=>({walletAddr:Ue(e.walletAddr)?String(e.walletAddr):"",createdNs:Ue(e.createdNs)?ee.fromValue(e.createdNs):ee.UZERO}),toJSON(e){const t={};return void 0!==e.walletAddr&&(t.walletAddr=e.walletAddr),void 0!==e.createdNs&&(t.createdNs=(e.createdNs||ee.UZERO).toString()),t},fromPartial(e){var t;const r=Ie();return r.walletAddr=null!==(t=e.walletAddr)&&void 0!==t?t:"",r.createdNs=void 0!==e.createdNs&&null!==e.createdNs?ee.fromValue(e.createdNs):ee.UZERO,r}};var Me=(()=>{if(void 0!==Me)return Me;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==r.g)return r.g;throw "Unable to locate global object"})();function De(e){if(Me.Buffer)return Uint8Array.from(Me.Buffer.from(e,"base64"));{const t=Me.atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r}}function Ue(e){return null!=e}re().util.Long!==ee&&(re().util.Long=ee,re().configure());const Ke="xmtp.message_contents",Fe={encode:(e,t=re().Writer.create())=>(void 0!==e.aes256GcmHkdfSha256&&je.encode(e.aes256GcmHkdfSha256,t.uint32(10).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={aes256GcmHkdfSha256:void 0};for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.aes256GcmHkdfSha256=je.decode(r,r.uint32()):r.skipType(7&e);}return i},fromJSON:e=>({aes256GcmHkdfSha256:Ge(e.aes256GcmHkdfSha256)?je.fromJSON(e.aes256GcmHkdfSha256):void 0}),toJSON(e){const t={};return void 0!==e.aes256GcmHkdfSha256&&(t.aes256GcmHkdfSha256=e.aes256GcmHkdfSha256?je.toJSON(e.aes256GcmHkdfSha256):void 0),t},fromPartial(e){const t={aes256GcmHkdfSha256:void 0};return t.aes256GcmHkdfSha256=void 0!==e.aes256GcmHkdfSha256&&null!==e.aes256GcmHkdfSha256?je.fromPartial(e.aes256GcmHkdfSha256):void 0,t}};function Le(){return {hkdfSalt:new Uint8Array,gcmNonce:new Uint8Array,payload:new Uint8Array}}const je={encode:(e,t=re().Writer.create())=>(0!==e.hkdfSalt.length&&t.uint32(10).bytes(e.hkdfSalt),0!==e.gcmNonce.length&&t.uint32(18).bytes(e.gcmNonce),0!==e.payload.length&&t.uint32(26).bytes(e.payload),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=Le();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.hkdfSalt=r.bytes();break;case 2:i.gcmNonce=r.bytes();break;case 3:i.payload=r.bytes();break;default:r.skipType(7&e);}}return i},fromJSON:e=>({hkdfSalt:Ge(e.hkdfSalt)?ze(e.hkdfSalt):new Uint8Array,gcmNonce:Ge(e.gcmNonce)?ze(e.gcmNonce):new Uint8Array,payload:Ge(e.payload)?ze(e.payload):new Uint8Array}),toJSON(e){const t={};return void 0!==e.hkdfSalt&&(t.hkdfSalt=We(void 0!==e.hkdfSalt?e.hkdfSalt:new Uint8Array)),void 0!==e.gcmNonce&&(t.gcmNonce=We(void 0!==e.gcmNonce?e.gcmNonce:new Uint8Array)),void 0!==e.payload&&(t.payload=We(void 0!==e.payload?e.payload:new Uint8Array)),t},fromPartial(e){var t,r,n;const i=Le();return i.hkdfSalt=null!==(t=e.hkdfSalt)&&void 0!==t?t:new Uint8Array,i.gcmNonce=null!==(r=e.gcmNonce)&&void 0!==r?r:new Uint8Array,i.payload=null!==(n=e.payload)&&void 0!==n?n:new Uint8Array,i}};var qe=(()=>{if(void 0!==qe)return qe;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==r.g)return r.g;throw "Unable to locate global object"})();function ze(e){if(qe.Buffer)return Uint8Array.from(qe.Buffer.from(e,"base64"));{const t=qe.atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r}}function We(e){if(qe.Buffer)return qe.Buffer.from(e).toString("base64");{const t=[];return e.forEach((e=>{t.push(String.fromCharCode(e));})),qe.btoa(t.join(""))}}function Ge(e){return null!=e}re().util.Long!==ee&&(re().util.Long=ee,re().configure());const Ve="xmtp.message_contents";function He(){return {sender:void 0,recipient:void 0,timestamp:ee.UZERO}}const Je={encode:(e,t=re().Writer.create())=>(void 0!==e.sender&&Ae.encode(e.sender,t.uint32(10).fork()).ldelim(),void 0!==e.recipient&&Ae.encode(e.recipient,t.uint32(18).fork()).ldelim(),e.timestamp.isZero()||t.uint32(24).uint64(e.timestamp),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=He();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.sender=Ae.decode(r,r.uint32());break;case 2:i.recipient=Ae.decode(r,r.uint32());break;case 3:i.timestamp=r.uint64();break;default:r.skipType(7&e);}}return i},fromJSON:e=>({sender:ot(e.sender)?Ae.fromJSON(e.sender):void 0,recipient:ot(e.recipient)?Ae.fromJSON(e.recipient):void 0,timestamp:ot(e.timestamp)?ee.fromValue(e.timestamp):ee.UZERO}),toJSON(e){const t={};return void 0!==e.sender&&(t.sender=e.sender?Ae.toJSON(e.sender):void 0),void 0!==e.recipient&&(t.recipient=e.recipient?Ae.toJSON(e.recipient):void 0),void 0!==e.timestamp&&(t.timestamp=(e.timestamp||ee.UZERO).toString()),t},fromPartial(e){const t=He();return t.sender=void 0!==e.sender&&null!==e.sender?Ae.fromPartial(e.sender):void 0,t.recipient=void 0!==e.recipient&&null!==e.recipient?Ae.fromPartial(e.recipient):void 0,t.timestamp=void 0!==e.timestamp&&null!==e.timestamp?ee.fromValue(e.timestamp):ee.UZERO,t}};function $e(){return {headerBytes:new Uint8Array,ciphertext:void 0}}const Ze={encode:(e,t=re().Writer.create())=>(0!==e.headerBytes.length&&t.uint32(10).bytes(e.headerBytes),void 0!==e.ciphertext&&Fe.encode(e.ciphertext,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=$e();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.headerBytes=r.bytes();break;case 2:i.ciphertext=Fe.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({headerBytes:ot(e.headerBytes)?nt(e.headerBytes):new Uint8Array,ciphertext:ot(e.ciphertext)?Fe.fromJSON(e.ciphertext):void 0}),toJSON(e){const t={};return void 0!==e.headerBytes&&(t.headerBytes=it(void 0!==e.headerBytes?e.headerBytes:new Uint8Array)),void 0!==e.ciphertext&&(t.ciphertext=e.ciphertext?Fe.toJSON(e.ciphertext):void 0),t},fromPartial(e){var t;const r=$e();return r.headerBytes=null!==(t=e.headerBytes)&&void 0!==t?t:new Uint8Array,r.ciphertext=void 0!==e.ciphertext&&null!==e.ciphertext?Fe.fromPartial(e.ciphertext):void 0,r}};function Xe(){return {createdNs:ee.UZERO,topic:""}}const Qe={encode:(e,t=re().Writer.create())=>(e.createdNs.isZero()||t.uint32(8).uint64(e.createdNs),""!==e.topic&&t.uint32(18).string(e.topic),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=Xe();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.createdNs=r.uint64();break;case 2:i.topic=r.string();break;default:r.skipType(7&e);}}return i},fromJSON:e=>({createdNs:ot(e.createdNs)?ee.fromValue(e.createdNs):ee.UZERO,topic:ot(e.topic)?String(e.topic):""}),toJSON(e){const t={};return void 0!==e.createdNs&&(t.createdNs=(e.createdNs||ee.UZERO).toString()),void 0!==e.topic&&(t.topic=e.topic),t},fromPartial(e){var t;const r=Xe();return r.createdNs=void 0!==e.createdNs&&null!==e.createdNs?ee.fromValue(e.createdNs):ee.UZERO,r.topic=null!==(t=e.topic)&&void 0!==t?t:"",r}};function Ye(){return {headerBytes:new Uint8Array,ciphertext:void 0}}const et={encode:(e,t=re().Writer.create())=>(0!==e.headerBytes.length&&t.uint32(10).bytes(e.headerBytes),void 0!==e.ciphertext&&Fe.encode(e.ciphertext,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=Ye();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.headerBytes=r.bytes();break;case 2:i.ciphertext=Fe.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({headerBytes:ot(e.headerBytes)?nt(e.headerBytes):new Uint8Array,ciphertext:ot(e.ciphertext)?Fe.fromJSON(e.ciphertext):void 0}),toJSON(e){const t={};return void 0!==e.headerBytes&&(t.headerBytes=it(void 0!==e.headerBytes?e.headerBytes:new Uint8Array)),void 0!==e.ciphertext&&(t.ciphertext=e.ciphertext?Fe.toJSON(e.ciphertext):void 0),t},fromPartial(e){var t;const r=Ye();return r.headerBytes=null!==(t=e.headerBytes)&&void 0!==t?t:new Uint8Array,r.ciphertext=void 0!==e.ciphertext&&null!==e.ciphertext?Fe.fromPartial(e.ciphertext):void 0,r}},tt={encode:(e,t=re().Writer.create())=>(void 0!==e.v1&&Ze.encode(e.v1,t.uint32(10).fork()).ldelim(),void 0!==e.v2&&et.encode(e.v2,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={v1:void 0,v2:void 0};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.v1=Ze.decode(r,r.uint32());break;case 2:i.v2=et.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({v1:ot(e.v1)?Ze.fromJSON(e.v1):void 0,v2:ot(e.v2)?et.fromJSON(e.v2):void 0}),toJSON(e){const t={};return void 0!==e.v1&&(t.v1=e.v1?Ze.toJSON(e.v1):void 0),void 0!==e.v2&&(t.v2=e.v2?et.toJSON(e.v2):void 0),t},fromPartial(e){const t={v1:void 0,v2:void 0};return t.v1=void 0!==e.v1&&null!==e.v1?Ze.fromPartial(e.v1):void 0,t.v2=void 0!==e.v2&&null!==e.v2?et.fromPartial(e.v2):void 0,t}};var rt=(()=>{if(void 0!==rt)return rt;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==r.g)return r.g;throw "Unable to locate global object"})();function nt(e){if(rt.Buffer)return Uint8Array.from(rt.Buffer.from(e,"base64"));{const t=rt.atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r}}function it(e){if(rt.Buffer)return rt.Buffer.from(e).toString("base64");{const t=[];return e.forEach((e=>{t.push(String.fromCharCode(e));})),rt.btoa(t.join(""))}}function ot(e){return null!=e}re().util.Long!==ee&&(re().util.Long=ee,re().configure());const st="xmtp.message_contents";var at;function lt(e){switch(e){case 0:case"COMPRESSION_DEFLATE":return at.COMPRESSION_DEFLATE;case 1:case"COMPRESSION_GZIP":return at.COMPRESSION_GZIP;default:return at.UNRECOGNIZED}}function ut(e){switch(e){case at.COMPRESSION_DEFLATE:return "COMPRESSION_DEFLATE";case at.COMPRESSION_GZIP:return "COMPRESSION_GZIP";case at.UNRECOGNIZED:default:return "UNRECOGNIZED"}}!function(e){e[e.COMPRESSION_DEFLATE=0]="COMPRESSION_DEFLATE",e[e.COMPRESSION_GZIP=1]="COMPRESSION_GZIP",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED";}(at||(at={}));const ct={encode:(e,t=re().Writer.create())=>(""!==e.authorityId&&t.uint32(10).string(e.authorityId),""!==e.typeId&&t.uint32(18).string(e.typeId),0!==e.versionMajor&&t.uint32(24).uint32(e.versionMajor),0!==e.versionMinor&&t.uint32(32).uint32(e.versionMinor),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={authorityId:"",typeId:"",versionMajor:0,versionMinor:0};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.authorityId=r.string();break;case 2:i.typeId=r.string();break;case 3:i.versionMajor=r.uint32();break;case 4:i.versionMinor=r.uint32();break;default:r.skipType(7&e);}}return i},fromJSON:e=>({authorityId:bt(e.authorityId)?String(e.authorityId):"",typeId:bt(e.typeId)?String(e.typeId):"",versionMajor:bt(e.versionMajor)?Number(e.versionMajor):0,versionMinor:bt(e.versionMinor)?Number(e.versionMinor):0}),toJSON(e){const t={};return void 0!==e.authorityId&&(t.authorityId=e.authorityId),void 0!==e.typeId&&(t.typeId=e.typeId),void 0!==e.versionMajor&&(t.versionMajor=Math.round(e.versionMajor)),void 0!==e.versionMinor&&(t.versionMinor=Math.round(e.versionMinor)),t},fromPartial(e){var t,r,n,i;const o={authorityId:"",typeId:"",versionMajor:0,versionMinor:0};return o.authorityId=null!==(t=e.authorityId)&&void 0!==t?t:"",o.typeId=null!==(r=e.typeId)&&void 0!==r?r:"",o.versionMajor=null!==(n=e.versionMajor)&&void 0!==n?n:0,o.versionMinor=null!==(i=e.versionMinor)&&void 0!==i?i:0,o}};function ht(){return {type:void 0,parameters:{},fallback:void 0,compression:void 0,content:new Uint8Array}}const dt={encode:(e,t=re().Writer.create())=>(void 0!==e.type&&ct.encode(e.type,t.uint32(10).fork()).ldelim(),Object.entries(e.parameters).forEach((([e,r])=>{ft.encode({key:e,value:r},t.uint32(18).fork()).ldelim();})),void 0!==e.fallback&&t.uint32(26).string(e.fallback),void 0!==e.compression&&t.uint32(40).int32(e.compression),0!==e.content.length&&t.uint32(34).bytes(e.content),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=ht();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.type=ct.decode(r,r.uint32());break;case 2:const t=ft.decode(r,r.uint32());void 0!==t.value&&(i.parameters[t.key]=t.value);break;case 3:i.fallback=r.string();break;case 5:i.compression=r.int32();break;case 4:i.content=r.bytes();break;default:r.skipType(7&e);}}return i},fromJSON(e){return {type:bt(e.type)?ct.fromJSON(e.type):void 0,parameters:(t=e.parameters,"object"==typeof t&&null!==t?Object.entries(e.parameters).reduce(((e,[t,r])=>(e[t]=String(r),e)),{}):{}),fallback:bt(e.fallback)?String(e.fallback):void 0,compression:bt(e.compression)?lt(e.compression):void 0,content:bt(e.content)?gt(e.content):new Uint8Array};var t;},toJSON(e){const t={};return void 0!==e.type&&(t.type=e.type?ct.toJSON(e.type):void 0),t.parameters={},e.parameters&&Object.entries(e.parameters).forEach((([e,r])=>{t.parameters[e]=r;})),void 0!==e.fallback&&(t.fallback=e.fallback),void 0!==e.compression&&(t.compression=void 0!==e.compression?ut(e.compression):void 0),void 0!==e.content&&(t.content=vt(void 0!==e.content?e.content:new Uint8Array)),t},fromPartial(e){var t,r,n,i;const o=ht();return o.type=void 0!==e.type&&null!==e.type?ct.fromPartial(e.type):void 0,o.parameters=Object.entries(null!==(t=e.parameters)&&void 0!==t?t:{}).reduce(((e,[t,r])=>(void 0!==r&&(e[t]=String(r)),e)),{}),o.fallback=null!==(r=e.fallback)&&void 0!==r?r:void 0,o.compression=null!==(n=e.compression)&&void 0!==n?n:void 0,o.content=null!==(i=e.content)&&void 0!==i?i:new Uint8Array,o}},ft={encode:(e,t=re().Writer.create())=>(""!==e.key&&t.uint32(10).string(e.key),""!==e.value&&t.uint32(18).string(e.value),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={key:"",value:""};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.key=r.string();break;case 2:i.value=r.string();break;default:r.skipType(7&e);}}return i},fromJSON:e=>({key:bt(e.key)?String(e.key):"",value:bt(e.value)?String(e.value):""}),toJSON(e){const t={};return void 0!==e.key&&(t.key=e.key),void 0!==e.value&&(t.value=e.value),t},fromPartial(e){var t,r;const n={key:"",value:""};return n.key=null!==(t=e.key)&&void 0!==t?t:"",n.value=null!==(r=e.value)&&void 0!==r?r:"",n}};function pt(){return {payload:new Uint8Array,sender:void 0,signature:void 0}}const mt={encode:(e,t=re().Writer.create())=>(0!==e.payload.length&&t.uint32(10).bytes(e.payload),void 0!==e.sender&&we.encode(e.sender,t.uint32(18).fork()).ldelim(),void 0!==e.signature&&ie.encode(e.signature,t.uint32(26).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=pt();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.payload=r.bytes();break;case 2:i.sender=we.decode(r,r.uint32());break;case 3:i.signature=ie.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({payload:bt(e.payload)?gt(e.payload):new Uint8Array,sender:bt(e.sender)?we.fromJSON(e.sender):void 0,signature:bt(e.signature)?ie.fromJSON(e.signature):void 0}),toJSON(e){const t={};return void 0!==e.payload&&(t.payload=vt(void 0!==e.payload?e.payload:new Uint8Array)),void 0!==e.sender&&(t.sender=e.sender?we.toJSON(e.sender):void 0),void 0!==e.signature&&(t.signature=e.signature?ie.toJSON(e.signature):void 0),t},fromPartial(e){var t;const r=pt();return r.payload=null!==(t=e.payload)&&void 0!==t?t:new Uint8Array,r.sender=void 0!==e.sender&&null!==e.sender?we.fromPartial(e.sender):void 0,r.signature=void 0!==e.signature&&null!==e.signature?ie.fromPartial(e.signature):void 0,r}};var yt=(()=>{if(void 0!==yt)return yt;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==r.g)return r.g;throw "Unable to locate global object"})();function gt(e){if(yt.Buffer)return Uint8Array.from(yt.Buffer.from(e,"base64"));{const t=yt.atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r}}function vt(e){if(yt.Buffer)return yt.Buffer.from(e).toString("base64");{const t=[];return e.forEach((e=>{t.push(String.fromCharCode(e));})),yt.btoa(t.join(""))}}function bt(e){return null!=e}re().util.Long!==ee&&(re().util.Long=ee,re().configure());const wt="xmtp.message_contents",_t={encode(e,t=re().Writer.create()){for(const r of e.parts)St.encode(r,t.uint32(10).fork()).ldelim();return t},decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={parts:[]};for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.parts.push(St.decode(r,r.uint32())):r.skipType(7&e);}return i},fromJSON:e=>({parts:Array.isArray(null==e?void 0:e.parts)?e.parts.map((e=>St.fromJSON(e))):[]}),toJSON(e){const t={};return e.parts?t.parts=e.parts.map((e=>e?St.toJSON(e):void 0)):t.parts=[],t},fromPartial(e){var t;const r={parts:[]};return r.parts=(null===(t=e.parts)||void 0===t?void 0:t.map((e=>St.fromPartial(e))))||[],r}},St={encode:(e,t=re().Writer.create())=>(void 0!==e.part&&dt.encode(e.part,t.uint32(10).fork()).ldelim(),void 0!==e.composite&&_t.encode(e.composite,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={part:void 0,composite:void 0};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.part=dt.decode(r,r.uint32());break;case 2:i.composite=_t.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({part:Et(e.part)?dt.fromJSON(e.part):void 0,composite:Et(e.composite)?_t.fromJSON(e.composite):void 0}),toJSON(e){const t={};return void 0!==e.part&&(t.part=e.part?dt.toJSON(e.part):void 0),void 0!==e.composite&&(t.composite=e.composite?_t.toJSON(e.composite):void 0),t},fromPartial(e){const t={part:void 0,composite:void 0};return t.part=void 0!==e.part&&null!==e.part?dt.fromPartial(e.part):void 0,t.composite=void 0!==e.composite&&null!==e.composite?_t.fromPartial(e.composite):void 0,t}};function Et(e){return null!=e}re().util.Long!==ee&&(re().util.Long=ee,re().configure());const kt="xmtp.message_contents";function At(){return {createdNs:ee.UZERO,secp256k1:void 0,publicKey:void 0}}const Pt={encode:(e,t=re().Writer.create())=>(e.createdNs.isZero()||t.uint32(8).uint64(e.createdNs),void 0!==e.secp256k1&&Ct.encode(e.secp256k1,t.uint32(18).fork()).ldelim(),void 0!==e.publicKey&&be.encode(e.publicKey,t.uint32(26).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=At();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.createdNs=r.uint64();break;case 2:i.secp256k1=Ct.decode(r,r.uint32());break;case 3:i.publicKey=be.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({createdNs:qt(e.createdNs)?ee.fromValue(e.createdNs):ee.UZERO,secp256k1:qt(e.secp256k1)?Ct.fromJSON(e.secp256k1):void 0,publicKey:qt(e.publicKey)?be.fromJSON(e.publicKey):void 0}),toJSON(e){const t={};return void 0!==e.createdNs&&(t.createdNs=(e.createdNs||ee.UZERO).toString()),void 0!==e.secp256k1&&(t.secp256k1=e.secp256k1?Ct.toJSON(e.secp256k1):void 0),void 0!==e.publicKey&&(t.publicKey=e.publicKey?be.toJSON(e.publicKey):void 0),t},fromPartial(e){const t=At();return t.createdNs=void 0!==e.createdNs&&null!==e.createdNs?ee.fromValue(e.createdNs):ee.UZERO,t.secp256k1=void 0!==e.secp256k1&&null!==e.secp256k1?Ct.fromPartial(e.secp256k1):void 0,t.publicKey=void 0!==e.publicKey&&null!==e.publicKey?be.fromPartial(e.publicKey):void 0,t}};function xt(){return {bytes:new Uint8Array}}const Ct={encode:(e,t=re().Writer.create())=>(0!==e.bytes.length&&t.uint32(10).bytes(e.bytes),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=xt();for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.bytes=r.bytes():r.skipType(7&e);}return i},fromJSON:e=>({bytes:qt(e.bytes)?Lt(e.bytes):new Uint8Array}),toJSON(e){const t={};return void 0!==e.bytes&&(t.bytes=jt(void 0!==e.bytes?e.bytes:new Uint8Array)),t},fromPartial(e){var t;const r=xt();return r.bytes=null!==(t=e.bytes)&&void 0!==t?t:new Uint8Array,r}},Tt={encode(e,t=re().Writer.create()){void 0!==e.identityKey&&Pt.encode(e.identityKey,t.uint32(10).fork()).ldelim();for(const r of e.preKeys)Pt.encode(r,t.uint32(18).fork()).ldelim();return t},decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={identityKey:void 0,preKeys:[]};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.identityKey=Pt.decode(r,r.uint32());break;case 2:i.preKeys.push(Pt.decode(r,r.uint32()));break;default:r.skipType(7&e);}}return i},fromJSON:e=>({identityKey:qt(e.identityKey)?Pt.fromJSON(e.identityKey):void 0,preKeys:Array.isArray(null==e?void 0:e.preKeys)?e.preKeys.map((e=>Pt.fromJSON(e))):[]}),toJSON(e){const t={};return void 0!==e.identityKey&&(t.identityKey=e.identityKey?Pt.toJSON(e.identityKey):void 0),e.preKeys?t.preKeys=e.preKeys.map((e=>e?Pt.toJSON(e):void 0)):t.preKeys=[],t},fromPartial(e){var t;const r={identityKey:void 0,preKeys:[]};return r.identityKey=void 0!==e.identityKey&&null!==e.identityKey?Pt.fromPartial(e.identityKey):void 0,r.preKeys=(null===(t=e.preKeys)||void 0===t?void 0:t.map((e=>Pt.fromPartial(e))))||[],r}};function Nt(){return {timestamp:ee.UZERO,secp256k1:void 0,publicKey:void 0}}const Rt={encode:(e,t=re().Writer.create())=>(e.timestamp.isZero()||t.uint32(8).uint64(e.timestamp),void 0!==e.secp256k1&&It.encode(e.secp256k1,t.uint32(18).fork()).ldelim(),void 0!==e.publicKey&&Se.encode(e.publicKey,t.uint32(26).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=Nt();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.timestamp=r.uint64();break;case 2:i.secp256k1=It.decode(r,r.uint32());break;case 3:i.publicKey=Se.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({timestamp:qt(e.timestamp)?ee.fromValue(e.timestamp):ee.UZERO,secp256k1:qt(e.secp256k1)?It.fromJSON(e.secp256k1):void 0,publicKey:qt(e.publicKey)?Se.fromJSON(e.publicKey):void 0}),toJSON(e){const t={};return void 0!==e.timestamp&&(t.timestamp=(e.timestamp||ee.UZERO).toString()),void 0!==e.secp256k1&&(t.secp256k1=e.secp256k1?It.toJSON(e.secp256k1):void 0),void 0!==e.publicKey&&(t.publicKey=e.publicKey?Se.toJSON(e.publicKey):void 0),t},fromPartial(e){const t=Nt();return t.timestamp=void 0!==e.timestamp&&null!==e.timestamp?ee.fromValue(e.timestamp):ee.UZERO,t.secp256k1=void 0!==e.secp256k1&&null!==e.secp256k1?It.fromPartial(e.secp256k1):void 0,t.publicKey=void 0!==e.publicKey&&null!==e.publicKey?Se.fromPartial(e.publicKey):void 0,t}};function Bt(){return {bytes:new Uint8Array}}const It={encode:(e,t=re().Writer.create())=>(0!==e.bytes.length&&t.uint32(10).bytes(e.bytes),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=Bt();for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.bytes=r.bytes():r.skipType(7&e);}return i},fromJSON:e=>({bytes:qt(e.bytes)?Lt(e.bytes):new Uint8Array}),toJSON(e){const t={};return void 0!==e.bytes&&(t.bytes=jt(void 0!==e.bytes?e.bytes:new Uint8Array)),t},fromPartial(e){var t;const r=Bt();return r.bytes=null!==(t=e.bytes)&&void 0!==t?t:new Uint8Array,r}},Ot={encode(e,t=re().Writer.create()){void 0!==e.identityKey&&Rt.encode(e.identityKey,t.uint32(10).fork()).ldelim();for(const r of e.preKeys)Rt.encode(r,t.uint32(18).fork()).ldelim();return t},decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={identityKey:void 0,preKeys:[]};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.identityKey=Rt.decode(r,r.uint32());break;case 2:i.preKeys.push(Rt.decode(r,r.uint32()));break;default:r.skipType(7&e);}}return i},fromJSON:e=>({identityKey:qt(e.identityKey)?Rt.fromJSON(e.identityKey):void 0,preKeys:Array.isArray(null==e?void 0:e.preKeys)?e.preKeys.map((e=>Rt.fromJSON(e))):[]}),toJSON(e){const t={};return void 0!==e.identityKey&&(t.identityKey=e.identityKey?Rt.toJSON(e.identityKey):void 0),e.preKeys?t.preKeys=e.preKeys.map((e=>e?Rt.toJSON(e):void 0)):t.preKeys=[],t},fromPartial(e){var t;const r={identityKey:void 0,preKeys:[]};return r.identityKey=void 0!==e.identityKey&&null!==e.identityKey?Rt.fromPartial(e.identityKey):void 0,r.preKeys=(null===(t=e.preKeys)||void 0===t?void 0:t.map((e=>Rt.fromPartial(e))))||[],r}},Mt={encode:(e,t=re().Writer.create())=>(void 0!==e.v1&&Ot.encode(e.v1,t.uint32(10).fork()).ldelim(),void 0!==e.v2&&Tt.encode(e.v2,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={v1:void 0,v2:void 0};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.v1=Ot.decode(r,r.uint32());break;case 2:i.v2=Tt.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({v1:qt(e.v1)?Ot.fromJSON(e.v1):void 0,v2:qt(e.v2)?Tt.fromJSON(e.v2):void 0}),toJSON(e){const t={};return void 0!==e.v1&&(t.v1=e.v1?Ot.toJSON(e.v1):void 0),void 0!==e.v2&&(t.v2=e.v2?Tt.toJSON(e.v2):void 0),t},fromPartial(e){const t={v1:void 0,v2:void 0};return t.v1=void 0!==e.v1&&null!==e.v1?Ot.fromPartial(e.v1):void 0,t.v2=void 0!==e.v2&&null!==e.v2?Tt.fromPartial(e.v2):void 0,t}};function Dt(){return {walletPreKey:new Uint8Array,ciphertext:void 0}}const Ut={encode:(e,t=re().Writer.create())=>(0!==e.walletPreKey.length&&t.uint32(10).bytes(e.walletPreKey),void 0!==e.ciphertext&&Fe.encode(e.ciphertext,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=Dt();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.walletPreKey=r.bytes();break;case 2:i.ciphertext=Fe.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({walletPreKey:qt(e.walletPreKey)?Lt(e.walletPreKey):new Uint8Array,ciphertext:qt(e.ciphertext)?Fe.fromJSON(e.ciphertext):void 0}),toJSON(e){const t={};return void 0!==e.walletPreKey&&(t.walletPreKey=jt(void 0!==e.walletPreKey?e.walletPreKey:new Uint8Array)),void 0!==e.ciphertext&&(t.ciphertext=e.ciphertext?Fe.toJSON(e.ciphertext):void 0),t},fromPartial(e){var t;const r=Dt();return r.walletPreKey=null!==(t=e.walletPreKey)&&void 0!==t?t:new Uint8Array,r.ciphertext=void 0!==e.ciphertext&&null!==e.ciphertext?Fe.fromPartial(e.ciphertext):void 0,r}},Kt={encode:(e,t=re().Writer.create())=>(void 0!==e.v1&&Ut.encode(e.v1,t.uint32(10).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={v1:void 0};for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.v1=Ut.decode(r,r.uint32()):r.skipType(7&e);}return i},fromJSON:e=>({v1:qt(e.v1)?Ut.fromJSON(e.v1):void 0}),toJSON(e){const t={};return void 0!==e.v1&&(t.v1=e.v1?Ut.toJSON(e.v1):void 0),t},fromPartial(e){const t={v1:void 0};return t.v1=void 0!==e.v1&&null!==e.v1?Ut.fromPartial(e.v1):void 0,t}};var Ft=(()=>{if(void 0!==Ft)return Ft;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==r.g)return r.g;throw "Unable to locate global object"})();function Lt(e){if(Ft.Buffer)return Uint8Array.from(Ft.Buffer.from(e,"base64"));{const t=Ft.atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r}}function jt(e){if(Ft.Buffer)return Ft.Buffer.from(e).toString("base64");{const t=[];return e.forEach((e=>{t.push(String.fromCharCode(e));})),Ft.btoa(t.join(""))}}function qt(e){return null!=e}re().util.Long!==ee&&(re().util.Long=ee,re().configure());const zt="xmtp.message_contents",Wt={encode:(e,t=re().Writer.create())=>(void 0!==e.keyBundle&&Ae.encode(e.keyBundle,t.uint32(10).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={keyBundle:void 0};for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.keyBundle=Ae.decode(r,r.uint32()):r.skipType(7&e);}return i},fromJSON:e=>({keyBundle:Ht(e.keyBundle)?Ae.fromJSON(e.keyBundle):void 0}),toJSON(e){const t={};return void 0!==e.keyBundle&&(t.keyBundle=e.keyBundle?Ae.toJSON(e.keyBundle):void 0),t},fromPartial(e){const t={keyBundle:void 0};return t.keyBundle=void 0!==e.keyBundle&&null!==e.keyBundle?Ae.fromPartial(e.keyBundle):void 0,t}},Gt={encode:(e,t=re().Writer.create())=>(void 0!==e.keyBundle&&we.encode(e.keyBundle,t.uint32(10).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={keyBundle:void 0};for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.keyBundle=we.decode(r,r.uint32()):r.skipType(7&e);}return i},fromJSON:e=>({keyBundle:Ht(e.keyBundle)?we.fromJSON(e.keyBundle):void 0}),toJSON(e){const t={};return void 0!==e.keyBundle&&(t.keyBundle=e.keyBundle?we.toJSON(e.keyBundle):void 0),t},fromPartial(e){const t={keyBundle:void 0};return t.keyBundle=void 0!==e.keyBundle&&null!==e.keyBundle?we.fromPartial(e.keyBundle):void 0,t}},Vt={encode:(e,t=re().Writer.create())=>(void 0!==e.v1&&Wt.encode(e.v1,t.uint32(10).fork()).ldelim(),void 0!==e.v2&&Gt.encode(e.v2,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={v1:void 0,v2:void 0};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.v1=Wt.decode(r,r.uint32());break;case 2:i.v2=Gt.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({v1:Ht(e.v1)?Wt.fromJSON(e.v1):void 0,v2:Ht(e.v2)?Gt.fromJSON(e.v2):void 0}),toJSON(e){const t={};return void 0!==e.v1&&(t.v1=e.v1?Wt.toJSON(e.v1):void 0),void 0!==e.v2&&(t.v2=e.v2?Gt.toJSON(e.v2):void 0),t},fromPartial(e){const t={v1:void 0,v2:void 0};return t.v1=void 0!==e.v1&&null!==e.v1?Wt.fromPartial(e.v1):void 0,t.v2=void 0!==e.v2&&null!==e.v2?Gt.fromPartial(e.v2):void 0,t}};function Ht(e){return null!=e}re().util.Long!==ee&&(re().util.Long=ee,re().configure());const Jt="xmtp.message_contents",$t={encode:(e,t=re().Writer.create())=>(""!==e.topic&&t.uint32(10).string(e.topic),void 0!==e.context&&Qt.encode(e.context,t.uint32(18).fork()).ldelim(),void 0!==e.aes256GcmHkdfSha256&&Xt.encode(e.aes256GcmHkdfSha256,t.uint32(26).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={topic:"",context:void 0,aes256GcmHkdfSha256:void 0};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.topic=r.string();break;case 2:i.context=Qt.decode(r,r.uint32());break;case 3:i.aes256GcmHkdfSha256=Xt.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({topic:lr(e.topic)?String(e.topic):"",context:lr(e.context)?Qt.fromJSON(e.context):void 0,aes256GcmHkdfSha256:lr(e.aes256GcmHkdfSha256)?Xt.fromJSON(e.aes256GcmHkdfSha256):void 0}),toJSON(e){const t={};return void 0!==e.topic&&(t.topic=e.topic),void 0!==e.context&&(t.context=e.context?Qt.toJSON(e.context):void 0),void 0!==e.aes256GcmHkdfSha256&&(t.aes256GcmHkdfSha256=e.aes256GcmHkdfSha256?Xt.toJSON(e.aes256GcmHkdfSha256):void 0),t},fromPartial(e){var t;const r={topic:"",context:void 0,aes256GcmHkdfSha256:void 0};return r.topic=null!==(t=e.topic)&&void 0!==t?t:"",r.context=void 0!==e.context&&null!==e.context?Qt.fromPartial(e.context):void 0,r.aes256GcmHkdfSha256=void 0!==e.aes256GcmHkdfSha256&&null!==e.aes256GcmHkdfSha256?Xt.fromPartial(e.aes256GcmHkdfSha256):void 0,r}};function Zt(){return {keyMaterial:new Uint8Array}}const Xt={encode:(e,t=re().Writer.create())=>(0!==e.keyMaterial.length&&t.uint32(10).bytes(e.keyMaterial),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=Zt();for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.keyMaterial=r.bytes():r.skipType(7&e);}return i},fromJSON:e=>({keyMaterial:lr(e.keyMaterial)?sr(e.keyMaterial):new Uint8Array}),toJSON(e){const t={};return void 0!==e.keyMaterial&&(t.keyMaterial=ar(void 0!==e.keyMaterial?e.keyMaterial:new Uint8Array)),t},fromPartial(e){var t;const r=Zt();return r.keyMaterial=null!==(t=e.keyMaterial)&&void 0!==t?t:new Uint8Array,r}},Qt={encode:(e,t=re().Writer.create())=>(""!==e.conversationId&&t.uint32(10).string(e.conversationId),Object.entries(e.metadata).forEach((([e,r])=>{Yt.encode({key:e,value:r},t.uint32(18).fork()).ldelim();})),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={conversationId:"",metadata:{}};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.conversationId=r.string();break;case 2:const t=Yt.decode(r,r.uint32());void 0!==t.value&&(i.metadata[t.key]=t.value);break;default:r.skipType(7&e);}}return i},fromJSON(e){return {conversationId:lr(e.conversationId)?String(e.conversationId):"",metadata:(t=e.metadata,"object"==typeof t&&null!==t?Object.entries(e.metadata).reduce(((e,[t,r])=>(e[t]=String(r),e)),{}):{})};var t;},toJSON(e){const t={};return void 0!==e.conversationId&&(t.conversationId=e.conversationId),t.metadata={},e.metadata&&Object.entries(e.metadata).forEach((([e,r])=>{t.metadata[e]=r;})),t},fromPartial(e){var t,r;const n={conversationId:"",metadata:{}};return n.conversationId=null!==(t=e.conversationId)&&void 0!==t?t:"",n.metadata=Object.entries(null!==(r=e.metadata)&&void 0!==r?r:{}).reduce(((e,[t,r])=>(void 0!==r&&(e[t]=String(r)),e)),{}),n}},Yt={encode:(e,t=re().Writer.create())=>(""!==e.key&&t.uint32(10).string(e.key),""!==e.value&&t.uint32(18).string(e.value),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={key:"",value:""};for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.key=r.string();break;case 2:i.value=r.string();break;default:r.skipType(7&e);}}return i},fromJSON:e=>({key:lr(e.key)?String(e.key):"",value:lr(e.value)?String(e.value):""}),toJSON(e){const t={};return void 0!==e.key&&(t.key=e.key),void 0!==e.value&&(t.value=e.value),t},fromPartial(e){var t,r;const n={key:"",value:""};return n.key=null!==(t=e.key)&&void 0!==t?t:"",n.value=null!==(r=e.value)&&void 0!==r?r:"",n}};function er(){return {sender:void 0,recipient:void 0,createdNs:ee.UZERO}}const tr={encode:(e,t=re().Writer.create())=>(void 0!==e.sender&&we.encode(e.sender,t.uint32(10).fork()).ldelim(),void 0!==e.recipient&&we.encode(e.recipient,t.uint32(18).fork()).ldelim(),e.createdNs.isZero()||t.uint32(24).uint64(e.createdNs),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=er();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.sender=we.decode(r,r.uint32());break;case 2:i.recipient=we.decode(r,r.uint32());break;case 3:i.createdNs=r.uint64();break;default:r.skipType(7&e);}}return i},fromJSON:e=>({sender:lr(e.sender)?we.fromJSON(e.sender):void 0,recipient:lr(e.recipient)?we.fromJSON(e.recipient):void 0,createdNs:lr(e.createdNs)?ee.fromValue(e.createdNs):ee.UZERO}),toJSON(e){const t={};return void 0!==e.sender&&(t.sender=e.sender?we.toJSON(e.sender):void 0),void 0!==e.recipient&&(t.recipient=e.recipient?we.toJSON(e.recipient):void 0),void 0!==e.createdNs&&(t.createdNs=(e.createdNs||ee.UZERO).toString()),t},fromPartial(e){const t=er();return t.sender=void 0!==e.sender&&null!==e.sender?we.fromPartial(e.sender):void 0,t.recipient=void 0!==e.recipient&&null!==e.recipient?we.fromPartial(e.recipient):void 0,t.createdNs=void 0!==e.createdNs&&null!==e.createdNs?ee.fromValue(e.createdNs):ee.UZERO,t}};function rr(){return {headerBytes:new Uint8Array,ciphertext:void 0}}const nr={encode:(e,t=re().Writer.create())=>(0!==e.headerBytes.length&&t.uint32(10).bytes(e.headerBytes),void 0!==e.ciphertext&&Fe.encode(e.ciphertext,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i=rr();for(;r.pos<n;){const e=r.uint32();switch(e>>>3){case 1:i.headerBytes=r.bytes();break;case 2:i.ciphertext=Fe.decode(r,r.uint32());break;default:r.skipType(7&e);}}return i},fromJSON:e=>({headerBytes:lr(e.headerBytes)?sr(e.headerBytes):new Uint8Array,ciphertext:lr(e.ciphertext)?Fe.fromJSON(e.ciphertext):void 0}),toJSON(e){const t={};return void 0!==e.headerBytes&&(t.headerBytes=ar(void 0!==e.headerBytes?e.headerBytes:new Uint8Array)),void 0!==e.ciphertext&&(t.ciphertext=e.ciphertext?Fe.toJSON(e.ciphertext):void 0),t},fromPartial(e){var t;const r=rr();return r.headerBytes=null!==(t=e.headerBytes)&&void 0!==t?t:new Uint8Array,r.ciphertext=void 0!==e.ciphertext&&null!==e.ciphertext?Fe.fromPartial(e.ciphertext):void 0,r}},ir={encode:(e,t=re().Writer.create())=>(void 0!==e.v1&&nr.encode(e.v1,t.uint32(10).fork()).ldelim(),t),decode(e,t){const r=e instanceof re().Reader?e:new(re().Reader)(e);let n=void 0===t?r.len:r.pos+t;const i={v1:void 0};for(;r.pos<n;){const e=r.uint32();e>>>3==1?i.v1=nr.decode(r,r.uint32()):r.skipType(7&e);}return i},fromJSON:e=>({v1:lr(e.v1)?nr.fromJSON(e.v1):void 0}),toJSON(e){const t={};return void 0!==e.v1&&(t.v1=e.v1?nr.toJSON(e.v1):void 0),t},fromPartial(e){const t={v1:void 0};return t.v1=void 0!==e.v1&&null!==e.v1?nr.fromPartial(e.v1):void 0,t}};var or=(()=>{if(void 0!==or)return or;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==r.g)return r.g;throw "Unable to locate global object"})();function sr(e){if(or.Buffer)return Uint8Array.from(or.Buffer.from(e,"base64"));{const t=or.atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r}}function ar(e){if(or.Buffer)return or.Buffer.from(e).toString("base64");{const t=[];return e.forEach((e=>{t.push(String.fromCharCode(e));})),or.btoa(t.join(""))}}function lr(e){return null!=e}re().util.Long!==ee&&(re().util.Long=ee,re().configure());},8826:function(e){!function(t){function r(e){return parseInt(e)===e}function n(e){if(!r(e.length))return !1;for(var t=0;t<e.length;t++)if(!r(e[t])||e[t]<0||e[t]>255)return !1;return !0}function i(e,t){if(e.buffer&&ArrayBuffer.isView(e)&&"Uint8Array"===e.name)return t&&(e=e.slice?e.slice():Array.prototype.slice.call(e)),e;if(Array.isArray(e)){if(!n(e))throw new Error("Array contains invalid value: "+e);return new Uint8Array(e)}if(r(e.length)&&n(e))return new Uint8Array(e);throw new Error("unsupported array-like object")}function o(e){return new Uint8Array(e)}function s(e,t,r,n,i){null==n&&null==i||(e=e.slice?e.slice(n,i):Array.prototype.slice.call(e,n,i)),t.set(e,r);}var a,l={toBytes:function(e){var t=[],r=0;for(e=encodeURI(e);r<e.length;){var n=e.charCodeAt(r++);37===n?(t.push(parseInt(e.substr(r,2),16)),r+=2):t.push(n);}return i(t)},fromBytes:function(e){for(var t=[],r=0;r<e.length;){var n=e[r];n<128?(t.push(String.fromCharCode(n)),r++):n>191&&n<224?(t.push(String.fromCharCode((31&n)<<6|63&e[r+1])),r+=2):(t.push(String.fromCharCode((15&n)<<12|(63&e[r+1])<<6|63&e[r+2])),r+=3);}return t.join("")}},u=(a="0123456789abcdef",{toBytes:function(e){for(var t=[],r=0;r<e.length;r+=2)t.push(parseInt(e.substr(r,2),16));return t},fromBytes:function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r];t.push(a[(240&n)>>4]+a[15&n]);}return t.join("")}}),c={16:10,24:12,32:14},h=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],d=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],f=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],p=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],m=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],y=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],g=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],v=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],b=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],w=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],_=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],S=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],E=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],k=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],A=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function P(e){for(var t=[],r=0;r<e.length;r+=4)t.push(e[r]<<24|e[r+1]<<16|e[r+2]<<8|e[r+3]);return t}var x=function(e){if(!(this instanceof x))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:i(e,!0)}),this._prepare();};x.prototype._prepare=function(){var e=c[this.key.length];if(null==e)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var t=0;t<=e;t++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);var r,n=4*(e+1),i=this.key.length/4,o=P(this.key);for(t=0;t<i;t++)r=t>>2,this._Ke[r][t%4]=o[t],this._Kd[e-r][t%4]=o[t];for(var s,a=0,l=i;l<n;){if(s=o[i-1],o[0]^=d[s>>16&255]<<24^d[s>>8&255]<<16^d[255&s]<<8^d[s>>24&255]^h[a]<<24,a+=1,8!=i)for(t=1;t<i;t++)o[t]^=o[t-1];else {for(t=1;t<i/2;t++)o[t]^=o[t-1];for(s=o[i/2-1],o[i/2]^=d[255&s]^d[s>>8&255]<<8^d[s>>16&255]<<16^d[s>>24&255]<<24,t=i/2+1;t<i;t++)o[t]^=o[t-1];}for(t=0;t<i&&l<n;)u=l>>2,f=l%4,this._Ke[u][f]=o[t],this._Kd[e-u][f]=o[t++],l++;}for(var u=1;u<e;u++)for(var f=0;f<4;f++)s=this._Kd[u][f],this._Kd[u][f]=S[s>>24&255]^E[s>>16&255]^k[s>>8&255]^A[255&s];},x.prototype.encrypt=function(e){if(16!=e.length)throw new Error("invalid plaintext size (must be 16 bytes)");for(var t=this._Ke.length-1,r=[0,0,0,0],n=P(e),i=0;i<4;i++)n[i]^=this._Ke[0][i];for(var s=1;s<t;s++){for(i=0;i<4;i++)r[i]=p[n[i]>>24&255]^m[n[(i+1)%4]>>16&255]^y[n[(i+2)%4]>>8&255]^g[255&n[(i+3)%4]]^this._Ke[s][i];n=r.slice();}var a,l=o(16);for(i=0;i<4;i++)a=this._Ke[t][i],l[4*i]=255&(d[n[i]>>24&255]^a>>24),l[4*i+1]=255&(d[n[(i+1)%4]>>16&255]^a>>16),l[4*i+2]=255&(d[n[(i+2)%4]>>8&255]^a>>8),l[4*i+3]=255&(d[255&n[(i+3)%4]]^a);return l},x.prototype.decrypt=function(e){if(16!=e.length)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var t=this._Kd.length-1,r=[0,0,0,0],n=P(e),i=0;i<4;i++)n[i]^=this._Kd[0][i];for(var s=1;s<t;s++){for(i=0;i<4;i++)r[i]=v[n[i]>>24&255]^b[n[(i+3)%4]>>16&255]^w[n[(i+2)%4]>>8&255]^_[255&n[(i+1)%4]]^this._Kd[s][i];n=r.slice();}var a,l=o(16);for(i=0;i<4;i++)a=this._Kd[t][i],l[4*i]=255&(f[n[i]>>24&255]^a>>24),l[4*i+1]=255&(f[n[(i+3)%4]>>16&255]^a>>16),l[4*i+2]=255&(f[n[(i+2)%4]>>8&255]^a>>8),l[4*i+3]=255&(f[255&n[(i+1)%4]]^a);return l};var C=function(e){if(!(this instanceof C))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new x(e);};C.prototype.encrypt=function(e){if((e=i(e)).length%16!=0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var t=o(e.length),r=o(16),n=0;n<e.length;n+=16)s(e,r,0,n,n+16),s(r=this._aes.encrypt(r),t,n);return t},C.prototype.decrypt=function(e){if((e=i(e)).length%16!=0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var t=o(e.length),r=o(16),n=0;n<e.length;n+=16)s(e,r,0,n,n+16),s(r=this._aes.decrypt(r),t,n);return t};var T=function(e,t){if(!(this instanceof T))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",t){if(16!=t.length)throw new Error("invalid initialation vector size (must be 16 bytes)")}else t=o(16);this._lastCipherblock=i(t,!0),this._aes=new x(e);};T.prototype.encrypt=function(e){if((e=i(e)).length%16!=0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var t=o(e.length),r=o(16),n=0;n<e.length;n+=16){s(e,r,0,n,n+16);for(var a=0;a<16;a++)r[a]^=this._lastCipherblock[a];this._lastCipherblock=this._aes.encrypt(r),s(this._lastCipherblock,t,n);}return t},T.prototype.decrypt=function(e){if((e=i(e)).length%16!=0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var t=o(e.length),r=o(16),n=0;n<e.length;n+=16){s(e,r,0,n,n+16),r=this._aes.decrypt(r);for(var a=0;a<16;a++)t[n+a]=r[a]^this._lastCipherblock[a];s(e,this._lastCipherblock,0,n,n+16);}return t};var N=function(e,t,r){if(!(this instanceof N))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",t){if(16!=t.length)throw new Error("invalid initialation vector size (must be 16 size)")}else t=o(16);r||(r=1),this.segmentSize=r,this._shiftRegister=i(t,!0),this._aes=new x(e);};N.prototype.encrypt=function(e){if(e.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var t,r=i(e,!0),n=0;n<r.length;n+=this.segmentSize){t=this._aes.encrypt(this._shiftRegister);for(var o=0;o<this.segmentSize;o++)r[n+o]^=t[o];s(this._shiftRegister,this._shiftRegister,0,this.segmentSize),s(r,this._shiftRegister,16-this.segmentSize,n,n+this.segmentSize);}return r},N.prototype.decrypt=function(e){if(e.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var t,r=i(e,!0),n=0;n<r.length;n+=this.segmentSize){t=this._aes.encrypt(this._shiftRegister);for(var o=0;o<this.segmentSize;o++)r[n+o]^=t[o];s(this._shiftRegister,this._shiftRegister,0,this.segmentSize),s(e,this._shiftRegister,16-this.segmentSize,n,n+this.segmentSize);}return r};var R=function(e,t){if(!(this instanceof R))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",t){if(16!=t.length)throw new Error("invalid initialation vector size (must be 16 bytes)")}else t=o(16);this._lastPrecipher=i(t,!0),this._lastPrecipherIndex=16,this._aes=new x(e);};R.prototype.encrypt=function(e){for(var t=i(e,!0),r=0;r<t.length;r++)16===this._lastPrecipherIndex&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),t[r]^=this._lastPrecipher[this._lastPrecipherIndex++];return t},R.prototype.decrypt=R.prototype.encrypt;var B=function(e){if(!(this instanceof B))throw Error("Counter must be instanitated with `new`");0===e||e||(e=1),"number"==typeof e?(this._counter=o(16),this.setValue(e)):this.setBytes(e);};B.prototype.setValue=function(e){if("number"!=typeof e||parseInt(e)!=e)throw new Error("invalid counter value (must be an integer)");for(var t=15;t>=0;--t)this._counter[t]=e%256,e>>=8;},B.prototype.setBytes=function(e){if(16!=(e=i(e,!0)).length)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=e;},B.prototype.increment=function(){for(var e=15;e>=0;e--){if(255!==this._counter[e]){this._counter[e]++;break}this._counter[e]=0;}};var I=function(e,t){if(!(this instanceof I))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",t instanceof B||(t=new B(t)),this._counter=t,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new x(e);};I.prototype.encrypt=function(e){for(var t=i(e,!0),r=0;r<t.length;r++)16===this._remainingCounterIndex&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),t[r]^=this._remainingCounter[this._remainingCounterIndex++];return t},I.prototype.decrypt=I.prototype.encrypt;var O={AES:x,Counter:B,ModeOfOperation:{ecb:C,cbc:T,cfb:N,ofb:R,ctr:I},utils:{hex:u,utf8:l},padding:{pkcs7:{pad:function(e){var t=16-(e=i(e,!0)).length%16,r=o(e.length+t);s(e,r);for(var n=e.length;n<r.length;n++)r[n]=t;return r},strip:function(e){if((e=i(e,!0)).length<16)throw new Error("PKCS#7 invalid length");var t=e[e.length-1];if(t>16)throw new Error("PKCS#7 padding byte out of range");for(var r=e.length-t,n=0;n<t;n++)if(e[r+n]!==t)throw new Error("PKCS#7 invalid padding byte");var a=o(r);return s(e,a,0,0,r),a}}},_arrayTest:{coerceArray:i,createArray:o,copyArray:s}};e.exports=O;}();},5078:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var n=r(4778),i=r(2403),o=function(){function e(e){this._semaphore=new i.default(1,e);}return e.prototype.acquire=function(){return n.__awaiter(this,void 0,void 0,(function(){return n.__generator(this,(function(e){switch(e.label){case 0:return [4,this._semaphore.acquire()];case 1:return [2,e.sent()[1]]}}))}))},e.prototype.runExclusive=function(e){return this._semaphore.runExclusive((function(){return e()}))},e.prototype.isLocked=function(){return this._semaphore.isLocked()},e.prototype.waitForUnlock=function(){return this._semaphore.waitForUnlock()},e.prototype.release=function(){this._semaphore.isLocked()&&this._semaphore.release();},e.prototype.cancel=function(){return this._semaphore.cancel()},e}();t.default=o;},2403:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var n=r(4778),i=r(1764),o=function(){function e(e,t){void 0===t&&(t=i.E_CANCELED),this._value=e,this._cancelError=t,this._weightedQueues=[],this._weightedWaiters=[];}return e.prototype.acquire=function(e){var t=this;if(void 0===e&&(e=1),e<=0)throw new Error("invalid weight ".concat(e,": must be positive"));return new Promise((function(r,n){t._weightedQueues[e-1]||(t._weightedQueues[e-1]=[]),t._weightedQueues[e-1].push({resolve:r,reject:n}),t._dispatch();}))},e.prototype.runExclusive=function(e,t){return void 0===t&&(t=1),n.__awaiter(this,void 0,void 0,(function(){var r,i,o;return n.__generator(this,(function(n){switch(n.label){case 0:return [4,this.acquire(t)];case 1:r=n.sent(),i=r[0],o=r[1],n.label=2;case 2:return n.trys.push([2,,4,5]),[4,e(i)];case 3:return [2,n.sent()];case 4:return o(),[7];case 5:return [2]}}))}))},e.prototype.waitForUnlock=function(e){var t=this;if(void 0===e&&(e=1),e<=0)throw new Error("invalid weight ".concat(e,": must be positive"));return new Promise((function(r){t._weightedWaiters[e-1]||(t._weightedWaiters[e-1]=[]),t._weightedWaiters[e-1].push(r),t._dispatch();}))},e.prototype.isLocked=function(){return this._value<=0},e.prototype.getValue=function(){return this._value},e.prototype.setValue=function(e){this._value=e,this._dispatch();},e.prototype.release=function(e){if(void 0===e&&(e=1),e<=0)throw new Error("invalid weight ".concat(e,": must be positive"));this._value+=e,this._dispatch();},e.prototype.cancel=function(){var e=this;this._weightedQueues.forEach((function(t){return t.forEach((function(t){return t.reject(e._cancelError)}))})),this._weightedQueues=[];},e.prototype._dispatch=function(){for(var e,t=this._value;t>0;t--){var r=null===(e=this._weightedQueues[t-1])||void 0===e?void 0:e.shift();if(r){var n=this._value,i=t;this._value-=t,t=this._value+1,r.resolve([n,this._newReleaser(i)]);}}this._drainUnlockWaiters();},e.prototype._newReleaser=function(e){var t=this,r=!1;return function(){r||(r=!0,t.release(e));}},e.prototype._drainUnlockWaiters=function(){for(var e=this._value;e>0;e--)this._weightedWaiters[e-1]&&(this._weightedWaiters[e-1].forEach((function(e){return e()})),this._weightedWaiters[e-1]=[]);},e}();t.default=o;},1764:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.E_CANCELED=t.E_ALREADY_LOCKED=t.E_TIMEOUT=void 0,t.E_TIMEOUT=new Error("timeout while waiting for mutex to become available"),t.E_ALREADY_LOCKED=new Error("mutex already locked"),t.E_CANCELED=new Error("request for lock canceled");},8125:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tryAcquire=t.withTimeout=t.Semaphore=t.Mutex=void 0;var n=r(4778),i=r(5078);Object.defineProperty(t,"Mutex",{enumerable:!0,get:function(){return i.default}});var o=r(2403);Object.defineProperty(t,"Semaphore",{enumerable:!0,get:function(){return o.default}});var s=r(1960);Object.defineProperty(t,"withTimeout",{enumerable:!0,get:function(){return s.withTimeout}});var a=r(3143);Object.defineProperty(t,"tryAcquire",{enumerable:!0,get:function(){return a.tryAcquire}}),n.__exportStar(r(1764),t);},3143:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tryAcquire=void 0;var n=r(1764),i=r(1960);t.tryAcquire=function(e,t){return void 0===t&&(t=n.E_ALREADY_LOCKED),(0, i.withTimeout)(e,0,t)};},1960:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.withTimeout=void 0;var n=r(4778),i=r(1764);t.withTimeout=function(e,t,r){var o=this;return void 0===r&&(r=i.E_TIMEOUT),{acquire:function(i){if(void 0!==i&&i<=0)throw new Error("invalid weight ".concat(i,": must be positive"));return new Promise((function(s,a){return n.__awaiter(o,void 0,void 0,(function(){var o,l,u,c;return n.__generator(this,(function(n){switch(n.label){case 0:o=!1,l=setTimeout((function(){o=!0,a(r);}),t),n.label=1;case 1:return n.trys.push([1,3,,4]),[4,e.acquire(i)];case 2:return u=n.sent(),o?(Array.isArray(u)?u[1]:u)():(clearTimeout(l),s(u)),[3,4];case 3:return c=n.sent(),o||(clearTimeout(l),a(c)),[3,4];case 4:return [2]}}))}))}))},runExclusive:function(e,t){return n.__awaiter(this,void 0,void 0,(function(){var r,i;return n.__generator(this,(function(n){switch(n.label){case 0:r=function(){},n.label=1;case 1:return n.trys.push([1,,7,8]),[4,this.acquire(t)];case 2:return i=n.sent(),Array.isArray(i)?(r=i[1],[4,e(i[0])]):[3,4];case 3:return [2,n.sent()];case 4:return r=i,[4,e()];case 5:return [2,n.sent()];case 6:return [3,8];case 7:return r(),[7];case 8:return [2]}}))}))},release:function(t){e.release(t);},cancel:function(){return e.cancel()},waitForUnlock:function(n){if(void 0!==n&&n<=0)throw new Error("invalid weight ".concat(n,": must be positive"));return new Promise((function(i,o){e.waitForUnlock(n).then(i),setTimeout((function(){return o(r)}),t);}))},isLocked:function(){return e.isLocked()},getValue:function(){return e.getValue()},setValue:function(t){return e.setValue(t)}}};},4778:(e,t,r)=>{r.r(t),r.d(t,{__extends:()=>i,__assign:()=>o,__rest:()=>s,__decorate:()=>a,__param:()=>l,__metadata:()=>u,__awaiter:()=>c,__generator:()=>h,__createBinding:()=>d,__exportStar:()=>f,__values:()=>p,__read:()=>m,__spread:()=>y,__spreadArrays:()=>g,__spreadArray:()=>v,__await:()=>b,__asyncGenerator:()=>w,__asyncDelegator:()=>_,__asyncValues:()=>S,__makeTemplateObject:()=>E,__importStar:()=>A,__importDefault:()=>P,__classPrivateFieldGet:()=>x,__classPrivateFieldSet:()=>C,__classPrivateFieldIn:()=>T});var n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t;}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);},n(e,t)};function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e;}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r);}var o=function(){return o=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},o.apply(this,arguments)};function s(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(n=Object.getOwnPropertySymbols(e);i<n.length;i++)t.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(e,n[i])&&(r[n[i]]=e[n[i]]);}return r}function a(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s}function l(e,t){return function(r,n){t(r,n,e);}}function u(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function c(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))}function h(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(l){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s);}catch(e){a=[6,e],n=0;}finally{r=i=0;}if(5&a[0])throw a[1];return {value:a[0]?a[1]:void 0,done:!0}}([a,l])}}}var d=Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i);}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r];};function f(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||d(t,e,r);}function p(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return {next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function m(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)s.push(n.value);}catch(e){i={error:e};}finally{try{n&&!n.done&&(r=o.return)&&r.call(o);}finally{if(i)throw i.error}}return s}function y(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(m(arguments[t]));return e}function g(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],s=0,a=o.length;s<a;s++,i++)n[i]=o[s];return n}function v(e,t,r){if(r||2===arguments.length)for(var n,i=0,o=t.length;i<o;i++)!n&&i in t||(n||(n=Array.prototype.slice.call(t,0,i)),n[i]=t[i]);return e.concat(n||Array.prototype.slice.call(t))}function b(e){return this instanceof b?(this.v=e,this):new b(e)}function w(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(e,t||[]),o=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){i[e]&&(n[e]=function(t){return new Promise((function(r,n){o.push([e,t,r,n])>1||a(e,t);}))});}function a(e,t){try{(r=i[e](t)).value instanceof b?Promise.resolve(r.value.v).then(l,u):c(o[0][2],r);}catch(e){c(o[0][3],e);}var r;}function l(e){a("next",e);}function u(e){a("throw",e);}function c(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1]);}}function _(e){var t,r;return t={},n("next"),n("throw",(function(e){throw e})),n("return"),t[Symbol.iterator]=function(){return this},t;function n(n,i){t[n]=e[n]?function(t){return (r=!r)?{value:b(e[n](t)),done:"return"===n}:i?i(t):t}:i;}}function S(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e=p(e),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,i){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r});}),t);}(n,i,(t=e[r](t)).done,t.value);}))};}}function E(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}var k=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t});}:function(e,t){e.default=t;};function A(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&d(t,e,r);return k(t,e),t}function P(e){return e&&e.__esModule?e:{default:e}}function x(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return "m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)}function C(e,t,r,n,i){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!i)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return "a"===n?i.call(e,r):i?i.value=r:t.set(e,r),r}function T(e,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return "function"==typeof e?t===e:e.has(t)}},9742:(e,t)=>{t.byteLength=function(e){var t=l(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,o=l(e),s=o[0],a=o[1],u=new i(function(e,t,r){return 3*(t+r)/4-r}(0,s,a)),c=0,h=a>0?s-4:s;for(r=0;r<h;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],u[c++]=t>>16&255,u[c++]=t>>8&255,u[c++]=255&t;return 2===a&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,u[c++]=255&t),1===a&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,u[c++]=t>>8&255,u[c++]=255&t),u},t.fromByteArray=function(e){for(var t,n=e.length,i=n%3,o=[],s=16383,a=0,l=n-i;a<l;a+=s)o.push(u(e,a,a+s>l?l:a+s));return 1===i?(t=e[n-1],o.push(r[t>>2]+r[t<<4&63]+"==")):2===i&&(t=(e[n-2]<<8)+e[n-1],o.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),o.join("")};for(var r=[],n=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,a=o.length;s<a;++s)r[s]=o[s],n[o.charCodeAt(s)]=s;function l(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return -1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,n){for(var i,o,s=[],a=t;a<n;a+=3)i=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),s.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63;},2882:e=>{for(var t="qpzry9x8gf2tvdw0s3jn54khce6mua7l",r={},n=0;n<t.length;n++){var i=t.charAt(n);if(void 0!==r[i])throw new TypeError(i+" is ambiguous");r[i]=n;}function o(e){var t=e>>25;return (33554431&e)<<5^996825010&-(t>>0&1)^642813549&-(t>>1&1)^513874426&-(t>>2&1)^1027748829&-(t>>3&1)^705979059&-(t>>4&1)}function s(e){for(var t=1,r=0;r<e.length;++r){var n=e.charCodeAt(r);if(n<33||n>126)return "Invalid prefix ("+e+")";t=o(t)^n>>5;}for(t=o(t),r=0;r<e.length;++r){var i=e.charCodeAt(r);t=o(t)^31&i;}return t}function a(e,t){if(t=t||90,e.length<8)return e+" too short";if(e.length>t)return "Exceeds length limit";var n=e.toLowerCase(),i=e.toUpperCase();if(e!==n&&e!==i)return "Mixed-case string "+e;var a=(e=n).lastIndexOf("1");if(-1===a)return "No separator character for "+e;if(0===a)return "Missing prefix for "+e;var l=e.slice(0,a),u=e.slice(a+1);if(u.length<6)return "Data too short";var c=s(l);if("string"==typeof c)return c;for(var h=[],d=0;d<u.length;++d){var f=u.charAt(d),p=r[f];if(void 0===p)return "Unknown character "+f;c=o(c)^p,d+6>=u.length||h.push(p);}return 1!==c?"Invalid checksum for "+e:{prefix:l,words:h}}function l(e,t,r,n){for(var i=0,o=0,s=(1<<r)-1,a=[],l=0;l<e.length;++l)for(i=i<<t|e[l],o+=t;o>=r;)o-=r,a.push(i>>o&s);if(n)o>0&&a.push(i<<r-o&s);else {if(o>=t)return "Excess padding";if(i<<r-o&s)return "Non-zero padding"}return a}e.exports={decodeUnsafe:function(){var e=a.apply(null,arguments);if("object"==typeof e)return e},decode:function(e){var t=a.apply(null,arguments);if("object"==typeof t)return t;throw new Error(t)},encode:function(e,r,n){if(n=n||90,e.length+7+r.length>n)throw new TypeError("Exceeds length limit");var i=s(e=e.toLowerCase());if("string"==typeof i)throw new Error(i);for(var a=e+"1",l=0;l<r.length;++l){var u=r[l];if(u>>5!=0)throw new Error("Non 5-bit word");i=o(i)^u,a+=t.charAt(u);}for(l=0;l<6;++l)i=o(i);for(i^=1,l=0;l<6;++l)a+=t.charAt(i>>5*(5-l)&31);return a},toWordsUnsafe:function(e){var t=l(e,8,5,!0);if(Array.isArray(t))return t},toWords:function(e){var t=l(e,8,5,!0);if(Array.isArray(t))return t;throw new Error(t)},fromWordsUnsafe:function(e){var t=l(e,5,8,!1);if(Array.isArray(t))return t},fromWords:function(e){var t=l(e,5,8,!1);if(Array.isArray(t))return t;throw new Error(t)}};},3550:function(e,t,r){!function(e,t){function n(e,t){if(!e)throw new Error(t||"Assertion failed")}function i(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e;}function o(e,t,r){if(o.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(r=t,t=10),this._init(e||0,t||10,r||"be"));}var s;"object"==typeof e?e.exports=o:t.BN=o,o.BN=o,o.wordSize=26;try{s="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(6601).Buffer;}catch(e){}function a(e,t){var r=e.charCodeAt(t);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function l(e,t,r){var n=a(e,r);return r-1>=t&&(n|=a(e,r-1)<<4),n}function u(e,t,r,n){for(var i=0,o=Math.min(e.length,r),s=t;s<o;s++){var a=e.charCodeAt(s)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a;}return i}o.isBN=function(e){return e instanceof o||null!==e&&"object"==typeof e&&e.constructor.wordSize===o.wordSize&&Array.isArray(e.words)},o.max=function(e,t){return e.cmp(t)>0?e:t},o.min=function(e,t){return e.cmp(t)<0?e:t},o.prototype._init=function(e,t,r){if("number"==typeof e)return this._initNumber(e,t,r);if("object"==typeof e)return this._initArray(e,t,r);"hex"===t&&(t=16),n(t===(0|t)&&t>=2&&t<=36);var i=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<e.length&&(16===t?this._parseHex(e,i,r):(this._parseBase(e,t,i),"le"===r&&this._initArray(this.toArray(),t,r)));},o.prototype._initNumber=function(e,t,r){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(n(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),t,r);},o.prototype._initArray=function(e,t,r){if(n("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,s,a=0;if("be"===r)for(i=e.length-1,o=0;i>=0;i-=3)s=e[i]|e[i-1]<<8|e[i-2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);else if("le"===r)for(i=0,o=0;i<e.length;i+=3)s=e[i]|e[i+1]<<8|e[i+2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);return this.strip()},o.prototype._parseHex=function(e,t,r){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,o=0,s=0;if("be"===r)for(n=e.length-1;n>=t;n-=2)i=l(e,t,n)<<o,this.words[s]|=67108863&i,o>=18?(o-=18,s+=1,this.words[s]|=i>>>26):o+=8;else for(n=(e.length-t)%2==0?t+1:t;n<e.length;n+=2)i=l(e,t,n)<<o,this.words[s]|=67108863&i,o>=18?(o-=18,s+=1,this.words[s]|=i>>>26):o+=8;this.strip();},o.prototype._parseBase=function(e,t,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=t)n++;n--,i=i/t|0;for(var o=e.length-r,s=o%n,a=Math.min(o,o-s)+r,l=0,c=r;c<a;c+=n)l=u(e,c,c+n,t),this.imuln(i),this.words[0]+l<67108864?this.words[0]+=l:this._iaddn(l);if(0!==s){var h=1;for(l=u(e,c,e.length,t),c=0;c<s;c++)h*=t;this.imuln(h),this.words[0]+l<67108864?this.words[0]+=l:this._iaddn(l);}this.strip();},o.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red;},o.prototype.clone=function(){var e=new o(null);return this.copy(e),e},o.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},o.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},o.prototype.inspect=function(){return (this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],h=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(e,t,r){r.negative=t.negative^e.negative;var n=e.length+t.length|0;r.length=n,n=n-1|0;var i=0|e.words[0],o=0|t.words[0],s=i*o,a=67108863&s,l=s/67108864|0;r.words[0]=a;for(var u=1;u<n;u++){for(var c=l>>>26,h=67108863&l,d=Math.min(u,t.length-1),f=Math.max(0,u-e.length+1);f<=d;f++){var p=u-f|0;c+=(s=(i=0|e.words[p])*(o=0|t.words[f])+h)/67108864|0,h=67108863&s;}r.words[u]=0|h,l=0|c;}return 0!==l?r.words[u]=0|l:r.length--,r.strip()}o.prototype.toString=function(e,t){var r;if(t=0|t||1,16===(e=e||10)||"hex"===e){r="";for(var i=0,o=0,s=0;s<this.length;s++){var a=this.words[s],l=(16777215&(a<<i|o)).toString(16);r=0!=(o=a>>>24-i&16777215)||s!==this.length-1?c[6-l.length]+l+r:l+r,(i+=2)>=26&&(i-=26,s--);}for(0!==o&&(r=o.toString(16)+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(e===(0|e)&&e>=2&&e<=36){var u=h[e],f=d[e];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(e);r=(p=p.idivn(f)).isZero()?m+r:c[u-m.length]+m+r;}for(this.isZero()&&(r="0"+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36");},o.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},o.prototype.toJSON=function(){return this.toString(16)},o.prototype.toBuffer=function(e,t){return n(void 0!==s),this.toArrayLike(s,e,t)},o.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},o.prototype.toArrayLike=function(e,t,r){var i=this.byteLength(),o=r||Math.max(1,i);n(i<=o,"byte array longer than desired length"),n(o>0,"Requested array length <= 0"),this.strip();var s,a,l="le"===t,u=new e(o),c=this.clone();if(l){for(a=0;!c.isZero();a++)s=c.andln(255),c.iushrn(8),u[a]=s;for(;a<o;a++)u[a]=0;}else {for(a=0;a<o-i;a++)u[a]=0;for(a=0;!c.isZero();a++)s=c.andln(255),c.iushrn(8),u[o-a-1]=s;}return u},Math.clz32?o.prototype._countBits=function(e){return 32-Math.clz32(e)}:o.prototype._countBits=function(e){var t=e,r=0;return t>=4096&&(r+=13,t>>>=13),t>=64&&(r+=7,t>>>=7),t>=8&&(r+=4,t>>>=4),t>=2&&(r+=2,t>>>=2),r+t},o.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,r=0;return 0==(8191&t)&&(r+=13,t>>>=13),0==(127&t)&&(r+=7,t>>>=7),0==(15&t)&&(r+=4,t>>>=4),0==(3&t)&&(r+=2,t>>>=2),0==(1&t)&&r++,r},o.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);if(e+=r,26!==r)break}return e},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},o.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this.strip()},o.prototype.ior=function(e){return n(0==(this.negative|e.negative)),this.iuor(e)},o.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},o.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},o.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var r=0;r<t.length;r++)this.words[r]=this.words[r]&e.words[r];return this.length=t.length,this.strip()},o.prototype.iand=function(e){return n(0==(this.negative|e.negative)),this.iuand(e)},o.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},o.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},o.prototype.iuxor=function(e){var t,r;this.length>e.length?(t=this,r=e):(t=e,r=this);for(var n=0;n<r.length;n++)this.words[n]=t.words[n]^r.words[n];if(this!==t)for(;n<t.length;n++)this.words[n]=t.words[n];return this.length=t.length,this.strip()},o.prototype.ixor=function(e){return n(0==(this.negative|e.negative)),this.iuxor(e)},o.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},o.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},o.prototype.inotn=function(e){n("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),r=e%26;this._expand(t),r>0&&t--;for(var i=0;i<t;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},o.prototype.notn=function(e){return this.clone().inotn(e)},o.prototype.setn=function(e,t){n("number"==typeof e&&e>=0);var r=e/26|0,i=e%26;return this._expand(r+1),this.words[r]=t?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},o.prototype.iadd=function(e){var t,r,n;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(r=this,n=e):(r=e,n=this);for(var i=0,o=0;o<n.length;o++)t=(0|r.words[o])+(0|n.words[o])+i,this.words[o]=67108863&t,i=t>>>26;for(;0!==i&&o<r.length;o++)t=(0|r.words[o])+i,this.words[o]=67108863&t,i=t>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this},o.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},o.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var r,n,i=this.cmp(e);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=e):(r=e,n=this);for(var o=0,s=0;s<n.length;s++)o=(t=(0|r.words[s])-(0|n.words[s])+o)>>26,this.words[s]=67108863&t;for(;0!==o&&s<r.length;s++)o=(t=(0|r.words[s])+o)>>26,this.words[s]=67108863&t;if(0===o&&s<r.length&&r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this.length=Math.max(this.length,s),r!==this&&(this.negative=1),this.strip()},o.prototype.sub=function(e){return this.clone().isub(e)};var p=function(e,t,r){var n,i,o,s=e.words,a=t.words,l=r.words,u=0,c=0|s[0],h=8191&c,d=c>>>13,f=0|s[1],p=8191&f,m=f>>>13,y=0|s[2],g=8191&y,v=y>>>13,b=0|s[3],w=8191&b,_=b>>>13,S=0|s[4],E=8191&S,k=S>>>13,A=0|s[5],P=8191&A,x=A>>>13,C=0|s[6],T=8191&C,N=C>>>13,R=0|s[7],B=8191&R,I=R>>>13,O=0|s[8],M=8191&O,D=O>>>13,U=0|s[9],K=8191&U,F=U>>>13,L=0|a[0],j=8191&L,q=L>>>13,z=0|a[1],W=8191&z,G=z>>>13,V=0|a[2],H=8191&V,J=V>>>13,$=0|a[3],Z=8191&$,X=$>>>13,Q=0|a[4],Y=8191&Q,ee=Q>>>13,te=0|a[5],re=8191&te,ne=te>>>13,ie=0|a[6],oe=8191&ie,se=ie>>>13,ae=0|a[7],le=8191&ae,ue=ae>>>13,ce=0|a[8],he=8191&ce,de=ce>>>13,fe=0|a[9],pe=8191&fe,me=fe>>>13;r.negative=e.negative^t.negative,r.length=19;var ye=(u+(n=Math.imul(h,j))|0)+((8191&(i=(i=Math.imul(h,q))+Math.imul(d,j)|0))<<13)|0;u=((o=Math.imul(d,q))+(i>>>13)|0)+(ye>>>26)|0,ye&=67108863,n=Math.imul(p,j),i=(i=Math.imul(p,q))+Math.imul(m,j)|0,o=Math.imul(m,q);var ge=(u+(n=n+Math.imul(h,W)|0)|0)+((8191&(i=(i=i+Math.imul(h,G)|0)+Math.imul(d,W)|0))<<13)|0;u=((o=o+Math.imul(d,G)|0)+(i>>>13)|0)+(ge>>>26)|0,ge&=67108863,n=Math.imul(g,j),i=(i=Math.imul(g,q))+Math.imul(v,j)|0,o=Math.imul(v,q),n=n+Math.imul(p,W)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,W)|0,o=o+Math.imul(m,G)|0;var ve=(u+(n=n+Math.imul(h,H)|0)|0)+((8191&(i=(i=i+Math.imul(h,J)|0)+Math.imul(d,H)|0))<<13)|0;u=((o=o+Math.imul(d,J)|0)+(i>>>13)|0)+(ve>>>26)|0,ve&=67108863,n=Math.imul(w,j),i=(i=Math.imul(w,q))+Math.imul(_,j)|0,o=Math.imul(_,q),n=n+Math.imul(g,W)|0,i=(i=i+Math.imul(g,G)|0)+Math.imul(v,W)|0,o=o+Math.imul(v,G)|0,n=n+Math.imul(p,H)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,H)|0,o=o+Math.imul(m,J)|0;var be=(u+(n=n+Math.imul(h,Z)|0)|0)+((8191&(i=(i=i+Math.imul(h,X)|0)+Math.imul(d,Z)|0))<<13)|0;u=((o=o+Math.imul(d,X)|0)+(i>>>13)|0)+(be>>>26)|0,be&=67108863,n=Math.imul(E,j),i=(i=Math.imul(E,q))+Math.imul(k,j)|0,o=Math.imul(k,q),n=n+Math.imul(w,W)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(_,W)|0,o=o+Math.imul(_,G)|0,n=n+Math.imul(g,H)|0,i=(i=i+Math.imul(g,J)|0)+Math.imul(v,H)|0,o=o+Math.imul(v,J)|0,n=n+Math.imul(p,Z)|0,i=(i=i+Math.imul(p,X)|0)+Math.imul(m,Z)|0,o=o+Math.imul(m,X)|0;var we=(u+(n=n+Math.imul(h,Y)|0)|0)+((8191&(i=(i=i+Math.imul(h,ee)|0)+Math.imul(d,Y)|0))<<13)|0;u=((o=o+Math.imul(d,ee)|0)+(i>>>13)|0)+(we>>>26)|0,we&=67108863,n=Math.imul(P,j),i=(i=Math.imul(P,q))+Math.imul(x,j)|0,o=Math.imul(x,q),n=n+Math.imul(E,W)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(k,W)|0,o=o+Math.imul(k,G)|0,n=n+Math.imul(w,H)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(_,H)|0,o=o+Math.imul(_,J)|0,n=n+Math.imul(g,Z)|0,i=(i=i+Math.imul(g,X)|0)+Math.imul(v,Z)|0,o=o+Math.imul(v,X)|0,n=n+Math.imul(p,Y)|0,i=(i=i+Math.imul(p,ee)|0)+Math.imul(m,Y)|0,o=o+Math.imul(m,ee)|0;var _e=(u+(n=n+Math.imul(h,re)|0)|0)+((8191&(i=(i=i+Math.imul(h,ne)|0)+Math.imul(d,re)|0))<<13)|0;u=((o=o+Math.imul(d,ne)|0)+(i>>>13)|0)+(_e>>>26)|0,_e&=67108863,n=Math.imul(T,j),i=(i=Math.imul(T,q))+Math.imul(N,j)|0,o=Math.imul(N,q),n=n+Math.imul(P,W)|0,i=(i=i+Math.imul(P,G)|0)+Math.imul(x,W)|0,o=o+Math.imul(x,G)|0,n=n+Math.imul(E,H)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(k,H)|0,o=o+Math.imul(k,J)|0,n=n+Math.imul(w,Z)|0,i=(i=i+Math.imul(w,X)|0)+Math.imul(_,Z)|0,o=o+Math.imul(_,X)|0,n=n+Math.imul(g,Y)|0,i=(i=i+Math.imul(g,ee)|0)+Math.imul(v,Y)|0,o=o+Math.imul(v,ee)|0,n=n+Math.imul(p,re)|0,i=(i=i+Math.imul(p,ne)|0)+Math.imul(m,re)|0,o=o+Math.imul(m,ne)|0;var Se=(u+(n=n+Math.imul(h,oe)|0)|0)+((8191&(i=(i=i+Math.imul(h,se)|0)+Math.imul(d,oe)|0))<<13)|0;u=((o=o+Math.imul(d,se)|0)+(i>>>13)|0)+(Se>>>26)|0,Se&=67108863,n=Math.imul(B,j),i=(i=Math.imul(B,q))+Math.imul(I,j)|0,o=Math.imul(I,q),n=n+Math.imul(T,W)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(N,W)|0,o=o+Math.imul(N,G)|0,n=n+Math.imul(P,H)|0,i=(i=i+Math.imul(P,J)|0)+Math.imul(x,H)|0,o=o+Math.imul(x,J)|0,n=n+Math.imul(E,Z)|0,i=(i=i+Math.imul(E,X)|0)+Math.imul(k,Z)|0,o=o+Math.imul(k,X)|0,n=n+Math.imul(w,Y)|0,i=(i=i+Math.imul(w,ee)|0)+Math.imul(_,Y)|0,o=o+Math.imul(_,ee)|0,n=n+Math.imul(g,re)|0,i=(i=i+Math.imul(g,ne)|0)+Math.imul(v,re)|0,o=o+Math.imul(v,ne)|0,n=n+Math.imul(p,oe)|0,i=(i=i+Math.imul(p,se)|0)+Math.imul(m,oe)|0,o=o+Math.imul(m,se)|0;var Ee=(u+(n=n+Math.imul(h,le)|0)|0)+((8191&(i=(i=i+Math.imul(h,ue)|0)+Math.imul(d,le)|0))<<13)|0;u=((o=o+Math.imul(d,ue)|0)+(i>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,n=Math.imul(M,j),i=(i=Math.imul(M,q))+Math.imul(D,j)|0,o=Math.imul(D,q),n=n+Math.imul(B,W)|0,i=(i=i+Math.imul(B,G)|0)+Math.imul(I,W)|0,o=o+Math.imul(I,G)|0,n=n+Math.imul(T,H)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(N,H)|0,o=o+Math.imul(N,J)|0,n=n+Math.imul(P,Z)|0,i=(i=i+Math.imul(P,X)|0)+Math.imul(x,Z)|0,o=o+Math.imul(x,X)|0,n=n+Math.imul(E,Y)|0,i=(i=i+Math.imul(E,ee)|0)+Math.imul(k,Y)|0,o=o+Math.imul(k,ee)|0,n=n+Math.imul(w,re)|0,i=(i=i+Math.imul(w,ne)|0)+Math.imul(_,re)|0,o=o+Math.imul(_,ne)|0,n=n+Math.imul(g,oe)|0,i=(i=i+Math.imul(g,se)|0)+Math.imul(v,oe)|0,o=o+Math.imul(v,se)|0,n=n+Math.imul(p,le)|0,i=(i=i+Math.imul(p,ue)|0)+Math.imul(m,le)|0,o=o+Math.imul(m,ue)|0;var ke=(u+(n=n+Math.imul(h,he)|0)|0)+((8191&(i=(i=i+Math.imul(h,de)|0)+Math.imul(d,he)|0))<<13)|0;u=((o=o+Math.imul(d,de)|0)+(i>>>13)|0)+(ke>>>26)|0,ke&=67108863,n=Math.imul(K,j),i=(i=Math.imul(K,q))+Math.imul(F,j)|0,o=Math.imul(F,q),n=n+Math.imul(M,W)|0,i=(i=i+Math.imul(M,G)|0)+Math.imul(D,W)|0,o=o+Math.imul(D,G)|0,n=n+Math.imul(B,H)|0,i=(i=i+Math.imul(B,J)|0)+Math.imul(I,H)|0,o=o+Math.imul(I,J)|0,n=n+Math.imul(T,Z)|0,i=(i=i+Math.imul(T,X)|0)+Math.imul(N,Z)|0,o=o+Math.imul(N,X)|0,n=n+Math.imul(P,Y)|0,i=(i=i+Math.imul(P,ee)|0)+Math.imul(x,Y)|0,o=o+Math.imul(x,ee)|0,n=n+Math.imul(E,re)|0,i=(i=i+Math.imul(E,ne)|0)+Math.imul(k,re)|0,o=o+Math.imul(k,ne)|0,n=n+Math.imul(w,oe)|0,i=(i=i+Math.imul(w,se)|0)+Math.imul(_,oe)|0,o=o+Math.imul(_,se)|0,n=n+Math.imul(g,le)|0,i=(i=i+Math.imul(g,ue)|0)+Math.imul(v,le)|0,o=o+Math.imul(v,ue)|0,n=n+Math.imul(p,he)|0,i=(i=i+Math.imul(p,de)|0)+Math.imul(m,he)|0,o=o+Math.imul(m,de)|0;var Ae=(u+(n=n+Math.imul(h,pe)|0)|0)+((8191&(i=(i=i+Math.imul(h,me)|0)+Math.imul(d,pe)|0))<<13)|0;u=((o=o+Math.imul(d,me)|0)+(i>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,n=Math.imul(K,W),i=(i=Math.imul(K,G))+Math.imul(F,W)|0,o=Math.imul(F,G),n=n+Math.imul(M,H)|0,i=(i=i+Math.imul(M,J)|0)+Math.imul(D,H)|0,o=o+Math.imul(D,J)|0,n=n+Math.imul(B,Z)|0,i=(i=i+Math.imul(B,X)|0)+Math.imul(I,Z)|0,o=o+Math.imul(I,X)|0,n=n+Math.imul(T,Y)|0,i=(i=i+Math.imul(T,ee)|0)+Math.imul(N,Y)|0,o=o+Math.imul(N,ee)|0,n=n+Math.imul(P,re)|0,i=(i=i+Math.imul(P,ne)|0)+Math.imul(x,re)|0,o=o+Math.imul(x,ne)|0,n=n+Math.imul(E,oe)|0,i=(i=i+Math.imul(E,se)|0)+Math.imul(k,oe)|0,o=o+Math.imul(k,se)|0,n=n+Math.imul(w,le)|0,i=(i=i+Math.imul(w,ue)|0)+Math.imul(_,le)|0,o=o+Math.imul(_,ue)|0,n=n+Math.imul(g,he)|0,i=(i=i+Math.imul(g,de)|0)+Math.imul(v,he)|0,o=o+Math.imul(v,de)|0;var Pe=(u+(n=n+Math.imul(p,pe)|0)|0)+((8191&(i=(i=i+Math.imul(p,me)|0)+Math.imul(m,pe)|0))<<13)|0;u=((o=o+Math.imul(m,me)|0)+(i>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,n=Math.imul(K,H),i=(i=Math.imul(K,J))+Math.imul(F,H)|0,o=Math.imul(F,J),n=n+Math.imul(M,Z)|0,i=(i=i+Math.imul(M,X)|0)+Math.imul(D,Z)|0,o=o+Math.imul(D,X)|0,n=n+Math.imul(B,Y)|0,i=(i=i+Math.imul(B,ee)|0)+Math.imul(I,Y)|0,o=o+Math.imul(I,ee)|0,n=n+Math.imul(T,re)|0,i=(i=i+Math.imul(T,ne)|0)+Math.imul(N,re)|0,o=o+Math.imul(N,ne)|0,n=n+Math.imul(P,oe)|0,i=(i=i+Math.imul(P,se)|0)+Math.imul(x,oe)|0,o=o+Math.imul(x,se)|0,n=n+Math.imul(E,le)|0,i=(i=i+Math.imul(E,ue)|0)+Math.imul(k,le)|0,o=o+Math.imul(k,ue)|0,n=n+Math.imul(w,he)|0,i=(i=i+Math.imul(w,de)|0)+Math.imul(_,he)|0,o=o+Math.imul(_,de)|0;var xe=(u+(n=n+Math.imul(g,pe)|0)|0)+((8191&(i=(i=i+Math.imul(g,me)|0)+Math.imul(v,pe)|0))<<13)|0;u=((o=o+Math.imul(v,me)|0)+(i>>>13)|0)+(xe>>>26)|0,xe&=67108863,n=Math.imul(K,Z),i=(i=Math.imul(K,X))+Math.imul(F,Z)|0,o=Math.imul(F,X),n=n+Math.imul(M,Y)|0,i=(i=i+Math.imul(M,ee)|0)+Math.imul(D,Y)|0,o=o+Math.imul(D,ee)|0,n=n+Math.imul(B,re)|0,i=(i=i+Math.imul(B,ne)|0)+Math.imul(I,re)|0,o=o+Math.imul(I,ne)|0,n=n+Math.imul(T,oe)|0,i=(i=i+Math.imul(T,se)|0)+Math.imul(N,oe)|0,o=o+Math.imul(N,se)|0,n=n+Math.imul(P,le)|0,i=(i=i+Math.imul(P,ue)|0)+Math.imul(x,le)|0,o=o+Math.imul(x,ue)|0,n=n+Math.imul(E,he)|0,i=(i=i+Math.imul(E,de)|0)+Math.imul(k,he)|0,o=o+Math.imul(k,de)|0;var Ce=(u+(n=n+Math.imul(w,pe)|0)|0)+((8191&(i=(i=i+Math.imul(w,me)|0)+Math.imul(_,pe)|0))<<13)|0;u=((o=o+Math.imul(_,me)|0)+(i>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,n=Math.imul(K,Y),i=(i=Math.imul(K,ee))+Math.imul(F,Y)|0,o=Math.imul(F,ee),n=n+Math.imul(M,re)|0,i=(i=i+Math.imul(M,ne)|0)+Math.imul(D,re)|0,o=o+Math.imul(D,ne)|0,n=n+Math.imul(B,oe)|0,i=(i=i+Math.imul(B,se)|0)+Math.imul(I,oe)|0,o=o+Math.imul(I,se)|0,n=n+Math.imul(T,le)|0,i=(i=i+Math.imul(T,ue)|0)+Math.imul(N,le)|0,o=o+Math.imul(N,ue)|0,n=n+Math.imul(P,he)|0,i=(i=i+Math.imul(P,de)|0)+Math.imul(x,he)|0,o=o+Math.imul(x,de)|0;var Te=(u+(n=n+Math.imul(E,pe)|0)|0)+((8191&(i=(i=i+Math.imul(E,me)|0)+Math.imul(k,pe)|0))<<13)|0;u=((o=o+Math.imul(k,me)|0)+(i>>>13)|0)+(Te>>>26)|0,Te&=67108863,n=Math.imul(K,re),i=(i=Math.imul(K,ne))+Math.imul(F,re)|0,o=Math.imul(F,ne),n=n+Math.imul(M,oe)|0,i=(i=i+Math.imul(M,se)|0)+Math.imul(D,oe)|0,o=o+Math.imul(D,se)|0,n=n+Math.imul(B,le)|0,i=(i=i+Math.imul(B,ue)|0)+Math.imul(I,le)|0,o=o+Math.imul(I,ue)|0,n=n+Math.imul(T,he)|0,i=(i=i+Math.imul(T,de)|0)+Math.imul(N,he)|0,o=o+Math.imul(N,de)|0;var Ne=(u+(n=n+Math.imul(P,pe)|0)|0)+((8191&(i=(i=i+Math.imul(P,me)|0)+Math.imul(x,pe)|0))<<13)|0;u=((o=o+Math.imul(x,me)|0)+(i>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,n=Math.imul(K,oe),i=(i=Math.imul(K,se))+Math.imul(F,oe)|0,o=Math.imul(F,se),n=n+Math.imul(M,le)|0,i=(i=i+Math.imul(M,ue)|0)+Math.imul(D,le)|0,o=o+Math.imul(D,ue)|0,n=n+Math.imul(B,he)|0,i=(i=i+Math.imul(B,de)|0)+Math.imul(I,he)|0,o=o+Math.imul(I,de)|0;var Re=(u+(n=n+Math.imul(T,pe)|0)|0)+((8191&(i=(i=i+Math.imul(T,me)|0)+Math.imul(N,pe)|0))<<13)|0;u=((o=o+Math.imul(N,me)|0)+(i>>>13)|0)+(Re>>>26)|0,Re&=67108863,n=Math.imul(K,le),i=(i=Math.imul(K,ue))+Math.imul(F,le)|0,o=Math.imul(F,ue),n=n+Math.imul(M,he)|0,i=(i=i+Math.imul(M,de)|0)+Math.imul(D,he)|0,o=o+Math.imul(D,de)|0;var Be=(u+(n=n+Math.imul(B,pe)|0)|0)+((8191&(i=(i=i+Math.imul(B,me)|0)+Math.imul(I,pe)|0))<<13)|0;u=((o=o+Math.imul(I,me)|0)+(i>>>13)|0)+(Be>>>26)|0,Be&=67108863,n=Math.imul(K,he),i=(i=Math.imul(K,de))+Math.imul(F,he)|0,o=Math.imul(F,de);var Ie=(u+(n=n+Math.imul(M,pe)|0)|0)+((8191&(i=(i=i+Math.imul(M,me)|0)+Math.imul(D,pe)|0))<<13)|0;u=((o=o+Math.imul(D,me)|0)+(i>>>13)|0)+(Ie>>>26)|0,Ie&=67108863;var Oe=(u+(n=Math.imul(K,pe))|0)+((8191&(i=(i=Math.imul(K,me))+Math.imul(F,pe)|0))<<13)|0;return u=((o=Math.imul(F,me))+(i>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,l[0]=ye,l[1]=ge,l[2]=ve,l[3]=be,l[4]=we,l[5]=_e,l[6]=Se,l[7]=Ee,l[8]=ke,l[9]=Ae,l[10]=Pe,l[11]=xe,l[12]=Ce,l[13]=Te,l[14]=Ne,l[15]=Re,l[16]=Be,l[17]=Ie,l[18]=Oe,0!==u&&(l[19]=u,r.length++),r};function m(e,t,r){return (new y).mulp(e,t,r)}function y(e,t){this.x=e,this.y=t;}Math.imul||(p=f),o.prototype.mulTo=function(e,t){var r,n=this.length+e.length;return r=10===this.length&&10===e.length?p(this,e,t):n<63?f(this,e,t):n<1024?function(e,t,r){r.negative=t.negative^e.negative,r.length=e.length+t.length;for(var n=0,i=0,o=0;o<r.length-1;o++){var s=i;i=0;for(var a=67108863&n,l=Math.min(o,t.length-1),u=Math.max(0,o-e.length+1);u<=l;u++){var c=o-u,h=(0|e.words[c])*(0|t.words[u]),d=67108863&h;a=67108863&(d=d+a|0),i+=(s=(s=s+(h/67108864|0)|0)+(d>>>26)|0)>>>26,s&=67108863;}r.words[o]=a,n=s,s=i;}return 0!==n?r.words[o]=n:r.length--,r.strip()}(this,e,t):m(this,e,t),r},y.prototype.makeRBT=function(e){for(var t=new Array(e),r=o.prototype._countBits(e)-1,n=0;n<e;n++)t[n]=this.revBin(n,r,e);return t},y.prototype.revBin=function(e,t,r){if(0===e||e===r-1)return e;for(var n=0,i=0;i<t;i++)n|=(1&e)<<t-i-1,e>>=1;return n},y.prototype.permute=function(e,t,r,n,i,o){for(var s=0;s<o;s++)n[s]=t[e[s]],i[s]=r[e[s]];},y.prototype.transform=function(e,t,r,n,i,o){this.permute(o,e,t,r,n,i);for(var s=1;s<i;s<<=1)for(var a=s<<1,l=Math.cos(2*Math.PI/a),u=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var h=l,d=u,f=0;f<s;f++){var p=r[c+f],m=n[c+f],y=r[c+f+s],g=n[c+f+s],v=h*y-d*g;g=h*g+d*y,y=v,r[c+f]=p+y,n[c+f]=m+g,r[c+f+s]=p-y,n[c+f+s]=m-g,f!==a&&(v=l*h-u*d,d=l*d+u*h,h=v);}},y.prototype.guessLen13b=function(e,t){var r=1|Math.max(t,e),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(e,t,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=e[n];e[n]=e[r-n-1],e[r-n-1]=i,i=t[n],t[n]=-t[r-n-1],t[r-n-1]=-i;}},y.prototype.normalize13b=function(e,t){for(var r=0,n=0;n<t/2;n++){var i=8192*Math.round(e[2*n+1]/t)+Math.round(e[2*n]/t)+r;e[n]=67108863&i,r=i<67108864?0:i/67108864|0;}return e},y.prototype.convert13b=function(e,t,r,i){for(var o=0,s=0;s<t;s++)o+=0|e[s],r[2*s]=8191&o,o>>>=13,r[2*s+1]=8191&o,o>>>=13;for(s=2*t;s<i;++s)r[s]=0;n(0===o),n(0==(-8192&o));},y.prototype.stub=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=0;return t},y.prototype.mulp=function(e,t,r){var n=2*this.guessLen13b(e.length,t.length),i=this.makeRBT(n),o=this.stub(n),s=new Array(n),a=new Array(n),l=new Array(n),u=new Array(n),c=new Array(n),h=new Array(n),d=r.words;d.length=n,this.convert13b(e.words,e.length,s,n),this.convert13b(t.words,t.length,u,n),this.transform(s,o,a,l,n,i),this.transform(u,o,c,h,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-l[f]*h[f];l[f]=a[f]*h[f]+l[f]*c[f],a[f]=p;}return this.conjugate(a,l,n),this.transform(a,l,d,o,n,i),this.conjugate(d,o,n),this.normalize13b(d,n),r.negative=e.negative^t.negative,r.length=e.length+t.length,r.strip()},o.prototype.mul=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},o.prototype.mulf=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),m(this,e,t)},o.prototype.imul=function(e){return this.clone().mulTo(e,this)},o.prototype.imuln=function(e){n("number"==typeof e),n(e<67108864);for(var t=0,r=0;r<this.length;r++){var i=(0|this.words[r])*e,o=(67108863&i)+(67108863&t);t>>=26,t+=i/67108864|0,t+=o>>>26,this.words[r]=67108863&o;}return 0!==t&&(this.words[r]=t,this.length++),this},o.prototype.muln=function(e){return this.clone().imuln(e)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),r=0;r<t.length;r++){var n=r/26|0,i=r%26;t[r]=(e.words[n]&1<<i)>>>i;}return t}(e);if(0===t.length)return new o(1);for(var r=this,n=0;n<t.length&&0===t[n];n++,r=r.sqr());if(++n<t.length)for(var i=r.sqr();n<t.length;n++,i=i.sqr())0!==t[n]&&(r=r.mul(i));return r},o.prototype.iushln=function(e){n("number"==typeof e&&e>=0);var t,r=e%26,i=(e-r)/26,o=67108863>>>26-r<<26-r;if(0!==r){var s=0;for(t=0;t<this.length;t++){var a=this.words[t]&o,l=(0|this.words[t])-a<<r;this.words[t]=l|s,s=a>>>26-r;}s&&(this.words[t]=s,this.length++);}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i;}return this.strip()},o.prototype.ishln=function(e){return n(0===this.negative),this.iushln(e)},o.prototype.iushrn=function(e,t,r){var i;n("number"==typeof e&&e>=0),i=t?(t-t%26)/26:0;var o=e%26,s=Math.min((e-o)/26,this.length),a=67108863^67108863>>>o<<o,l=r;if(i-=s,i=Math.max(0,i),l){for(var u=0;u<s;u++)l.words[u]=this.words[u];l.length=s;}if(0===s);else if(this.length>s)for(this.length-=s,u=0;u<this.length;u++)this.words[u]=this.words[u+s];else this.words[0]=0,this.length=1;var c=0;for(u=this.length-1;u>=0&&(0!==c||u>=i);u--){var h=0|this.words[u];this.words[u]=c<<26-o|h>>>o,c=h&a;}return l&&0!==c&&(l.words[l.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},o.prototype.ishrn=function(e,t,r){return n(0===this.negative),this.iushrn(e,t,r)},o.prototype.shln=function(e){return this.clone().ishln(e)},o.prototype.ushln=function(e){return this.clone().iushln(e)},o.prototype.shrn=function(e){return this.clone().ishrn(e)},o.prototype.ushrn=function(e){return this.clone().iushrn(e)},o.prototype.testn=function(e){n("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26,i=1<<t;return !(this.length<=r||!(this.words[r]&i))},o.prototype.imaskn=function(e){n("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==t&&r++,this.length=Math.min(r,this.length),0!==t){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i;}return this.strip()},o.prototype.maskn=function(e){return this.clone().imaskn(e)},o.prototype.iaddn=function(e){return n("number"==typeof e),n(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},o.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},o.prototype.isubn=function(e){if(n("number"==typeof e),n(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this.strip()},o.prototype.addn=function(e){return this.clone().iaddn(e)},o.prototype.subn=function(e){return this.clone().isubn(e)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(e,t,r){var i,o,s=e.length+r;this._expand(s);var a=0;for(i=0;i<e.length;i++){o=(0|this.words[i+r])+a;var l=(0|e.words[i])*t;a=((o-=67108863&l)>>26)-(l/67108864|0),this.words[i+r]=67108863&o;}for(;i<this.length-r;i++)a=(o=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&o;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(o=-(0|this.words[i])+a)>>26,this.words[i]=67108863&o;return this.negative=1,this.strip()},o.prototype._wordDiv=function(e,t){var r=(this.length,e.length),n=this.clone(),i=e,s=0|i.words[i.length-1];0!=(r=26-this._countBits(s))&&(i=i.ushln(r),n.iushln(r),s=0|i.words[i.length-1]);var a,l=n.length-i.length;if("mod"!==t){(a=new o(null)).length=l+1,a.words=new Array(a.length);for(var u=0;u<a.length;u++)a.words[u]=0;}var c=n.clone()._ishlnsubmul(i,1,l);0===c.negative&&(n=c,a&&(a.words[l]=1));for(var h=l-1;h>=0;h--){var d=67108864*(0|n.words[i.length+h])+(0|n.words[i.length+h-1]);for(d=Math.min(d/s|0,67108863),n._ishlnsubmul(i,d,h);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,h),n.isZero()||(n.negative^=1);a&&(a.words[h]=d);}return a&&a.strip(),n.strip(),"div"!==t&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},o.prototype.divmod=function(e,t,r){return n(!e.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===e.negative?(a=this.neg().divmod(e,t),"mod"!==t&&(i=a.div.neg()),"div"!==t&&(s=a.mod.neg(),r&&0!==s.negative&&s.iadd(e)),{div:i,mod:s}):0===this.negative&&0!==e.negative?(a=this.divmod(e.neg(),t),"mod"!==t&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&e.negative)?(a=this.neg().divmod(e.neg(),t),"div"!==t&&(s=a.mod.neg(),r&&0!==s.negative&&s.isub(e)),{div:a.div,mod:s}):e.length>this.length||this.cmp(e)<0?{div:new o(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new o(this.modn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new o(this.modn(e.words[0]))}:this._wordDiv(e,t);var i,s,a;},o.prototype.div=function(e){return this.divmod(e,"div",!1).div},o.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},o.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},o.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=0!==t.div.negative?t.mod.isub(e):t.mod,n=e.ushrn(1),i=e.andln(1),o=r.cmp(n);return o<0||1===i&&0===o?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},o.prototype.modn=function(e){n(e<=67108863);for(var t=(1<<26)%e,r=0,i=this.length-1;i>=0;i--)r=(t*r+(0|this.words[i]))%e;return r},o.prototype.idivn=function(e){n(e<=67108863);for(var t=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*t;this.words[r]=i/e|0,t=i%e;}return this.strip()},o.prototype.divn=function(e){return this.clone().idivn(e)},o.prototype.egcd=function(e){n(0===e.negative),n(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i=new o(1),s=new o(0),a=new o(0),l=new o(1),u=0;t.isEven()&&r.isEven();)t.iushrn(1),r.iushrn(1),++u;for(var c=r.clone(),h=t.clone();!t.isZero();){for(var d=0,f=1;0==(t.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(t.iushrn(d);d-- >0;)(i.isOdd()||s.isOdd())&&(i.iadd(c),s.isub(h)),i.iushrn(1),s.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||l.isOdd())&&(a.iadd(c),l.isub(h)),a.iushrn(1),l.iushrn(1);t.cmp(r)>=0?(t.isub(r),i.isub(a),s.isub(l)):(r.isub(t),a.isub(i),l.isub(s));}return {a,b:l,gcd:r.iushln(u)}},o.prototype._invmp=function(e){n(0===e.negative),n(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i,s=new o(1),a=new o(0),l=r.clone();t.cmpn(1)>0&&r.cmpn(1)>0;){for(var u=0,c=1;0==(t.words[0]&c)&&u<26;++u,c<<=1);if(u>0)for(t.iushrn(u);u-- >0;)s.isOdd()&&s.iadd(l),s.iushrn(1);for(var h=0,d=1;0==(r.words[0]&d)&&h<26;++h,d<<=1);if(h>0)for(r.iushrn(h);h-- >0;)a.isOdd()&&a.iadd(l),a.iushrn(1);t.cmp(r)>=0?(t.isub(r),s.isub(a)):(r.isub(t),a.isub(s));}return (i=0===t.cmpn(1)?s:a).cmpn(0)<0&&i.iadd(e),i},o.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),r=e.clone();t.negative=0,r.negative=0;for(var n=0;t.isEven()&&r.isEven();n++)t.iushrn(1),r.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=t.cmp(r);if(i<0){var o=t;t=r,r=o;}else if(0===i||0===r.cmpn(1))break;t.isub(r);}return r.iushln(n)},o.prototype.invm=function(e){return this.egcd(e).a.umod(e)},o.prototype.isEven=function(){return 0==(1&this.words[0])},o.prototype.isOdd=function(){return 1==(1&this.words[0])},o.prototype.andln=function(e){return this.words[0]&e},o.prototype.bincn=function(e){n("number"==typeof e);var t=e%26,r=(e-t)/26,i=1<<t;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var o=i,s=r;0!==o&&s<this.length;s++){var a=0|this.words[s];o=(a+=o)>>>26,a&=67108863,this.words[s]=a;}return 0!==o&&(this.words[s]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(e){var t,r=e<0;if(0!==this.negative&&!r)return -1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)t=1;else {r&&(e=-e),n(e<=67108863,"Number is too big");var i=0|this.words[0];t=i===e?0:i<e?-1:1;}return 0!==this.negative?0|-t:t},o.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return -1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},o.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return -1;for(var t=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|e.words[r];if(n!==i){n<i?t=-1:n>i&&(t=1);break}}return t},o.prototype.gtn=function(e){return 1===this.cmpn(e)},o.prototype.gt=function(e){return 1===this.cmp(e)},o.prototype.gten=function(e){return this.cmpn(e)>=0},o.prototype.gte=function(e){return this.cmp(e)>=0},o.prototype.ltn=function(e){return -1===this.cmpn(e)},o.prototype.lt=function(e){return -1===this.cmp(e)},o.prototype.lten=function(e){return this.cmpn(e)<=0},o.prototype.lte=function(e){return this.cmp(e)<=0},o.prototype.eqn=function(e){return 0===this.cmpn(e)},o.prototype.eq=function(e){return 0===this.cmp(e)},o.red=function(e){return new E(e)},o.prototype.toRed=function(e){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},o.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(e){return this.red=e,this},o.prototype.forceRed=function(e){return n(!this.red,"Already a number in reduction context"),this._forceRed(e)},o.prototype.redAdd=function(e){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},o.prototype.redIAdd=function(e){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},o.prototype.redSub=function(e){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},o.prototype.redISub=function(e){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},o.prototype.redShl=function(e){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},o.prototype.redMul=function(e){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},o.prototype.redIMul=function(e){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},o.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(e){return n(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var g={k256:null,p224:null,p192:null,p25519:null};function v(e,t){this.name=e,this.p=new o(t,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp();}function b(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");}function w(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");}function _(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");}function S(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");}function E(e){if("string"==typeof e){var t=o._prime(e);this.m=t.p,this.prime=t;}else n(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null;}function k(e){E.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv);}v.prototype._tmp=function(){var e=new o(null);return e.words=new Array(Math.ceil(this.n/13)),e},v.prototype.ireduce=function(e){var t,r=e;do{this.split(r,this.tmp),t=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength();}while(t>this.n);var n=t<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},v.prototype.split=function(e,t){e.iushrn(this.n,0,t);},v.prototype.imulK=function(e){return e.imul(this.k)},i(b,v),b.prototype.split=function(e,t){for(var r=4194303,n=Math.min(e.length,9),i=0;i<n;i++)t.words[i]=e.words[i];if(t.length=n,e.length<=9)return e.words[0]=0,void(e.length=1);var o=e.words[9];for(t.words[t.length++]=o&r,i=10;i<e.length;i++){var s=0|e.words[i];e.words[i-10]=(s&r)<<4|o>>>22,o=s;}o>>>=22,e.words[i-10]=o,0===o&&e.length>10?e.length-=10:e.length-=9;},b.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,r=0;r<e.length;r++){var n=0|e.words[r];t+=977*n,e.words[r]=67108863&t,t=64*n+(t/67108864|0);}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},i(w,v),i(_,v),i(S,v),S.prototype.imulK=function(e){for(var t=0,r=0;r<e.length;r++){var n=19*(0|e.words[r])+t,i=67108863&n;n>>>=26,e.words[r]=i,t=n;}return 0!==t&&(e.words[e.length++]=t),e},o._prime=function(e){if(g[e])return g[e];var t;if("k256"===e)t=new b;else if("p224"===e)t=new w;else if("p192"===e)t=new _;else {if("p25519"!==e)throw new Error("Unknown prime "+e);t=new S;}return g[e]=t,t},E.prototype._verify1=function(e){n(0===e.negative,"red works only with positives"),n(e.red,"red works only with red numbers");},E.prototype._verify2=function(e,t){n(0==(e.negative|t.negative),"red works only with positives"),n(e.red&&e.red===t.red,"red works only with red numbers");},E.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):e.umod(this.m)._forceRed(this)},E.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},E.prototype.add=function(e,t){this._verify2(e,t);var r=e.add(t);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},E.prototype.iadd=function(e,t){this._verify2(e,t);var r=e.iadd(t);return r.cmp(this.m)>=0&&r.isub(this.m),r},E.prototype.sub=function(e,t){this._verify2(e,t);var r=e.sub(t);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},E.prototype.isub=function(e,t){this._verify2(e,t);var r=e.isub(t);return r.cmpn(0)<0&&r.iadd(this.m),r},E.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},E.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},E.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},E.prototype.isqr=function(e){return this.imul(e,e.clone())},E.prototype.sqr=function(e){return this.mul(e,e)},E.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(n(t%2==1),3===t){var r=this.m.add(new o(1)).iushrn(2);return this.pow(e,r)}for(var i=this.m.subn(1),s=0;!i.isZero()&&0===i.andln(1);)s++,i.iushrn(1);n(!i.isZero());var a=new o(1).toRed(this),l=a.redNeg(),u=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new o(2*c*c).toRed(this);0!==this.pow(c,u).cmp(l);)c.redIAdd(l);for(var h=this.pow(c,i),d=this.pow(e,i.addn(1).iushrn(1)),f=this.pow(e,i),p=s;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var g=this.pow(h,new o(1).iushln(p-y-1));d=d.redMul(g),h=g.redSqr(),f=f.redMul(h),p=y;}return d},E.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},E.prototype.pow=function(e,t){if(t.isZero())return new o(1).toRed(this);if(0===t.cmpn(1))return e.clone();var r=new Array(16);r[0]=new o(1).toRed(this),r[1]=e;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],e);var i=r[0],s=0,a=0,l=t.bitLength()%26;for(0===l&&(l=26),n=t.length-1;n>=0;n--){for(var u=t.words[n],c=l-1;c>=0;c--){var h=u>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==h||0!==s?(s<<=1,s|=h,(4==++a||0===n&&0===c)&&(i=this.mul(i,r[s]),a=0,s=0)):a=0;}l=26;}return i},E.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},E.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},o.mont=function(e){return new k(e)},i(k,E),k.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},k.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},k.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var r=e.imul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},k.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new o(0)._forceRed(this);var r=e.mul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},k.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)};}(e=r.nmd(e),this);},8764:(e,t,r)=>{const n=r(9742),i=r(645),o="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=l,t.SlowBuffer=function(e){return +e!=e&&(e=0),l.alloc(+e)},t.INSPECT_MAX_BYTES=50;const s=2147483647;function a(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,l.prototype),t}function l(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return h(e)}return u(e,t,r)}function u(e,t,r){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!l.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|m(e,t);let n=a(r);const i=n.write(e,t);return i!==r&&(n=n.slice(0,i)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if($(e,Uint8Array)){const t=new Uint8Array(e);return f(t.buffer,t.byteOffset,t.byteLength)}return d(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if($(e,ArrayBuffer)||e&&$(e.buffer,ArrayBuffer))return f(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&($(e,SharedArrayBuffer)||e&&$(e.buffer,SharedArrayBuffer)))return f(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return l.from(n,t,r);const i=function(e){if(l.isBuffer(e)){const t=0|p(e.length),r=a(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||Z(e.length)?a(0):d(e):"Buffer"===e.type&&Array.isArray(e.data)?d(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return l.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function c(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function h(e){return c(e),a(e<0?0:0|p(e))}function d(e){const t=e.length<0?0:0|p(e.length),r=a(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function f(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,l.prototype),n}function p(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function m(e,t){if(l.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||$(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return V(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return H(e).length;default:if(i)return n?-1:V(e).length;t=(""+t).toLowerCase(),i=!0;}}function y(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return "";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return "";if((r>>>=0)<=(t>>>=0))return "";for(e||(e="utf8");;)switch(e){case"hex":return N(this,t,r);case"utf8":case"utf-8":return P(this,t,r);case"ascii":return C(this,t,r);case"latin1":case"binary":return T(this,t,r);case"base64":return A(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0;}}function g(e,t,r){const n=e[t];e[t]=e[r],e[r]=n;}function v(e,t,r,n,i){if(0===e.length)return -1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),Z(r=+r)&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return -1;r=e.length-1;}else if(r<0){if(!i)return -1;r=0;}if("string"==typeof t&&(t=l.from(t,n)),l.isBuffer(t))return 0===t.length?-1:b(e,t,r,n,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):b(e,[t],r,n,i);throw new TypeError("val must be string, number or Buffer")}function b(e,t,r,n,i){let o,s=1,a=e.length,l=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return -1;s=2,a/=2,l/=2,r/=2;}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){let n=-1;for(o=r;o<a;o++)if(u(e,o)===u(t,-1===n?0:o-n)){if(-1===n&&(n=o),o-n+1===l)return n*s}else -1!==n&&(o-=o-n),n=-1;}else for(r+l>a&&(r=a-l),o=r;o>=0;o--){let r=!0;for(let n=0;n<l;n++)if(u(e,o+n)!==u(t,n)){r=!1;break}if(r)return o}return -1}function w(e,t,r,n){r=Number(r)||0;const i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;const o=t.length;let s;for(n>o/2&&(n=o/2),s=0;s<n;++s){const n=parseInt(t.substr(2*s,2),16);if(Z(n))return s;e[r+s]=n;}return s}function _(e,t,r,n){return J(V(t,e.length-r),e,r,n)}function S(e,t,r,n){return J(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function E(e,t,r,n){return J(H(t),e,r,n)}function k(e,t,r,n){return J(function(e,t){let r,n,i;const o=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function A(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function P(e,t,r){r=Math.min(e.length,r);const n=[];let i=t;for(;i<r;){const t=e[i];let o=null,s=t>239?4:t>223?3:t>191?2:1;if(i+s<=r){let r,n,a,l;switch(s){case 1:t<128&&(o=t);break;case 2:r=e[i+1],128==(192&r)&&(l=(31&t)<<6|63&r,l>127&&(o=l));break;case 3:r=e[i+1],n=e[i+2],128==(192&r)&&128==(192&n)&&(l=(15&t)<<12|(63&r)<<6|63&n,l>2047&&(l<55296||l>57343)&&(o=l));break;case 4:r=e[i+1],n=e[i+2],a=e[i+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(l=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&a,l>65535&&l<1114112&&(o=l));}}null===o?(o=65533,s=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),i+=s;}return function(e){const t=e.length;if(t<=x)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=x));return r}(n)}t.kMaxLength=s,l.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return !1}}(),l.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.byteOffset}}),l.poolSize=8192,l.from=function(e,t,r){return u(e,t,r)},Object.setPrototypeOf(l.prototype,Uint8Array.prototype),Object.setPrototypeOf(l,Uint8Array),l.alloc=function(e,t,r){return function(e,t,r){return c(e),e<=0?a(e):void 0!==t?"string"==typeof r?a(e).fill(t,r):a(e).fill(t):a(e)}(e,t,r)},l.allocUnsafe=function(e){return h(e)},l.allocUnsafeSlow=function(e){return h(e)},l.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==l.prototype},l.compare=function(e,t){if($(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),$(t,Uint8Array)&&(t=l.from(t,t.offset,t.byteLength)),!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return !0;default:return !1}},l.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=l.allocUnsafe(t);let i=0;for(r=0;r<e.length;++r){let t=e[r];if($(t,Uint8Array))i+t.length>n.length?(l.isBuffer(t)||(t=l.from(t)),t.copy(n,i)):Uint8Array.prototype.set.call(n,t,i);else {if(!l.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,i);}i+=t.length;}return n},l.byteLength=m,l.prototype._isBuffer=!0,l.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)g(this,t,t+1);return this},l.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},l.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},l.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?P(this,0,e):y.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){let e="";const r=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},o&&(l.prototype[o]=l.prototype.inspect),l.prototype.compare=function(e,t,r,n,i){if($(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),!l.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),t<0||r>e.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&t>=r)return 0;if(n>=i)return -1;if(t>=r)return 1;if(this===e)return 0;let o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0);const a=Math.min(o,s),u=this.slice(n,i),c=e.slice(t,r);for(let e=0;e<a;++e)if(u[e]!==c[e]){o=u[e],s=c[e];break}return o<s?-1:s<o?1:0},l.prototype.includes=function(e,t,r){return -1!==this.indexOf(e,t,r)},l.prototype.indexOf=function(e,t,r){return v(this,e,t,r,!0)},l.prototype.lastIndexOf=function(e,t,r){return v(this,e,t,r,!1)},l.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else {if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0);}const i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let o=!1;for(;;)switch(n){case"hex":return w(this,e,t,r);case"utf8":case"utf-8":return _(this,e,t,r);case"ascii":case"latin1":case"binary":return S(this,e,t,r);case"base64":return E(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return k(this,e,t,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0;}},l.prototype.toJSON=function(){return {type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const x=4096;function C(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function T(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function N(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let i="";for(let n=t;n<r;++n)i+=X[e[n]];return i}function R(e,t,r){const n=e.slice(t,r);let i="";for(let e=0;e<n.length-1;e+=2)i+=String.fromCharCode(n[e]+256*n[e+1]);return i}function B(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function I(e,t,r,n,i,o){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function O(e,t,r,n,i){q(t,n,i,e,r,7);let o=Number(t&BigInt(4294967295));e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function M(e,t,r,n,i){q(t,n,i,e,r,7);let o=Number(t&BigInt(4294967295));e[r+7]=o,o>>=8,e[r+6]=o,o>>=8,e[r+5]=o,o>>=8,e[r+4]=o;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function D(e,t,r,n,i,o){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function U(e,t,r,n,o){return t=+t,r>>>=0,o||D(e,0,r,4),i.write(e,t,r,n,23,4),r+4}function K(e,t,r,n,o){return t=+t,r>>>=0,o||D(e,0,r,8),i.write(e,t,r,n,52,8),r+8}l.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,l.prototype),n},l.prototype.readUintLE=l.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||B(e,t,this.length);let n=this[e],i=1,o=0;for(;++o<t&&(i*=256);)n+=this[e+o]*i;return n},l.prototype.readUintBE=l.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||B(e,t,this.length);let n=this[e+--t],i=1;for(;t>0&&(i*=256);)n+=this[e+--t]*i;return n},l.prototype.readUint8=l.prototype.readUInt8=function(e,t){return e>>>=0,t||B(e,1,this.length),this[e]},l.prototype.readUint16LE=l.prototype.readUInt16LE=function(e,t){return e>>>=0,t||B(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUint16BE=l.prototype.readUInt16BE=function(e,t){return e>>>=0,t||B(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUint32LE=l.prototype.readUInt32LE=function(e,t){return e>>>=0,t||B(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUint32BE=l.prototype.readUInt32BE=function(e,t){return e>>>=0,t||B(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readBigUInt64LE=Q((function(e){z(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||W(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),l.prototype.readBigUInt64BE=Q((function(e){z(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||W(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return (BigInt(n)<<BigInt(32))+BigInt(i)})),l.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||B(e,t,this.length);let n=this[e],i=1,o=0;for(;++o<t&&(i*=256);)n+=this[e+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*t)),n},l.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||B(e,t,this.length);let n=t,i=1,o=this[e+--n];for(;n>0&&(i*=256);)o+=this[e+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*t)),o},l.prototype.readInt8=function(e,t){return e>>>=0,t||B(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){e>>>=0,t||B(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},l.prototype.readInt16BE=function(e,t){e>>>=0,t||B(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},l.prototype.readInt32LE=function(e,t){return e>>>=0,t||B(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return e>>>=0,t||B(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readBigInt64LE=Q((function(e){z(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||W(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return (BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),l.prototype.readBigInt64BE=Q((function(e){z(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||W(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return (BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),l.prototype.readFloatLE=function(e,t){return e>>>=0,t||B(e,4,this.length),i.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return e>>>=0,t||B(e,4,this.length),i.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return e>>>=0,t||B(e,8,this.length),i.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return e>>>=0,t||B(e,8,this.length),i.read(this,e,!1,52,8)},l.prototype.writeUintLE=l.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||I(this,e,t,r,Math.pow(2,8*r)-1,0);let i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},l.prototype.writeUintBE=l.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||I(this,e,t,r,Math.pow(2,8*r)-1,0);let i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},l.prototype.writeUint8=l.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,1,255,0),this[t]=255&e,t+1},l.prototype.writeUint16LE=l.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeUint16BE=l.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeUint32LE=l.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},l.prototype.writeUint32BE=l.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigUInt64LE=Q((function(e,t=0){return O(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),l.prototype.writeBigUInt64BE=Q((function(e,t=0){return M(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),l.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);I(this,e,t,r,n-1,-n);}let i=0,o=1,s=0;for(this[t]=255&e;++i<r&&(o*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},l.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);I(this,e,t,r,n-1,-n);}let i=r-1,o=1,s=0;for(this[t+i]=255&e;--i>=0&&(o*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},l.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},l.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||I(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigInt64LE=Q((function(e,t=0){return O(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),l.prototype.writeBigInt64BE=Q((function(e,t=0){return M(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),l.prototype.writeFloatLE=function(e,t,r){return U(this,e,t,!0,r)},l.prototype.writeFloatBE=function(e,t,r){return U(this,e,t,!1,r)},l.prototype.writeDoubleLE=function(e,t,r){return K(this,e,t,!0,r)},l.prototype.writeDoubleBE=function(e,t,r){return K(this,e,t,!1,r)},l.prototype.copy=function(e,t,r,n){if(!l.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const i=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),i},l.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!l.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t);}}else "number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else {const o=l.isBuffer(e)?e:l.from(e,n),s=o.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<r-t;++i)this[i+t]=o[i%s];}return this};const F={};function L(e,t,r){F[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name;}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0});}toString(){return `${this.name} [${e}]: ${this.message}`}};}function j(e){let t="",r=e.length;const n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return `${e.slice(0,r)}${t}`}function q(e,t,r,n,i,o){if(e>r||e<t){const n="bigint"==typeof t?"n":"";let i;throw i=o>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(o+1)}${n}`:`>= -(2${n} ** ${8*(o+1)-1}${n}) and < 2 ** ${8*(o+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new F.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,r){z(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||W(t,e.length-(r+1));}(n,i,o);}function z(e,t){if("number"!=typeof e)throw new F.ERR_INVALID_ARG_TYPE(t,"number",e)}function W(e,t,r){if(Math.floor(e)!==e)throw z(e,r),new F.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new F.ERR_BUFFER_OUT_OF_BOUNDS;throw new F.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}L("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),L("ERR_INVALID_ARG_TYPE",(function(e,t){return `The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),L("ERR_OUT_OF_RANGE",(function(e,t,r){let n=`The value of "${e}" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=j(String(r)):"bigint"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=j(i)),i+="n"),n+=` It must be ${t}. Received ${i}`,n}),RangeError);const G=/[^+/0-9A-Za-z-_]/g;function V(e,t){let r;t=t||1/0;const n=e.length;let i=null;const o=[];for(let s=0;s<n;++s){if(r=e.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320);}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;o.push(r);}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128);}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128);}else {if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128);}}return o}function H(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(G,"")).length<2)return "";for(;e.length%4!=0;)e+="=";return e}(e))}function J(e,t,r,n){let i;for(i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function $(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Z(e){return e!=e}const X=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)t[n+i]=e[r]+e[i];}return t}();function Q(e){return "undefined"==typeof BigInt?Y:e}function Y(){throw new Error("BigInt not supported")}},9982:(e,t,r)=>{r.r(t),r.d(t,{BaseContract:()=>Bn,BigNumber:()=>J,Contract:()=>In,ContractFactory:()=>On,FixedNumber:()=>Gn,Signer:()=>lr,VoidSigner:()=>ur,Wallet:()=>bo,Wordlist:()=>_i,constants:()=>i,errors:()=>y,ethers:()=>l,getDefaultProvider:()=>Va,logger:()=>hl,providers:()=>o,utils:()=>a,version:()=>cl,wordlists:()=>Ai});var n={};r.r(n),r.d(n,{decode:()=>Pe,encode:()=>Ee});var i={};r.r(i),r.d(i,{AddressZero:()=>So,EtherSymbol:()=>ko,HashZero:()=>Eo,MaxInt256:()=>mt,MaxUint256:()=>ft,MinInt256:()=>pt,NegativeOne:()=>lt,One:()=>ct,Two:()=>ht,WeiPerEther:()=>dt,Zero:()=>ut});var o={};r.r(o),r.d(o,{AlchemyProvider:()=>na,AlchemyWebSocketProvider:()=>ra,BaseProvider:()=>Is,CloudflareProvider:()=>oa,EtherscanProvider:()=>pa,FallbackProvider:()=>Ta,Formatter:()=>ls,InfuraProvider:()=>Oa,InfuraWebSocketProvider:()=>Ia,IpcProvider:()=>Na,JsonRpcBatchProvider:()=>Ma,JsonRpcProvider:()=>Gs,JsonRpcSigner:()=>qs,NodesmithProvider:()=>Ua,PocketProvider:()=>La,Provider:()=>nr,Resolver:()=>Ns,StaticJsonRpcProvider:()=>Qs,UrlJsonRpcProvider:()=>Ys,Web3Provider:()=>Wa,WebSocketProvider:()=>Zs,getDefaultProvider:()=>Va,getNetwork:()=>Bo,isCommunityResourcable:()=>us,isCommunityResource:()=>cs,showThrottleMessage:()=>ds});var s={};r.r(s),r.d(s,{decode:()=>$o,encode:()=>Zo});var a={};r.r(a),r.d(a,{AbiCoder:()=>Gt,ConstructorFragment:()=>Ot,ErrorFragment:()=>Ut,EventFragment:()=>Nt,FormatTypes:()=>At,Fragment:()=>Tt,FunctionFragment:()=>Mt,HDNode:()=>Di,Indexed:()=>Xt,Interface:()=>er,LogDescription:()=>Jt,Logger:()=>v,ParamType:()=>xt,RLP:()=>n,SigningKey:()=>Xr,SupportedAlgorithm:()=>fi,TransactionDescription:()=>$t,TransactionTypes:()=>tn,UnicodeNormalizationForm:()=>Fe,Utf8ErrorFuncs:()=>qe,Utf8ErrorReason:()=>Le,_TypedDataEncoder:()=>ci,_fetchData:()=>ts,_toEscapedUtf8String:()=>Ve,accessListify:()=>hn,arrayify:()=>A,base58:()=>di,base64:()=>s,checkProperties:()=>ne,checkResultErrors:()=>de,commify:()=>ol,computeAddress:()=>an,computeHmac:()=>vi,computePublicKey:()=>Yr,concat:()=>P,deepCopy:()=>le,defaultAbiCoder:()=>Vt,defaultPath:()=>Mi,defineReadOnly:()=>ee,entropyToMnemonic:()=>Fi,fetchJson:()=>rs,formatBytes32String:()=>tl,formatEther:()=>ll,formatUnits:()=>sl,getAccountPath:()=>ji,getAddress:()=>Ie,getContractAddress:()=>De,getCreate2Address:()=>Ue,getIcapAddress:()=>Me,getJsonWalletAddress:()=>oo,getStatic:()=>te,hashMessage:()=>Jn,hexConcat:()=>O,hexDataLength:()=>B,hexDataSlice:()=>I,hexStripZeros:()=>D,hexValue:()=>M,hexZeroPad:()=>U,hexlify:()=>R,id:()=>Ze,isAddress:()=>Oe,isBytes:()=>k,isBytesLike:()=>S,isHexString:()=>T,isValidMnemonic:()=>Li,isValidName:()=>Ho,joinSignature:()=>F,keccak256:()=>ve,mnemonicToEntropy:()=>Ki,mnemonicToSeed:()=>Ui,namehash:()=>Jo,nameprep:()=>zo,parseBytes32String:()=>rl,parseEther:()=>ul,parseTransaction:()=>gn,parseUnits:()=>al,poll:()=>ns,randomBytes:()=>Gi,recoverAddress:()=>ln,recoverPublicKey:()=>Qr,resolveProperties:()=>re,ripemd160:()=>mi,serializeTransaction:()=>mn,sha256:()=>yi,sha512:()=>gi,shallowCopy:()=>ie,shuffled:()=>ma,solidityKeccak256:()=>Ya,solidityPack:()=>Qa,soliditySha256:()=>el,splitSignature:()=>K,stripZeros:()=>x,toUtf8Bytes:()=>We,toUtf8CodePoints:()=>$e,toUtf8String:()=>Je,verifyMessage:()=>wo,verifyTypedData:()=>_o,zeroPad:()=>C});var l={};r.r(l),r.d(l,{BaseContract:()=>Bn,BigNumber:()=>J,Contract:()=>In,ContractFactory:()=>On,FixedNumber:()=>Gn,Signer:()=>lr,VoidSigner:()=>ur,Wallet:()=>bo,Wordlist:()=>_i,constants:()=>i,errors:()=>y,getDefaultProvider:()=>Va,logger:()=>hl,providers:()=>o,utils:()=>a,version:()=>cl,wordlists:()=>Ai});let u=!1,c=!1;const h={debug:1,default:2,info:2,warning:3,error:4,off:5};let d=h.default,f=null;const p=function(){try{const e=[];if(["NFD","NFC","NFKD","NFKC"].forEach((t=>{try{if("test"!=="test".normalize(t))throw new Error("bad normalize")}catch(r){e.push(t);}})),e.length)throw new Error("missing "+e.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(e){return e.message}return null}();var m,y;!function(e){e.DEBUG="DEBUG",e.INFO="INFO",e.WARNING="WARNING",e.ERROR="ERROR",e.OFF="OFF";}(m||(m={})),function(e){e.UNKNOWN_ERROR="UNKNOWN_ERROR",e.NOT_IMPLEMENTED="NOT_IMPLEMENTED",e.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.TIMEOUT="TIMEOUT",e.BUFFER_OVERRUN="BUFFER_OVERRUN",e.NUMERIC_FAULT="NUMERIC_FAULT",e.MISSING_NEW="MISSING_NEW",e.INVALID_ARGUMENT="INVALID_ARGUMENT",e.MISSING_ARGUMENT="MISSING_ARGUMENT",e.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",e.CALL_EXCEPTION="CALL_EXCEPTION",e.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",e.NONCE_EXPIRED="NONCE_EXPIRED",e.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",e.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",e.TRANSACTION_REPLACED="TRANSACTION_REPLACED";}(y||(y={}));const g="0123456789abcdef";class v{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1});}_log(e,t){const r=e.toLowerCase();null==h[r]&&this.throwArgumentError("invalid log level name","logLevel",e),d>h[r]||console.log.apply(console,t);}debug(...e){this._log(v.levels.DEBUG,e);}info(...e){this._log(v.levels.INFO,e);}warn(...e){this._log(v.levels.WARNING,e);}makeError(e,t,r){if(c)return this.makeError("censored error",t,{});t||(t=v.errors.UNKNOWN_ERROR),r||(r={});const n=[];Object.keys(r).forEach((e=>{const t=r[e];try{if(t instanceof Uint8Array){let r="";for(let e=0;e<t.length;e++)r+=g[t[e]>>4],r+=g[15&t[e]];n.push(e+"=Uint8Array(0x"+r+")");}else n.push(e+"="+JSON.stringify(t));}catch(t){n.push(e+"="+JSON.stringify(r[e].toString()));}})),n.push(`code=${t}`),n.push(`version=${this.version}`);const i=e;n.length&&(e+=" ("+n.join(", ")+")");const o=new Error(e);return o.reason=i,o.code=t,Object.keys(r).forEach((function(e){o[e]=r[e];})),o}throwError(e,t,r){throw this.makeError(e,t,r)}throwArgumentError(e,t,r){return this.throwError(e,v.errors.INVALID_ARGUMENT,{argument:t,value:r})}assert(e,t,r,n){e||this.throwError(t,r,n);}assertArgument(e,t,r,n){e||this.throwArgumentError(t,r,n);}checkNormalize(e){p&&this.throwError("platform missing String.prototype.normalize",v.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:p});}checkSafeUint53(e,t){"number"==typeof e&&(null==t&&(t="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(t,v.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(t,v.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}));}checkArgumentCount(e,t,r){r=r?": "+r:"",e<t&&this.throwError("missing argument"+r,v.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError("too many arguments"+r,v.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t});}checkNew(e,t){e!==Object&&null!=e||this.throwError("missing new",v.errors.MISSING_NEW,{name:t.name});}checkAbstract(e,t){e===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",v.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):e!==Object&&null!=e||this.throwError("missing new",v.errors.MISSING_NEW,{name:t.name});}static globalLogger(){return f||(f=new v("logger/5.5.0")),f}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError("cannot permanently disable censorship",v.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),u){if(!e)return;this.globalLogger().throwError("error censorship permanent",v.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"});}c=!!e,u=!!t;}static setLogLevel(e){const t=h[e.toLowerCase()];null!=t?d=t:v.globalLogger().warn("invalid log level - "+e);}static from(e){return new v(e)}}v.errors=y,v.levels=m;const b=new v("bytes/5.5.0");function w(e){return !!e.toHexString}function _(e){return e.slice||(e.slice=function(){const t=Array.prototype.slice.call(arguments);return _(new Uint8Array(Array.prototype.slice.apply(e,t)))}),e}function S(e){return T(e)&&!(e.length%2)||k(e)}function E(e){return "number"==typeof e&&e==e&&e%1==0}function k(e){if(null==e)return !1;if(e.constructor===Uint8Array)return !0;if("string"==typeof e)return !1;if(!E(e.length)||e.length<0)return !1;for(let t=0;t<e.length;t++){const r=e[t];if(!E(r)||r<0||r>=256)return !1}return !0}function A(e,t){if(t||(t={}),"number"==typeof e){b.checkSafeUint53(e,"invalid arrayify value");const t=[];for(;e;)t.unshift(255&e),e=parseInt(String(e/256));return 0===t.length&&t.push(0),_(new Uint8Array(t))}if(t.allowMissingPrefix&&"string"==typeof e&&"0x"!==e.substring(0,2)&&(e="0x"+e),w(e)&&(e=e.toHexString()),T(e)){let r=e.substring(2);r.length%2&&("left"===t.hexPad?r="0x0"+r.substring(2):"right"===t.hexPad?r+="0":b.throwArgumentError("hex data is odd-length","value",e));const n=[];for(let e=0;e<r.length;e+=2)n.push(parseInt(r.substring(e,e+2),16));return _(new Uint8Array(n))}return k(e)?_(new Uint8Array(e)):b.throwArgumentError("invalid arrayify value","value",e)}function P(e){const t=e.map((e=>A(e))),r=t.reduce(((e,t)=>e+t.length),0),n=new Uint8Array(r);return t.reduce(((e,t)=>(n.set(t,e),e+t.length)),0),_(n)}function x(e){let t=A(e);if(0===t.length)return t;let r=0;for(;r<t.length&&0===t[r];)r++;return r&&(t=t.slice(r)),t}function C(e,t){(e=A(e)).length>t&&b.throwArgumentError("value out of range","value",arguments[0]);const r=new Uint8Array(t);return r.set(e,t-e.length),_(r)}function T(e,t){return !("string"!=typeof e||!e.match(/^0x[0-9A-Fa-f]*$/)||t&&e.length!==2+2*t)}const N="0123456789abcdef";function R(e,t){if(t||(t={}),"number"==typeof e){b.checkSafeUint53(e,"invalid hexlify value");let t="";for(;e;)t=N[15&e]+t,e=Math.floor(e/16);return t.length?(t.length%2&&(t="0"+t),"0x"+t):"0x00"}if("bigint"==typeof e)return (e=e.toString(16)).length%2?"0x0"+e:"0x"+e;if(t.allowMissingPrefix&&"string"==typeof e&&"0x"!==e.substring(0,2)&&(e="0x"+e),w(e))return e.toHexString();if(T(e))return e.length%2&&("left"===t.hexPad?e="0x0"+e.substring(2):"right"===t.hexPad?e+="0":b.throwArgumentError("hex data is odd-length","value",e)),e.toLowerCase();if(k(e)){let t="0x";for(let r=0;r<e.length;r++){let n=e[r];t+=N[(240&n)>>4]+N[15&n];}return t}return b.throwArgumentError("invalid hexlify value","value",e)}function B(e){if("string"!=typeof e)e=R(e);else if(!T(e)||e.length%2)return null;return (e.length-2)/2}function I(e,t,r){return "string"!=typeof e?e=R(e):(!T(e)||e.length%2)&&b.throwArgumentError("invalid hexData","value",e),t=2+2*t,null!=r?"0x"+e.substring(t,2+2*r):"0x"+e.substring(t)}function O(e){let t="0x";return e.forEach((e=>{t+=R(e).substring(2);})),t}function M(e){const t=D(R(e,{hexPad:"left"}));return "0x"===t?"0x0":t}function D(e){"string"!=typeof e&&(e=R(e)),T(e)||b.throwArgumentError("invalid hex string","value",e),e=e.substring(2);let t=0;for(;t<e.length&&"0"===e[t];)t++;return "0x"+e.substring(t)}function U(e,t){for("string"!=typeof e?e=R(e):T(e)||b.throwArgumentError("invalid hex string","value",e),e.length>2*t+2&&b.throwArgumentError("value out of range","value",arguments[1]);e.length<2*t+2;)e="0x0"+e.substring(2);return e}function K(e){const t={r:"0x",s:"0x",_vs:"0x",recoveryParam:0,v:0};if(S(e)){const r=A(e);65!==r.length&&b.throwArgumentError("invalid signature string; must be 65 bytes","signature",e),t.r=R(r.slice(0,32)),t.s=R(r.slice(32,64)),t.v=r[64],t.v<27&&(0===t.v||1===t.v?t.v+=27:b.throwArgumentError("signature invalid v byte","signature",e)),t.recoveryParam=1-t.v%2,t.recoveryParam&&(r[32]|=128),t._vs=R(r.slice(32,64));}else {if(t.r=e.r,t.s=e.s,t.v=e.v,t.recoveryParam=e.recoveryParam,t._vs=e._vs,null!=t._vs){const r=C(A(t._vs),32);t._vs=R(r);const n=r[0]>=128?1:0;null==t.recoveryParam?t.recoveryParam=n:t.recoveryParam!==n&&b.throwArgumentError("signature recoveryParam mismatch _vs","signature",e),r[0]&=127;const i=R(r);null==t.s?t.s=i:t.s!==i&&b.throwArgumentError("signature v mismatch _vs","signature",e);}if(null==t.recoveryParam)null==t.v?b.throwArgumentError("signature missing v and recoveryParam","signature",e):0===t.v||1===t.v?t.recoveryParam=t.v:t.recoveryParam=1-t.v%2;else if(null==t.v)t.v=27+t.recoveryParam;else {const r=0===t.v||1===t.v?t.v:1-t.v%2;t.recoveryParam!==r&&b.throwArgumentError("signature recoveryParam mismatch v","signature",e);}null!=t.r&&T(t.r)?t.r=U(t.r,32):b.throwArgumentError("signature missing or invalid r","signature",e),null!=t.s&&T(t.s)?t.s=U(t.s,32):b.throwArgumentError("signature missing or invalid s","signature",e);const r=A(t.s);r[0]>=128&&b.throwArgumentError("signature s out of range","signature",e),t.recoveryParam&&(r[0]|=128);const n=R(r);t._vs&&(T(t._vs)||b.throwArgumentError("signature invalid _vs","signature",e),t._vs=U(t._vs,32)),null==t._vs?t._vs=n:t._vs!==n&&b.throwArgumentError("signature _vs mismatch v and s","signature",e);}return t}function F(e){return R(P([(e=K(e)).r,e.s,e.recoveryParam?"0x1c":"0x1b"]))}var L=r(3550),j=r.n(L);const q="bignumber/5.5.0";var z=j().BN;const W=new v(q),G={},V=9007199254740991;let H=!1;class J{constructor(e,t){W.checkNew(new.target,J),e!==G&&W.throwError("cannot call constructor directly; use BigNumber.from",v.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"}),this._hex=t,this._isBigNumber=!0,Object.freeze(this);}fromTwos(e){return Z(X(this).fromTwos(e))}toTwos(e){return Z(X(this).toTwos(e))}abs(){return "-"===this._hex[0]?J.from(this._hex.substring(1)):this}add(e){return Z(X(this).add(X(e)))}sub(e){return Z(X(this).sub(X(e)))}div(e){return J.from(e).isZero()&&Q("division by zero","div"),Z(X(this).div(X(e)))}mul(e){return Z(X(this).mul(X(e)))}mod(e){const t=X(e);return t.isNeg()&&Q("cannot modulo negative values","mod"),Z(X(this).umod(t))}pow(e){const t=X(e);return t.isNeg()&&Q("cannot raise to negative values","pow"),Z(X(this).pow(t))}and(e){const t=X(e);return (this.isNegative()||t.isNeg())&&Q("cannot 'and' negative values","and"),Z(X(this).and(t))}or(e){const t=X(e);return (this.isNegative()||t.isNeg())&&Q("cannot 'or' negative values","or"),Z(X(this).or(t))}xor(e){const t=X(e);return (this.isNegative()||t.isNeg())&&Q("cannot 'xor' negative values","xor"),Z(X(this).xor(t))}mask(e){return (this.isNegative()||e<0)&&Q("cannot mask negative values","mask"),Z(X(this).maskn(e))}shl(e){return (this.isNegative()||e<0)&&Q("cannot shift negative values","shl"),Z(X(this).shln(e))}shr(e){return (this.isNegative()||e<0)&&Q("cannot shift negative values","shr"),Z(X(this).shrn(e))}eq(e){return X(this).eq(X(e))}lt(e){return X(this).lt(X(e))}lte(e){return X(this).lte(X(e))}gt(e){return X(this).gt(X(e))}gte(e){return X(this).gte(X(e))}isNegative(){return "-"===this._hex[0]}isZero(){return X(this).isZero()}toNumber(){try{return X(this).toNumber()}catch(e){Q("overflow","toNumber",this.toString());}return null}toBigInt(){try{return BigInt(this.toString())}catch(e){}return W.throwError("this platform does not support BigInt",v.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){return arguments.length>0&&(10===arguments[0]?H||(H=!0,W.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")):16===arguments[0]?W.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",v.errors.UNEXPECTED_ARGUMENT,{}):W.throwError("BigNumber.toString does not accept parameters",v.errors.UNEXPECTED_ARGUMENT,{})),X(this).toString(10)}toHexString(){return this._hex}toJSON(e){return {type:"BigNumber",hex:this.toHexString()}}static from(e){if(e instanceof J)return e;if("string"==typeof e)return e.match(/^-?0x[0-9a-f]+$/i)?new J(G,$(e)):e.match(/^-?[0-9]+$/)?new J(G,$(new z(e))):W.throwArgumentError("invalid BigNumber string","value",e);if("number"==typeof e)return e%1&&Q("underflow","BigNumber.from",e),(e>=V||e<=-V)&&Q("overflow","BigNumber.from",e),J.from(String(e));const t=e;if("bigint"==typeof t)return J.from(t.toString());if(k(t))return J.from(R(t));if(t)if(t.toHexString){const e=t.toHexString();if("string"==typeof e)return J.from(e)}else {let e=t._hex;if(null==e&&"BigNumber"===t.type&&(e=t.hex),"string"==typeof e&&(T(e)||"-"===e[0]&&T(e.substring(1))))return J.from(e)}return W.throwArgumentError("invalid BigNumber value","value",e)}static isBigNumber(e){return !(!e||!e._isBigNumber)}}function $(e){if("string"!=typeof e)return $(e.toString(16));if("-"===e[0])return "-"===(e=e.substring(1))[0]&&W.throwArgumentError("invalid hex","value",e),"0x00"===(e=$(e))?e:"-"+e;if("0x"!==e.substring(0,2)&&(e="0x"+e),"0x"===e)return "0x00";for(e.length%2&&(e="0x0"+e.substring(2));e.length>4&&"0x00"===e.substring(0,4);)e="0x"+e.substring(4);return e}function Z(e){return J.from($(e))}function X(e){const t=J.from(e).toHexString();return "-"===t[0]?new z("-"+t.substring(3),16):new z(t.substring(2),16)}function Q(e,t,r){const n={fault:e,operation:t};return null!=r&&(n.value=r),W.throwError(e,v.errors.NUMERIC_FAULT,n)}const Y=new v("properties/5.5.0");function ee(e,t,r){Object.defineProperty(e,t,{enumerable:!0,value:r,writable:!1});}function te(e,t){for(let r=0;r<32;r++){if(e[t])return e[t];if(!e.prototype||"object"!=typeof e.prototype)break;e=Object.getPrototypeOf(e.prototype).constructor;}return null}function re(e){return t=this,r=void 0,i=function*(){const t=Object.keys(e).map((t=>{const r=e[t];return Promise.resolve(r).then((e=>({key:t,value:e})))}));return (yield Promise.all(t)).reduce(((e,t)=>(e[t.key]=t.value,e)),{})},new((n=void 0)||(n=Promise))((function(e,o){function s(e){try{l(i.next(e));}catch(e){o(e);}}function a(e){try{l(i.throw(e));}catch(e){o(e);}}function l(t){var r;t.done?e(t.value):(r=t.value,r instanceof n?r:new n((function(e){e(r);}))).then(s,a);}l((i=i.apply(t,r||[])).next());}));var t,r,n,i;}function ne(e,t){e&&"object"==typeof e||Y.throwArgumentError("invalid object","object",e),Object.keys(e).forEach((r=>{t[r]||Y.throwArgumentError("invalid object key - "+r,"transaction:"+r,e);}));}function ie(e){const t={};for(const r in e)t[r]=e[r];return t}const oe={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function se(e){if(null==e||oe[typeof e])return !0;if(Array.isArray(e)||"object"==typeof e){if(!Object.isFrozen(e))return !1;const t=Object.keys(e);for(let r=0;r<t.length;r++){let n=null;try{n=e[t[r]];}catch(e){continue}if(!se(n))return !1}return !0}return Y.throwArgumentError("Cannot deepCopy "+typeof e,"object",e)}function ae(e){if(se(e))return e;if(Array.isArray(e))return Object.freeze(e.map((e=>le(e))));if("object"==typeof e){const t={};for(const r in e){const n=e[r];void 0!==n&&ee(t,r,le(n));}return t}return Y.throwArgumentError("Cannot deepCopy "+typeof e,"object",e)}function le(e){return ae(e)}class ue{constructor(e){for(const t in e)this[t]=le(e[t]);}}const ce="abi/5.5.0",he=new v(ce);function de(e){const t=[],r=function(e,n){if(Array.isArray(n))for(let i in n){const o=e.slice();o.push(i);try{r(o,n[i]);}catch(e){t.push({path:o,error:e});}}};return r([],e),t}class fe{constructor(e,t,r,n){this.name=e,this.type=t,this.localName=r,this.dynamic=n;}_throwError(e,t){he.throwArgumentError(e,this.localName,t);}}class pe{constructor(e){ee(this,"wordSize",e||32),this._data=[],this._dataLength=0,this._padding=new Uint8Array(e);}get data(){return O(this._data)}get length(){return this._dataLength}_writeData(e){return this._data.push(e),this._dataLength+=e.length,e.length}appendWriter(e){return this._writeData(P(e._data))}writeBytes(e){let t=A(e);const r=t.length%this.wordSize;return r&&(t=P([t,this._padding.slice(r)])),this._writeData(t)}_getValue(e){let t=A(J.from(e));return t.length>this.wordSize&&he.throwError("value out-of-bounds",v.errors.BUFFER_OVERRUN,{length:this.wordSize,offset:t.length}),t.length%this.wordSize&&(t=P([this._padding.slice(t.length%this.wordSize),t])),t}writeValue(e){return this._writeData(this._getValue(e))}writeUpdatableValue(){const e=this._data.length;return this._data.push(this._padding),this._dataLength+=this.wordSize,t=>{this._data[e]=this._getValue(t);}}}class me{constructor(e,t,r,n){ee(this,"_data",A(e)),ee(this,"wordSize",t||32),ee(this,"_coerceFunc",r),ee(this,"allowLoose",n),this._offset=0;}get data(){return R(this._data)}get consumed(){return this._offset}static coerce(e,t){let r=e.match("^u?int([0-9]+)$");return r&&parseInt(r[1])<=48&&(t=t.toNumber()),t}coerce(e,t){return this._coerceFunc?this._coerceFunc(e,t):me.coerce(e,t)}_peekBytes(e,t,r){let n=Math.ceil(t/this.wordSize)*this.wordSize;return this._offset+n>this._data.length&&(this.allowLoose&&r&&this._offset+t<=this._data.length?n=t:he.throwError("data out-of-bounds",v.errors.BUFFER_OVERRUN,{length:this._data.length,offset:this._offset+n})),this._data.slice(this._offset,this._offset+n)}subReader(e){return new me(this._data.slice(this._offset+e),this.wordSize,this._coerceFunc,this.allowLoose)}readBytes(e,t){let r=this._peekBytes(0,e,!!t);return this._offset+=r.length,r.slice(0,e)}readValue(){return J.from(this.readBytes(this.wordSize))}}var ye=r(1094),ge=r.n(ye);function ve(e){return "0x"+ge().keccak_256(A(e))}const be=new v("rlp/5.5.0");function we(e){const t=[];for(;e;)t.unshift(255&e),e>>=8;return t}function _e(e,t,r){let n=0;for(let i=0;i<r;i++)n=256*n+e[t+i];return n}function Se(e){if(Array.isArray(e)){let t=[];if(e.forEach((function(e){t=t.concat(Se(e));})),t.length<=55)return t.unshift(192+t.length),t;const r=we(t.length);return r.unshift(247+r.length),r.concat(t)}S(e)||be.throwArgumentError("RLP object must be BytesLike","object",e);const t=Array.prototype.slice.call(A(e));if(1===t.length&&t[0]<=127)return t;if(t.length<=55)return t.unshift(128+t.length),t;const r=we(t.length);return r.unshift(183+r.length),r.concat(t)}function Ee(e){return R(Se(e))}function ke(e,t,r,n){const i=[];for(;r<t+1+n;){const o=Ae(e,r);i.push(o.result),(r+=o.consumed)>t+1+n&&be.throwError("child data too short",v.errors.BUFFER_OVERRUN,{});}return {consumed:1+n,result:i}}function Ae(e,t){if(0===e.length&&be.throwError("data too short",v.errors.BUFFER_OVERRUN,{}),e[t]>=248){const r=e[t]-247;t+1+r>e.length&&be.throwError("data short segment too short",v.errors.BUFFER_OVERRUN,{});const n=_e(e,t+1,r);return t+1+r+n>e.length&&be.throwError("data long segment too short",v.errors.BUFFER_OVERRUN,{}),ke(e,t,t+1+r,r+n)}if(e[t]>=192){const r=e[t]-192;return t+1+r>e.length&&be.throwError("data array too short",v.errors.BUFFER_OVERRUN,{}),ke(e,t,t+1,r)}if(e[t]>=184){const r=e[t]-183;t+1+r>e.length&&be.throwError("data array too short",v.errors.BUFFER_OVERRUN,{});const n=_e(e,t+1,r);return t+1+r+n>e.length&&be.throwError("data array too short",v.errors.BUFFER_OVERRUN,{}),{consumed:1+r+n,result:R(e.slice(t+1+r,t+1+r+n))}}if(e[t]>=128){const r=e[t]-128;return t+1+r>e.length&&be.throwError("data too short",v.errors.BUFFER_OVERRUN,{}),{consumed:1+r,result:R(e.slice(t+1,t+1+r))}}return {consumed:1,result:R(e[t])}}function Pe(e){const t=A(e),r=Ae(t,0);return r.consumed!==t.length&&be.throwArgumentError("invalid rlp data","data",e),r.result}const xe=new v("address/5.5.0");function Ce(e){T(e,20)||xe.throwArgumentError("invalid address","address",e);const t=(e=e.toLowerCase()).substring(2).split(""),r=new Uint8Array(40);for(let e=0;e<40;e++)r[e]=t[e].charCodeAt(0);const n=A(ve(r));for(let e=0;e<40;e+=2)n[e>>1]>>4>=8&&(t[e]=t[e].toUpperCase()),(15&n[e>>1])>=8&&(t[e+1]=t[e+1].toUpperCase());return "0x"+t.join("")}const Te={};for(let e=0;e<10;e++)Te[String(e)]=String(e);for(let e=0;e<26;e++)Te[String.fromCharCode(65+e)]=String(10+e);const Ne=Math.floor((Re=9007199254740991,Math.log10?Math.log10(Re):Math.log(Re)/Math.LN10));var Re;function Be(e){let t=(e=(e=e.toUpperCase()).substring(4)+e.substring(0,2)+"00").split("").map((e=>Te[e])).join("");for(;t.length>=Ne;){let e=t.substring(0,Ne);t=parseInt(e,10)%97+t.substring(e.length);}let r=String(98-parseInt(t,10)%97);for(;r.length<2;)r="0"+r;return r}function Ie(e){let t=null;if("string"!=typeof e&&xe.throwArgumentError("invalid address","address",e),e.match(/^(0x)?[0-9a-fA-F]{40}$/))"0x"!==e.substring(0,2)&&(e="0x"+e),t=Ce(e),e.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&t!==e&&xe.throwArgumentError("bad address checksum","address",e);else if(e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){for(e.substring(2,4)!==Be(e)&&xe.throwArgumentError("bad icap checksum","address",e),r=e.substring(4),t=new z(r,36).toString(16);t.length<40;)t="0"+t;t=Ce("0x"+t);}else xe.throwArgumentError("invalid address","address",e);var r;return t}function Oe(e){try{return Ie(e),!0}catch(e){}return !1}function Me(e){let t=(r=Ie(e).substring(2),new z(r,16).toString(36)).toUpperCase();for(var r;t.length<30;)t="0"+t;return "XE"+Be("XE00"+t)+t}function De(e){let t=null;try{t=Ie(e.from);}catch(t){xe.throwArgumentError("missing from address","transaction",e);}return Ie(I(ve(Ee([t,x(A(J.from(e.nonce).toHexString()))])),12))}function Ue(e,t,r){return 32!==B(t)&&xe.throwArgumentError("salt must be 32 bytes","salt",t),32!==B(r)&&xe.throwArgumentError("initCodeHash must be 32 bytes","initCodeHash",r),Ie(I(ve(P(["0xff",Ie(e),t,r])),12))}const Ke=new v("strings/5.5.0");var Fe,Le;function je(e,t,r,n,i){if(e===Le.BAD_PREFIX||e===Le.UNEXPECTED_CONTINUE){let e=0;for(let n=t+1;n<r.length&&r[n]>>6==2;n++)e++;return e}return e===Le.OVERRUN?r.length-t-1:0}!function(e){e.current="",e.NFC="NFC",e.NFD="NFD",e.NFKC="NFKC",e.NFKD="NFKD";}(Fe||(Fe={})),function(e){e.UNEXPECTED_CONTINUE="unexpected continuation byte",e.BAD_PREFIX="bad codepoint prefix",e.OVERRUN="string overrun",e.MISSING_CONTINUE="missing continuation byte",e.OUT_OF_RANGE="out of UTF-8 range",e.UTF16_SURROGATE="UTF-16 surrogate",e.OVERLONG="overlong representation";}(Le||(Le={}));const qe=Object.freeze({error:function(e,t,r,n,i){return Ke.throwArgumentError(`invalid codepoint at offset ${t}; ${e}`,"bytes",r)},ignore:je,replace:function(e,t,r,n,i){return e===Le.OVERLONG?(n.push(i),0):(n.push(65533),je(e,t,r))}});function ze(e,t){null==t&&(t=qe.error),e=A(e);const r=[];let n=0;for(;n<e.length;){const i=e[n++];if(i>>7==0){r.push(i);continue}let o=null,s=null;if(192==(224&i))o=1,s=127;else if(224==(240&i))o=2,s=2047;else {if(240!=(248&i)){n+=t(128==(192&i)?Le.UNEXPECTED_CONTINUE:Le.BAD_PREFIX,n-1,e,r);continue}o=3,s=65535;}if(n-1+o>=e.length){n+=t(Le.OVERRUN,n-1,e,r);continue}let a=i&(1<<8-o-1)-1;for(let i=0;i<o;i++){let i=e[n];if(128!=(192&i)){n+=t(Le.MISSING_CONTINUE,n,e,r),a=null;break}a=a<<6|63&i,n++;}null!==a&&(a>1114111?n+=t(Le.OUT_OF_RANGE,n-1-o,e,r,a):a>=55296&&a<=57343?n+=t(Le.UTF16_SURROGATE,n-1-o,e,r,a):a<=s?n+=t(Le.OVERLONG,n-1-o,e,r,a):r.push(a));}return r}function We(e,t=Fe.current){t!=Fe.current&&(Ke.checkNormalize(),e=e.normalize(t));let r=[];for(let t=0;t<e.length;t++){const n=e.charCodeAt(t);if(n<128)r.push(n);else if(n<2048)r.push(n>>6|192),r.push(63&n|128);else if(55296==(64512&n)){t++;const i=e.charCodeAt(t);if(t>=e.length||56320!=(64512&i))throw new Error("invalid utf-8 string");const o=65536+((1023&n)<<10)+(1023&i);r.push(o>>18|240),r.push(o>>12&63|128),r.push(o>>6&63|128),r.push(63&o|128);}else r.push(n>>12|224),r.push(n>>6&63|128),r.push(63&n|128);}return A(r)}function Ge(e){const t="0000"+e.toString(16);return "\\u"+t.substring(t.length-4)}function Ve(e,t){return '"'+ze(e,t).map((e=>{if(e<256){switch(e){case 8:return "\\b";case 9:return "\\t";case 10:return "\\n";case 13:return "\\r";case 34:return '\\"';case 92:return "\\\\"}if(e>=32&&e<127)return String.fromCharCode(e)}return e<=65535?Ge(e):Ge(55296+((e-=65536)>>10&1023))+Ge(56320+(1023&e))})).join("")+'"'}function He(e){return e.map((e=>e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(55296+(e>>10&1023),56320+(1023&e))))).join("")}function Je(e,t){return He(ze(e,t))}function $e(e,t=Fe.current){return ze(We(e,t))}function Ze(e){return ve(We(e))}class Xe extends fe{constructor(e){super("address","address",e,!1);}defaultValue(){return "0x0000000000000000000000000000000000000000"}encode(e,t){try{t=Ie(t);}catch(e){this._throwError(e.message,t);}return e.writeValue(t)}decode(e){return Ie(U(e.readValue().toHexString(),20))}}class Qe extends fe{constructor(e){super(e.name,e.type,void 0,e.dynamic),this.coder=e;}defaultValue(){return this.coder.defaultValue()}encode(e,t){return this.coder.encode(e,t)}decode(e){return this.coder.decode(e)}}const Ye=new v(ce);function et(e,t,r){let n=null;if(Array.isArray(r))n=r;else if(r&&"object"==typeof r){let e={};n=t.map((t=>{const n=t.localName;return n||Ye.throwError("cannot encode object for signature with missing names",v.errors.INVALID_ARGUMENT,{argument:"values",coder:t,value:r}),e[n]&&Ye.throwError("cannot encode object for signature with duplicate names",v.errors.INVALID_ARGUMENT,{argument:"values",coder:t,value:r}),e[n]=!0,r[n]}));}else Ye.throwArgumentError("invalid tuple value","tuple",r);t.length!==n.length&&Ye.throwArgumentError("types/value length mismatch","tuple",r);let i=new pe(e.wordSize),o=new pe(e.wordSize),s=[];t.forEach(((e,t)=>{let r=n[t];if(e.dynamic){let t=o.length;e.encode(o,r);let n=i.writeUpdatableValue();s.push((e=>{n(e+t);}));}else e.encode(i,r);})),s.forEach((e=>{e(i.length);}));let a=e.appendWriter(i);return a+=e.appendWriter(o),a}function tt(e,t){let r=[],n=e.subReader(0);t.forEach((t=>{let i=null;if(t.dynamic){let r=e.readValue(),o=n.subReader(r.toNumber());try{i=t.decode(o);}catch(e){if(e.code===v.errors.BUFFER_OVERRUN)throw e;i=e,i.baseType=t.name,i.name=t.localName,i.type=t.type;}}else try{i=t.decode(e);}catch(e){if(e.code===v.errors.BUFFER_OVERRUN)throw e;i=e,i.baseType=t.name,i.name=t.localName,i.type=t.type;}null!=i&&r.push(i);}));const i=t.reduce(((e,t)=>{const r=t.localName;return r&&(e[r]||(e[r]=0),e[r]++),e}),{});t.forEach(((e,t)=>{let n=e.localName;if(!n||1!==i[n])return;if("length"===n&&(n="_length"),null!=r[n])return;const o=r[t];o instanceof Error?Object.defineProperty(r,n,{enumerable:!0,get:()=>{throw o}}):r[n]=o;}));for(let e=0;e<r.length;e++){const t=r[e];t instanceof Error&&Object.defineProperty(r,e,{enumerable:!0,get:()=>{throw t}});}return Object.freeze(r)}class rt extends fe{constructor(e,t,r){super("array",e.type+"["+(t>=0?t:"")+"]",r,-1===t||e.dynamic),this.coder=e,this.length=t;}defaultValue(){const e=this.coder.defaultValue(),t=[];for(let r=0;r<this.length;r++)t.push(e);return t}encode(e,t){Array.isArray(t)||this._throwError("expected array value",t);let r=this.length;-1===r&&(r=t.length,e.writeValue(t.length)),Ye.checkArgumentCount(t.length,r,"coder array"+(this.localName?" "+this.localName:""));let n=[];for(let e=0;e<t.length;e++)n.push(this.coder);return et(e,n,t)}decode(e){let t=this.length;-1===t&&(t=e.readValue().toNumber(),32*t>e._data.length&&Ye.throwError("insufficient data length",v.errors.BUFFER_OVERRUN,{length:e._data.length,count:t}));let r=[];for(let e=0;e<t;e++)r.push(new Qe(this.coder));return e.coerce(this.name,tt(e,r))}}class nt extends fe{constructor(e){super("bool","bool",e,!1);}defaultValue(){return !1}encode(e,t){return e.writeValue(t?1:0)}decode(e){return e.coerce(this.type,!e.readValue().isZero())}}class it extends fe{constructor(e,t){super(e,e,t,!0);}defaultValue(){return "0x"}encode(e,t){t=A(t);let r=e.writeValue(t.length);return r+=e.writeBytes(t),r}decode(e){return e.readBytes(e.readValue().toNumber(),!0)}}class ot extends it{constructor(e){super("bytes",e);}decode(e){return e.coerce(this.name,R(super.decode(e)))}}class st extends fe{constructor(e,t){let r="bytes"+String(e);super(r,r,t,!1),this.size=e;}defaultValue(){return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0,2+2*this.size)}encode(e,t){let r=A(t);return r.length!==this.size&&this._throwError("incorrect data length",t),e.writeBytes(r)}decode(e){return e.coerce(this.name,R(e.readBytes(this.size)))}}class at extends fe{constructor(e){super("null","",e,!1);}defaultValue(){return null}encode(e,t){return null!=t&&this._throwError("not null",t),e.writeBytes([])}decode(e){return e.readBytes(0),e.coerce(this.name,null)}}const lt=J.from(-1),ut=J.from(0),ct=J.from(1),ht=J.from(2),dt=J.from("1000000000000000000"),ft=J.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),pt=J.from("-0x8000000000000000000000000000000000000000000000000000000000000000"),mt=J.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");class yt extends fe{constructor(e,t,r){const n=(t?"int":"uint")+8*e;super(n,n,r,!1),this.size=e,this.signed=t;}defaultValue(){return 0}encode(e,t){let r=J.from(t),n=ft.mask(8*e.wordSize);if(this.signed){let e=n.mask(8*this.size-1);(r.gt(e)||r.lt(e.add(ct).mul(lt)))&&this._throwError("value out-of-bounds",t);}else (r.lt(ut)||r.gt(n.mask(8*this.size)))&&this._throwError("value out-of-bounds",t);return r=r.toTwos(8*this.size).mask(8*this.size),this.signed&&(r=r.fromTwos(8*this.size).toTwos(8*e.wordSize)),e.writeValue(r)}decode(e){let t=e.readValue().mask(8*this.size);return this.signed&&(t=t.fromTwos(8*this.size)),e.coerce(this.name,t)}}class gt extends it{constructor(e){super("string",e);}defaultValue(){return ""}encode(e,t){return super.encode(e,We(t))}decode(e){return Je(super.decode(e))}}class vt extends fe{constructor(e,t){let r=!1;const n=[];e.forEach((e=>{e.dynamic&&(r=!0),n.push(e.type);})),super("tuple","tuple("+n.join(",")+")",t,r),this.coders=e;}defaultValue(){const e=[];this.coders.forEach((t=>{e.push(t.defaultValue());}));const t=this.coders.reduce(((e,t)=>{const r=t.localName;return r&&(e[r]||(e[r]=0),e[r]++),e}),{});return this.coders.forEach(((r,n)=>{let i=r.localName;i&&1===t[i]&&("length"===i&&(i="_length"),null==e[i]&&(e[i]=e[n]));})),Object.freeze(e)}encode(e,t){return et(e,this.coders,t)}decode(e){return e.coerce(this.name,tt(e,this.coders))}}const bt=new v(ce),wt={};let _t={calldata:!0,memory:!0,storage:!0},St={calldata:!0,memory:!0};function Et(e,t){if("bytes"===e||"string"===e){if(_t[t])return !0}else if("address"===e){if("payable"===t)return !0}else if((e.indexOf("[")>=0||"tuple"===e)&&St[t])return !0;return (_t[t]||"payable"===t)&&bt.throwArgumentError("invalid modifier","name",t),!1}function kt(e,t){for(let r in t)ee(e,r,t[r]);}const At=Object.freeze({sighash:"sighash",minimal:"minimal",full:"full",json:"json"}),Pt=new RegExp(/^(.*)\[([0-9]*)\]$/);class xt{constructor(e,t){e!==wt&&bt.throwError("use fromString",v.errors.UNSUPPORTED_OPERATION,{operation:"new ParamType()"}),kt(this,t);let r=this.type.match(Pt);kt(this,r?{arrayLength:parseInt(r[2]||"-1"),arrayChildren:xt.fromObject({type:r[1],components:this.components}),baseType:"array"}:{arrayLength:null,arrayChildren:null,baseType:null!=this.components?"tuple":this.type}),this._isParamType=!0,Object.freeze(this);}format(e){if(e||(e=At.sighash),At[e]||bt.throwArgumentError("invalid format type","format",e),e===At.json){let t={type:"tuple"===this.baseType?"tuple":this.type,name:this.name||void 0};return "boolean"==typeof this.indexed&&(t.indexed=this.indexed),this.components&&(t.components=this.components.map((t=>JSON.parse(t.format(e))))),JSON.stringify(t)}let t="";return "array"===this.baseType?(t+=this.arrayChildren.format(e),t+="["+(this.arrayLength<0?"":String(this.arrayLength))+"]"):"tuple"===this.baseType?(e!==At.sighash&&(t+=this.type),t+="("+this.components.map((t=>t.format(e))).join(e===At.full?", ":",")+")"):t+=this.type,e!==At.sighash&&(!0===this.indexed&&(t+=" indexed"),e===At.full&&this.name&&(t+=" "+this.name)),t}static from(e,t){return "string"==typeof e?xt.fromString(e,t):xt.fromObject(e)}static fromObject(e){return xt.isParamType(e)?e:new xt(wt,{name:e.name||null,type:Kt(e.type),indexed:null==e.indexed?null:!!e.indexed,components:e.components?e.components.map(xt.fromObject):null})}static fromString(e,t){return r=function(e,t){let r=e;function n(t){bt.throwArgumentError(`unexpected character at position ${t}`,"param",e);}function i(e){let r={type:"",name:"",parent:e,state:{allowType:!0}};return t&&(r.indexed=!1),r}e=e.replace(/\s/g," ");let o={type:"",name:"",state:{allowType:!0}},s=o;for(let r=0;r<e.length;r++){let o=e[r];switch(o){case"(":s.state.allowType&&""===s.type?s.type="tuple":s.state.allowParams||n(r),s.state.allowType=!1,s.type=Kt(s.type),s.components=[i(s)],s=s.components[0];break;case")":delete s.state,"indexed"===s.name&&(t||n(r),s.indexed=!0,s.name=""),Et(s.type,s.name)&&(s.name=""),s.type=Kt(s.type);let e=s;s=s.parent,s||n(r),delete e.parent,s.state.allowParams=!1,s.state.allowName=!0,s.state.allowArray=!0;break;case",":delete s.state,"indexed"===s.name&&(t||n(r),s.indexed=!0,s.name=""),Et(s.type,s.name)&&(s.name=""),s.type=Kt(s.type);let a=i(s.parent);s.parent.components.push(a),delete s.parent,s=a;break;case" ":s.state.allowType&&""!==s.type&&(s.type=Kt(s.type),delete s.state.allowType,s.state.allowName=!0,s.state.allowParams=!0),s.state.allowName&&""!==s.name&&("indexed"===s.name?(t||n(r),s.indexed&&n(r),s.indexed=!0,s.name=""):Et(s.type,s.name)?s.name="":s.state.allowName=!1);break;case"[":s.state.allowArray||n(r),s.type+=o,s.state.allowArray=!1,s.state.allowName=!1,s.state.readArray=!0;break;case"]":s.state.readArray||n(r),s.type+=o,s.state.readArray=!1,s.state.allowArray=!0,s.state.allowName=!0;break;default:s.state.allowType?(s.type+=o,s.state.allowParams=!0,s.state.allowArray=!0):s.state.allowName?(s.name+=o,delete s.state.allowArray):s.state.readArray?s.type+=o:n(r);}}return s.parent&&bt.throwArgumentError("unexpected eof","param",e),delete o.state,"indexed"===s.name?(t||n(r.length-7),s.indexed&&n(r.length-7),s.indexed=!0,s.name=""):Et(s.type,s.name)&&(s.name=""),o.type=Kt(o.type),o}(e,!!t),xt.fromObject({name:r.name,type:r.type,indexed:r.indexed,components:r.components});var r;}static isParamType(e){return !(null==e||!e._isParamType)}}function Ct(e,t){return function(e){e=e.trim();let t=[],r="",n=0;for(let i=0;i<e.length;i++){let o=e[i];","===o&&0===n?(t.push(r),r=""):(r+=o,"("===o?n++:")"===o&&(n--,-1===n&&bt.throwArgumentError("unbalanced parenthesis","value",e)));}return r&&t.push(r),t}(e).map((e=>xt.fromString(e,t)))}class Tt{constructor(e,t){e!==wt&&bt.throwError("use a static from method",v.errors.UNSUPPORTED_OPERATION,{operation:"new Fragment()"}),kt(this,t),this._isFragment=!0,Object.freeze(this);}static from(e){return Tt.isFragment(e)?e:"string"==typeof e?Tt.fromString(e):Tt.fromObject(e)}static fromObject(e){if(Tt.isFragment(e))return e;switch(e.type){case"function":return Mt.fromObject(e);case"event":return Nt.fromObject(e);case"constructor":return Ot.fromObject(e);case"error":return Ut.fromObject(e);case"fallback":case"receive":return null}return bt.throwArgumentError("invalid fragment object","value",e)}static fromString(e){return "event"===(e=(e=(e=e.replace(/\s/g," ")).replace(/\(/g," (").replace(/\)/g,") ").replace(/\s+/g," ")).trim()).split(" ")[0]?Nt.fromString(e.substring(5).trim()):"function"===e.split(" ")[0]?Mt.fromString(e.substring(8).trim()):"constructor"===e.split("(")[0].trim()?Ot.fromString(e.trim()):"error"===e.split(" ")[0]?Ut.fromString(e.substring(5).trim()):bt.throwArgumentError("unsupported fragment","value",e)}static isFragment(e){return !(!e||!e._isFragment)}}class Nt extends Tt{format(e){if(e||(e=At.sighash),At[e]||bt.throwArgumentError("invalid format type","format",e),e===At.json)return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map((t=>JSON.parse(t.format(e))))});let t="";return e!==At.sighash&&(t+="event "),t+=this.name+"("+this.inputs.map((t=>t.format(e))).join(e===At.full?", ":",")+") ",e!==At.sighash&&this.anonymous&&(t+="anonymous "),t.trim()}static from(e){return "string"==typeof e?Nt.fromString(e):Nt.fromObject(e)}static fromObject(e){if(Nt.isEventFragment(e))return e;"event"!==e.type&&bt.throwArgumentError("invalid event object","value",e);const t={name:Lt(e.name),anonymous:e.anonymous,inputs:e.inputs?e.inputs.map(xt.fromObject):[],type:"event"};return new Nt(wt,t)}static fromString(e){let t=e.match(jt);t||bt.throwArgumentError("invalid event string","value",e);let r=!1;return t[3].split(" ").forEach((e=>{switch(e.trim()){case"anonymous":r=!0;break;case"":break;default:bt.warn("unknown modifier: "+e);}})),Nt.fromObject({name:t[1].trim(),anonymous:r,inputs:Ct(t[2],!0),type:"event"})}static isEventFragment(e){return e&&e._isFragment&&"event"===e.type}}function Rt(e,t){t.gas=null;let r=e.split("@");return 1!==r.length?(r.length>2&&bt.throwArgumentError("invalid human-readable ABI signature","value",e),r[1].match(/^[0-9]+$/)||bt.throwArgumentError("invalid human-readable ABI signature gas","value",e),t.gas=J.from(r[1]),r[0]):e}function Bt(e,t){t.constant=!1,t.payable=!1,t.stateMutability="nonpayable",e.split(" ").forEach((e=>{switch(e.trim()){case"constant":t.constant=!0;break;case"payable":t.payable=!0,t.stateMutability="payable";break;case"nonpayable":t.payable=!1,t.stateMutability="nonpayable";break;case"pure":t.constant=!0,t.stateMutability="pure";break;case"view":t.constant=!0,t.stateMutability="view";break;case"external":case"public":case"":break;default:console.log("unknown modifier: "+e);}}));}function It(e){let t={constant:!1,payable:!0,stateMutability:"payable"};return null!=e.stateMutability?(t.stateMutability=e.stateMutability,t.constant="view"===t.stateMutability||"pure"===t.stateMutability,null!=e.constant&&!!e.constant!==t.constant&&bt.throwArgumentError("cannot have constant function with mutability "+t.stateMutability,"value",e),t.payable="payable"===t.stateMutability,null!=e.payable&&!!e.payable!==t.payable&&bt.throwArgumentError("cannot have payable function with mutability "+t.stateMutability,"value",e)):null!=e.payable?(t.payable=!!e.payable,null!=e.constant||t.payable||"constructor"===e.type||bt.throwArgumentError("unable to determine stateMutability","value",e),t.constant=!!e.constant,t.constant?t.stateMutability="view":t.stateMutability=t.payable?"payable":"nonpayable",t.payable&&t.constant&&bt.throwArgumentError("cannot have constant payable function","value",e)):null!=e.constant?(t.constant=!!e.constant,t.payable=!t.constant,t.stateMutability=t.constant?"view":"payable"):"constructor"!==e.type&&bt.throwArgumentError("unable to determine stateMutability","value",e),t}class Ot extends Tt{format(e){if(e||(e=At.sighash),At[e]||bt.throwArgumentError("invalid format type","format",e),e===At.json)return JSON.stringify({type:"constructor",stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map((t=>JSON.parse(t.format(e))))});e===At.sighash&&bt.throwError("cannot format a constructor for sighash",v.errors.UNSUPPORTED_OPERATION,{operation:"format(sighash)"});let t="constructor("+this.inputs.map((t=>t.format(e))).join(e===At.full?", ":",")+") ";return this.stateMutability&&"nonpayable"!==this.stateMutability&&(t+=this.stateMutability+" "),t.trim()}static from(e){return "string"==typeof e?Ot.fromString(e):Ot.fromObject(e)}static fromObject(e){if(Ot.isConstructorFragment(e))return e;"constructor"!==e.type&&bt.throwArgumentError("invalid constructor object","value",e);let t=It(e);t.constant&&bt.throwArgumentError("constructor cannot be constant","value",e);const r={name:null,type:e.type,inputs:e.inputs?e.inputs.map(xt.fromObject):[],payable:t.payable,stateMutability:t.stateMutability,gas:e.gas?J.from(e.gas):null};return new Ot(wt,r)}static fromString(e){let t={type:"constructor"},r=(e=Rt(e,t)).match(jt);return r&&"constructor"===r[1].trim()||bt.throwArgumentError("invalid constructor string","value",e),t.inputs=Ct(r[2].trim(),!1),Bt(r[3].trim(),t),Ot.fromObject(t)}static isConstructorFragment(e){return e&&e._isFragment&&"constructor"===e.type}}class Mt extends Ot{format(e){if(e||(e=At.sighash),At[e]||bt.throwArgumentError("invalid format type","format",e),e===At.json)return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map((t=>JSON.parse(t.format(e)))),outputs:this.outputs.map((t=>JSON.parse(t.format(e))))});let t="";return e!==At.sighash&&(t+="function "),t+=this.name+"("+this.inputs.map((t=>t.format(e))).join(e===At.full?", ":",")+") ",e!==At.sighash&&(this.stateMutability?"nonpayable"!==this.stateMutability&&(t+=this.stateMutability+" "):this.constant&&(t+="view "),this.outputs&&this.outputs.length&&(t+="returns ("+this.outputs.map((t=>t.format(e))).join(", ")+") "),null!=this.gas&&(t+="@"+this.gas.toString()+" ")),t.trim()}static from(e){return "string"==typeof e?Mt.fromString(e):Mt.fromObject(e)}static fromObject(e){if(Mt.isFunctionFragment(e))return e;"function"!==e.type&&bt.throwArgumentError("invalid function object","value",e);let t=It(e);const r={type:e.type,name:Lt(e.name),constant:t.constant,inputs:e.inputs?e.inputs.map(xt.fromObject):[],outputs:e.outputs?e.outputs.map(xt.fromObject):[],payable:t.payable,stateMutability:t.stateMutability,gas:e.gas?J.from(e.gas):null};return new Mt(wt,r)}static fromString(e){let t={type:"function"},r=(e=Rt(e,t)).split(" returns ");r.length>2&&bt.throwArgumentError("invalid function string","value",e);let n=r[0].match(jt);if(n||bt.throwArgumentError("invalid function signature","value",e),t.name=n[1].trim(),t.name&&Lt(t.name),t.inputs=Ct(n[2],!1),Bt(n[3].trim(),t),r.length>1){let n=r[1].match(jt);""==n[1].trim()&&""==n[3].trim()||bt.throwArgumentError("unexpected tokens","value",e),t.outputs=Ct(n[2],!1);}else t.outputs=[];return Mt.fromObject(t)}static isFunctionFragment(e){return e&&e._isFragment&&"function"===e.type}}function Dt(e){const t=e.format();return "Error(string)"!==t&&"Panic(uint256)"!==t||bt.throwArgumentError(`cannot specify user defined ${t} error`,"fragment",e),e}class Ut extends Tt{format(e){if(e||(e=At.sighash),At[e]||bt.throwArgumentError("invalid format type","format",e),e===At.json)return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map((t=>JSON.parse(t.format(e))))});let t="";return e!==At.sighash&&(t+="error "),t+=this.name+"("+this.inputs.map((t=>t.format(e))).join(e===At.full?", ":",")+") ",t.trim()}static from(e){return "string"==typeof e?Ut.fromString(e):Ut.fromObject(e)}static fromObject(e){if(Ut.isErrorFragment(e))return e;"error"!==e.type&&bt.throwArgumentError("invalid error object","value",e);const t={type:e.type,name:Lt(e.name),inputs:e.inputs?e.inputs.map(xt.fromObject):[]};return Dt(new Ut(wt,t))}static fromString(e){let t={type:"error"},r=e.match(jt);return r||bt.throwArgumentError("invalid error signature","value",e),t.name=r[1].trim(),t.name&&Lt(t.name),t.inputs=Ct(r[2],!1),Dt(Ut.fromObject(t))}static isErrorFragment(e){return e&&e._isFragment&&"error"===e.type}}function Kt(e){return e.match(/^uint($|[^1-9])/)?e="uint256"+e.substring(4):e.match(/^int($|[^1-9])/)&&(e="int256"+e.substring(3)),e}const Ft=new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");function Lt(e){return e&&e.match(Ft)||bt.throwArgumentError(`invalid identifier "${e}"`,"value",e),e}const jt=new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$"),qt=new v(ce),zt=new RegExp(/^bytes([0-9]*)$/),Wt=new RegExp(/^(u?int)([0-9]*)$/);class Gt{constructor(e){qt.checkNew(new.target,Gt),ee(this,"coerceFunc",e||null);}_getCoder(e){switch(e.baseType){case"address":return new Xe(e.name);case"bool":return new nt(e.name);case"string":return new gt(e.name);case"bytes":return new ot(e.name);case"array":return new rt(this._getCoder(e.arrayChildren),e.arrayLength,e.name);case"tuple":return new vt((e.components||[]).map((e=>this._getCoder(e))),e.name);case"":return new at(e.name)}let t=e.type.match(Wt);if(t){let r=parseInt(t[2]||"256");return (0===r||r>256||r%8!=0)&&qt.throwArgumentError("invalid "+t[1]+" bit length","param",e),new yt(r/8,"int"===t[1],e.name)}if(t=e.type.match(zt),t){let r=parseInt(t[1]);return (0===r||r>32)&&qt.throwArgumentError("invalid bytes length","param",e),new st(r,e.name)}return qt.throwArgumentError("invalid type","type",e.type)}_getWordSize(){return 32}_getReader(e,t){return new me(e,this._getWordSize(),this.coerceFunc,t)}_getWriter(){return new pe(this._getWordSize())}getDefaultValue(e){const t=e.map((e=>this._getCoder(xt.from(e))));return new vt(t,"_").defaultValue()}encode(e,t){e.length!==t.length&&qt.throwError("types/values length mismatch",v.errors.INVALID_ARGUMENT,{count:{types:e.length,values:t.length},value:{types:e,values:t}});const r=e.map((e=>this._getCoder(xt.from(e)))),n=new vt(r,"_"),i=this._getWriter();return n.encode(i,t),i.data}decode(e,t,r){const n=e.map((e=>this._getCoder(xt.from(e))));return new vt(n,"_").decode(this._getReader(A(t),r))}}const Vt=new Gt,Ht=new v(ce);class Jt extends ue{}class $t extends ue{}class Zt extends ue{}class Xt extends ue{static isIndexed(e){return !(!e||!e._isIndexed)}}const Qt={"0x08c379a0":{signature:"Error(string)",name:"Error",inputs:["string"],reason:!0},"0x4e487b71":{signature:"Panic(uint256)",name:"Panic",inputs:["uint256"]}};function Yt(e,t){const r=new Error(`deferred error during ABI decoding triggered accessing ${e}`);return r.error=t,r}class er{constructor(e){Ht.checkNew(new.target,er);let t=[];t="string"==typeof e?JSON.parse(e):e,ee(this,"fragments",t.map((e=>Tt.from(e))).filter((e=>null!=e))),ee(this,"_abiCoder",te(new.target,"getAbiCoder")()),ee(this,"functions",{}),ee(this,"errors",{}),ee(this,"events",{}),ee(this,"structs",{}),this.fragments.forEach((e=>{let t=null;switch(e.type){case"constructor":return this.deploy?void Ht.warn("duplicate definition - constructor"):void ee(this,"deploy",e);case"function":t=this.functions;break;case"event":t=this.events;break;case"error":t=this.errors;break;default:return}let r=e.format();t[r]?Ht.warn("duplicate definition - "+r):t[r]=e;})),this.deploy||ee(this,"deploy",Ot.from({payable:!1,type:"constructor"})),ee(this,"_isInterface",!0);}format(e){e||(e=At.full),e===At.sighash&&Ht.throwArgumentError("interface does not support formatting sighash","format",e);const t=this.fragments.map((t=>t.format(e)));return e===At.json?JSON.stringify(t.map((e=>JSON.parse(e)))):t}static getAbiCoder(){return Vt}static getAddress(e){return Ie(e)}static getSighash(e){return I(Ze(e.format()),0,4)}static getEventTopic(e){return Ze(e.format())}getFunction(e){if(T(e)){for(const t in this.functions)if(e===this.getSighash(t))return this.functions[t];Ht.throwArgumentError("no matching function","sighash",e);}if(-1===e.indexOf("(")){const t=e.trim(),r=Object.keys(this.functions).filter((e=>e.split("(")[0]===t));return 0===r.length?Ht.throwArgumentError("no matching function","name",t):r.length>1&&Ht.throwArgumentError("multiple matching functions","name",t),this.functions[r[0]]}const t=this.functions[Mt.fromString(e).format()];return t||Ht.throwArgumentError("no matching function","signature",e),t}getEvent(e){if(T(e)){const t=e.toLowerCase();for(const e in this.events)if(t===this.getEventTopic(e))return this.events[e];Ht.throwArgumentError("no matching event","topichash",t);}if(-1===e.indexOf("(")){const t=e.trim(),r=Object.keys(this.events).filter((e=>e.split("(")[0]===t));return 0===r.length?Ht.throwArgumentError("no matching event","name",t):r.length>1&&Ht.throwArgumentError("multiple matching events","name",t),this.events[r[0]]}const t=this.events[Nt.fromString(e).format()];return t||Ht.throwArgumentError("no matching event","signature",e),t}getError(e){if(T(e)){const t=te(this.constructor,"getSighash");for(const r in this.errors)if(e===t(this.errors[r]))return this.errors[r];Ht.throwArgumentError("no matching error","sighash",e);}if(-1===e.indexOf("(")){const t=e.trim(),r=Object.keys(this.errors).filter((e=>e.split("(")[0]===t));return 0===r.length?Ht.throwArgumentError("no matching error","name",t):r.length>1&&Ht.throwArgumentError("multiple matching errors","name",t),this.errors[r[0]]}const t=this.errors[Mt.fromString(e).format()];return t||Ht.throwArgumentError("no matching error","signature",e),t}getSighash(e){if("string"==typeof e)try{e=this.getFunction(e);}catch(t){try{e=this.getError(e);}catch(e){throw t}}return te(this.constructor,"getSighash")(e)}getEventTopic(e){return "string"==typeof e&&(e=this.getEvent(e)),te(this.constructor,"getEventTopic")(e)}_decodeParams(e,t){return this._abiCoder.decode(e,t)}_encodeParams(e,t){return this._abiCoder.encode(e,t)}encodeDeploy(e){return this._encodeParams(this.deploy.inputs,e||[])}decodeErrorResult(e,t){"string"==typeof e&&(e=this.getError(e));const r=A(t);return R(r.slice(0,4))!==this.getSighash(e)&&Ht.throwArgumentError(`data signature does not match error ${e.name}.`,"data",R(r)),this._decodeParams(e.inputs,r.slice(4))}encodeErrorResult(e,t){return "string"==typeof e&&(e=this.getError(e)),R(P([this.getSighash(e),this._encodeParams(e.inputs,t||[])]))}decodeFunctionData(e,t){"string"==typeof e&&(e=this.getFunction(e));const r=A(t);return R(r.slice(0,4))!==this.getSighash(e)&&Ht.throwArgumentError(`data signature does not match function ${e.name}.`,"data",R(r)),this._decodeParams(e.inputs,r.slice(4))}encodeFunctionData(e,t){return "string"==typeof e&&(e=this.getFunction(e)),R(P([this.getSighash(e),this._encodeParams(e.inputs,t||[])]))}decodeFunctionResult(e,t){"string"==typeof e&&(e=this.getFunction(e));let r=A(t),n=null,i=null,o=null,s=null;switch(r.length%this._abiCoder._getWordSize()){case 0:try{return this._abiCoder.decode(e.outputs,r)}catch(e){}break;case 4:{const e=R(r.slice(0,4)),t=Qt[e];if(t)i=this._abiCoder.decode(t.inputs,r.slice(4)),o=t.name,s=t.signature,t.reason&&(n=i[0]);else try{const t=this.getError(e);i=this._abiCoder.decode(t.inputs,r.slice(4)),o=t.name,s=t.format();}catch(e){console.log(e);}break}}return Ht.throwError("call revert exception",v.errors.CALL_EXCEPTION,{method:e.format(),errorArgs:i,errorName:o,errorSignature:s,reason:n})}encodeFunctionResult(e,t){return "string"==typeof e&&(e=this.getFunction(e)),R(this._abiCoder.encode(e.outputs,t||[]))}encodeFilterTopics(e,t){"string"==typeof e&&(e=this.getEvent(e)),t.length>e.inputs.length&&Ht.throwError("too many arguments for "+e.format(),v.errors.UNEXPECTED_ARGUMENT,{argument:"values",value:t});let r=[];e.anonymous||r.push(this.getEventTopic(e));const n=(e,t)=>"string"===e.type?Ze(t):"bytes"===e.type?ve(R(t)):("address"===e.type&&this._abiCoder.encode(["address"],[t]),U(R(t),32));for(t.forEach(((t,i)=>{let o=e.inputs[i];o.indexed?null==t?r.push(null):"array"===o.baseType||"tuple"===o.baseType?Ht.throwArgumentError("filtering with tuples or arrays not supported","contract."+o.name,t):Array.isArray(t)?r.push(t.map((e=>n(o,e)))):r.push(n(o,t)):null!=t&&Ht.throwArgumentError("cannot filter non-indexed parameters; must be null","contract."+o.name,t);}));r.length&&null===r[r.length-1];)r.pop();return r}encodeEventLog(e,t){"string"==typeof e&&(e=this.getEvent(e));const r=[],n=[],i=[];return e.anonymous||r.push(this.getEventTopic(e)),t.length!==e.inputs.length&&Ht.throwArgumentError("event arguments/values mismatch","values",t),e.inputs.forEach(((e,o)=>{const s=t[o];if(e.indexed)if("string"===e.type)r.push(Ze(s));else if("bytes"===e.type)r.push(ve(s));else {if("tuple"===e.baseType||"array"===e.baseType)throw new Error("not implemented");r.push(this._abiCoder.encode([e.type],[s]));}else n.push(e),i.push(s);})),{data:this._abiCoder.encode(n,i),topics:r}}decodeEventLog(e,t,r){if("string"==typeof e&&(e=this.getEvent(e)),null!=r&&!e.anonymous){let t=this.getEventTopic(e);T(r[0],32)&&r[0].toLowerCase()===t||Ht.throwError("fragment/topic mismatch",v.errors.INVALID_ARGUMENT,{argument:"topics[0]",expected:t,value:r[0]}),r=r.slice(1);}let n=[],i=[],o=[];e.inputs.forEach(((e,t)=>{e.indexed?"string"===e.type||"bytes"===e.type||"tuple"===e.baseType||"array"===e.baseType?(n.push(xt.fromObject({type:"bytes32",name:e.name})),o.push(!0)):(n.push(e),o.push(!1)):(i.push(e),o.push(!1));}));let s=null!=r?this._abiCoder.decode(n,P(r)):null,a=this._abiCoder.decode(i,t,!0),l=[],u=0,c=0;e.inputs.forEach(((e,t)=>{if(e.indexed)if(null==s)l[t]=new Xt({_isIndexed:!0,hash:null});else if(o[t])l[t]=new Xt({_isIndexed:!0,hash:s[c++]});else try{l[t]=s[c++];}catch(e){l[t]=e;}else try{l[t]=a[u++];}catch(e){l[t]=e;}if(e.name&&null==l[e.name]){const r=l[t];r instanceof Error?Object.defineProperty(l,e.name,{enumerable:!0,get:()=>{throw Yt(`property ${JSON.stringify(e.name)}`,r)}}):l[e.name]=r;}}));for(let e=0;e<l.length;e++){const t=l[e];t instanceof Error&&Object.defineProperty(l,e,{enumerable:!0,get:()=>{throw Yt(`index ${e}`,t)}});}return Object.freeze(l)}parseTransaction(e){let t=this.getFunction(e.data.substring(0,10).toLowerCase());return t?new $t({args:this._abiCoder.decode(t.inputs,"0x"+e.data.substring(10)),functionFragment:t,name:t.name,signature:t.format(),sighash:this.getSighash(t),value:J.from(e.value||"0")}):null}parseLog(e){let t=this.getEvent(e.topics[0]);return !t||t.anonymous?null:new Jt({eventFragment:t,name:t.name,signature:t.format(),topic:this.getEventTopic(t),args:this.decodeEventLog(t,e.data,e.topics)})}parseError(e){const t=R(e);let r=this.getError(t.substring(0,10).toLowerCase());return r?new Zt({args:this._abiCoder.decode(r.inputs,"0x"+t.substring(10)),errorFragment:r,name:r.name,signature:r.format(),sighash:this.getSighash(r)}):null}static isInterface(e){return !(!e||!e._isInterface)}}const tr=new v("abstract-provider/5.5.1");class rr extends ue{static isForkEvent(e){return !(!e||!e._isForkEvent)}}class nr{constructor(){tr.checkAbstract(new.target,nr),ee(this,"_isProvider",!0);}getFeeData(){return e=this,t=void 0,n=function*(){const{block:e,gasPrice:t}=yield re({block:this.getBlock("latest"),gasPrice:this.getGasPrice().catch((e=>null))});let r=null,n=null;return e&&e.baseFeePerGas&&(n=J.from("2500000000"),r=e.baseFeePerGas.mul(2).add(n)),{maxFeePerGas:r,maxPriorityFeePerGas:n,gasPrice:t}},new((r=void 0)||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}));var e,t,r,n;}addListener(e,t){return this.on(e,t)}removeListener(e,t){return this.off(e,t)}static isProvider(e){return !(!e||!e._isProvider)}}var ir=function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};const or=new v("abstract-signer/5.5.0"),sr=["accessList","chainId","customData","data","from","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","type","value"],ar=[v.errors.INSUFFICIENT_FUNDS,v.errors.NONCE_EXPIRED,v.errors.REPLACEMENT_UNDERPRICED];class lr{constructor(){or.checkAbstract(new.target,lr),ee(this,"_isSigner",!0);}getBalance(e){return ir(this,void 0,void 0,(function*(){return this._checkProvider("getBalance"),yield this.provider.getBalance(this.getAddress(),e)}))}getTransactionCount(e){return ir(this,void 0,void 0,(function*(){return this._checkProvider("getTransactionCount"),yield this.provider.getTransactionCount(this.getAddress(),e)}))}estimateGas(e){return ir(this,void 0,void 0,(function*(){this._checkProvider("estimateGas");const t=yield re(this.checkTransaction(e));return yield this.provider.estimateGas(t)}))}call(e,t){return ir(this,void 0,void 0,(function*(){this._checkProvider("call");const r=yield re(this.checkTransaction(e));return yield this.provider.call(r,t)}))}sendTransaction(e){return ir(this,void 0,void 0,(function*(){this._checkProvider("sendTransaction");const t=yield this.populateTransaction(e),r=yield this.signTransaction(t);return yield this.provider.sendTransaction(r)}))}getChainId(){return ir(this,void 0,void 0,(function*(){return this._checkProvider("getChainId"),(yield this.provider.getNetwork()).chainId}))}getGasPrice(){return ir(this,void 0,void 0,(function*(){return this._checkProvider("getGasPrice"),yield this.provider.getGasPrice()}))}getFeeData(){return ir(this,void 0,void 0,(function*(){return this._checkProvider("getFeeData"),yield this.provider.getFeeData()}))}resolveName(e){return ir(this,void 0,void 0,(function*(){return this._checkProvider("resolveName"),yield this.provider.resolveName(e)}))}checkTransaction(e){for(const t in e)-1===sr.indexOf(t)&&or.throwArgumentError("invalid transaction key: "+t,"transaction",e);const t=ie(e);return null==t.from?t.from=this.getAddress():t.from=Promise.all([Promise.resolve(t.from),this.getAddress()]).then((t=>(t[0].toLowerCase()!==t[1].toLowerCase()&&or.throwArgumentError("from address mismatch","transaction",e),t[0]))),t}populateTransaction(e){return ir(this,void 0,void 0,(function*(){const t=yield re(this.checkTransaction(e));null!=t.to&&(t.to=Promise.resolve(t.to).then((e=>ir(this,void 0,void 0,(function*(){if(null==e)return null;const t=yield this.resolveName(e);return null==t&&or.throwArgumentError("provided ENS name resolves to null","tx.to",e),t})))),t.to.catch((e=>{})));const r=null!=t.maxFeePerGas||null!=t.maxPriorityFeePerGas;if(null==t.gasPrice||2!==t.type&&!r?0!==t.type&&1!==t.type||!r||or.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","transaction",e):or.throwArgumentError("eip-1559 transaction do not support gasPrice","transaction",e),2!==t.type&&null!=t.type||null==t.maxFeePerGas||null==t.maxPriorityFeePerGas)if(0===t.type||1===t.type)null==t.gasPrice&&(t.gasPrice=this.getGasPrice());else {const e=yield this.getFeeData();if(null==t.type)if(null!=e.maxFeePerGas&&null!=e.maxPriorityFeePerGas)if(t.type=2,null!=t.gasPrice){const e=t.gasPrice;delete t.gasPrice,t.maxFeePerGas=e,t.maxPriorityFeePerGas=e;}else null==t.maxFeePerGas&&(t.maxFeePerGas=e.maxFeePerGas),null==t.maxPriorityFeePerGas&&(t.maxPriorityFeePerGas=e.maxPriorityFeePerGas);else null!=e.gasPrice?(r&&or.throwError("network does not support EIP-1559",v.errors.UNSUPPORTED_OPERATION,{operation:"populateTransaction"}),null==t.gasPrice&&(t.gasPrice=e.gasPrice),t.type=0):or.throwError("failed to get consistent fee data",v.errors.UNSUPPORTED_OPERATION,{operation:"signer.getFeeData"});else 2===t.type&&(null==t.maxFeePerGas&&(t.maxFeePerGas=e.maxFeePerGas),null==t.maxPriorityFeePerGas&&(t.maxPriorityFeePerGas=e.maxPriorityFeePerGas));}else t.type=2;return null==t.nonce&&(t.nonce=this.getTransactionCount("pending")),null==t.gasLimit&&(t.gasLimit=this.estimateGas(t).catch((e=>{if(ar.indexOf(e.code)>=0)throw e;return or.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",v.errors.UNPREDICTABLE_GAS_LIMIT,{error:e,tx:t})}))),null==t.chainId?t.chainId=this.getChainId():t.chainId=Promise.all([Promise.resolve(t.chainId),this.getChainId()]).then((t=>(0!==t[1]&&t[0]!==t[1]&&or.throwArgumentError("chainId address mismatch","transaction",e),t[0]))),yield re(t)}))}_checkProvider(e){this.provider||or.throwError("missing provider",v.errors.UNSUPPORTED_OPERATION,{operation:e||"_checkProvider"});}static isSigner(e){return !(!e||!e._isSigner)}}class ur extends lr{constructor(e,t){or.checkNew(new.target,ur),super(),ee(this,"address",e),ee(this,"provider",t||null);}getAddress(){return Promise.resolve(this.address)}_fail(e,t){return Promise.resolve().then((()=>{or.throwError(e,v.errors.UNSUPPORTED_OPERATION,{operation:t});}))}signMessage(e){return this._fail("VoidSigner cannot sign messages","signMessage")}signTransaction(e){return this._fail("VoidSigner cannot sign transactions","signTransaction")}_signTypedData(e,t,r){return this._fail("VoidSigner cannot sign typed data","signTypedData")}connect(e){return new ur(this.address,e)}}var cr=r(3715),hr=r.n(cr);function dr(e,t,r){return r={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&r.path)}},e(r,r.exports),r.exports}"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==r.g?r.g:"undefined"!=typeof self&&self;var fr=pr;function pr(e,t){if(!e)throw new Error(t||"Assertion failed")}pr.equal=function(e,t,r){if(e!=t)throw new Error(r||"Assertion failed: "+e+" != "+t)};var mr=dr((function(e,t){var r=t;function n(e){return 1===e.length?"0"+e:e}function i(e){for(var t="",r=0;r<e.length;r++)t+=n(e[r].toString(16));return t}r.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return [];var r=[];if("string"!=typeof e){for(var n=0;n<e.length;n++)r[n]=0|e[n];return r}if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),n=0;n<e.length;n+=2)r.push(parseInt(e[n]+e[n+1],16));else for(n=0;n<e.length;n++){var i=e.charCodeAt(n),o=i>>8,s=255&i;o?r.push(o,s):r.push(s);}return r},r.zero2=n,r.toHex=i,r.encode=function(e,t){return "hex"===t?i(e):e};})),yr=dr((function(e,t){var r=t;r.assert=fr,r.toArray=mr.toArray,r.zero2=mr.zero2,r.toHex=mr.toHex,r.encode=mr.encode,r.getNAF=function(e,t,r){var n=new Array(Math.max(e.bitLength(),r)+1);n.fill(0);for(var i=1<<t+1,o=e.clone(),s=0;s<n.length;s++){var a,l=o.andln(i-1);o.isOdd()?(a=l>(i>>1)-1?(i>>1)-l:l,o.isubn(a)):a=0,n[s]=a,o.iushrn(1);}return n},r.getJSF=function(e,t){var r=[[],[]];e=e.clone(),t=t.clone();for(var n,i=0,o=0;e.cmpn(-i)>0||t.cmpn(-o)>0;){var s,a,l=e.andln(3)+i&3,u=t.andln(3)+o&3;3===l&&(l=-1),3===u&&(u=-1),s=0==(1&l)?0:3!=(n=e.andln(7)+i&7)&&5!==n||2!==u?l:-l,r[0].push(s),a=0==(1&u)?0:3!=(n=t.andln(7)+o&7)&&5!==n||2!==l?u:-u,r[1].push(a),2*i===s+1&&(i=1-i),2*o===a+1&&(o=1-o),e.iushrn(1),t.iushrn(1);}return r},r.cachedProperty=function(e,t,r){var n="_"+t;e.prototype[t]=function(){return void 0!==this[n]?this[n]:this[n]=r.call(this)};},r.parseBytes=function(e){return "string"==typeof e?r.toArray(e,"hex"):e},r.intFromLE=function(e){return new(j())(e,"hex","le")};})),gr=yr.getNAF,vr=yr.getJSF,br=yr.assert;function wr(e,t){this.type=e,this.p=new(j())(t.p,16),this.red=t.prime?j().red(t.prime):j().mont(this.p),this.zero=new(j())(0).toRed(this.red),this.one=new(j())(1).toRed(this.red),this.two=new(j())(2).toRed(this.red),this.n=t.n&&new(j())(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);!r||r.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red));}var _r=wr;function Sr(e,t){this.curve=e,this.type=t,this.precomputed=null;}wr.prototype.point=function(){throw new Error("Not implemented")},wr.prototype.validate=function(){throw new Error("Not implemented")},wr.prototype._fixedNafMul=function(e,t){br(e.precomputed);var r=e._getDoubles(),n=gr(t,1,this._bitLength),i=(1<<r.step+1)-(r.step%2==0?2:1);i/=3;var o,s,a=[];for(o=0;o<n.length;o+=r.step){s=0;for(var l=o+r.step-1;l>=o;l--)s=(s<<1)+n[l];a.push(s);}for(var u=this.jpoint(null,null,null),c=this.jpoint(null,null,null),h=i;h>0;h--){for(o=0;o<a.length;o++)(s=a[o])===h?c=c.mixedAdd(r.points[o]):s===-h&&(c=c.mixedAdd(r.points[o].neg()));u=u.add(c);}return u.toP()},wr.prototype._wnafMul=function(e,t){var r=4,n=e._getNAFPoints(r);r=n.wnd;for(var i=n.points,o=gr(t,r,this._bitLength),s=this.jpoint(null,null,null),a=o.length-1;a>=0;a--){for(var l=0;a>=0&&0===o[a];a--)l++;if(a>=0&&l++,s=s.dblp(l),a<0)break;var u=o[a];br(0!==u),s="affine"===e.type?u>0?s.mixedAdd(i[u-1>>1]):s.mixedAdd(i[-u-1>>1].neg()):u>0?s.add(i[u-1>>1]):s.add(i[-u-1>>1].neg());}return "affine"===e.type?s.toP():s},wr.prototype._wnafMulAdd=function(e,t,r,n,i){var o,s,a,l=this._wnafT1,u=this._wnafT2,c=this._wnafT3,h=0;for(o=0;o<n;o++){var d=(a=t[o])._getNAFPoints(e);l[o]=d.wnd,u[o]=d.points;}for(o=n-1;o>=1;o-=2){var f=o-1,p=o;if(1===l[f]&&1===l[p]){var m=[t[f],null,null,t[p]];0===t[f].y.cmp(t[p].y)?(m[1]=t[f].add(t[p]),m[2]=t[f].toJ().mixedAdd(t[p].neg())):0===t[f].y.cmp(t[p].y.redNeg())?(m[1]=t[f].toJ().mixedAdd(t[p]),m[2]=t[f].add(t[p].neg())):(m[1]=t[f].toJ().mixedAdd(t[p]),m[2]=t[f].toJ().mixedAdd(t[p].neg()));var y=[-3,-1,-5,-7,0,7,5,1,3],g=vr(r[f],r[p]);for(h=Math.max(g[0].length,h),c[f]=new Array(h),c[p]=new Array(h),s=0;s<h;s++){var v=0|g[0][s],b=0|g[1][s];c[f][s]=y[3*(v+1)+(b+1)],c[p][s]=0,u[f]=m;}}else c[f]=gr(r[f],l[f],this._bitLength),c[p]=gr(r[p],l[p],this._bitLength),h=Math.max(c[f].length,h),h=Math.max(c[p].length,h);}var w=this.jpoint(null,null,null),_=this._wnafT4;for(o=h;o>=0;o--){for(var S=0;o>=0;){var E=!0;for(s=0;s<n;s++)_[s]=0|c[s][o],0!==_[s]&&(E=!1);if(!E)break;S++,o--;}if(o>=0&&S++,w=w.dblp(S),o<0)break;for(s=0;s<n;s++){var k=_[s];0!==k&&(k>0?a=u[s][k-1>>1]:k<0&&(a=u[s][-k-1>>1].neg()),w="affine"===a.type?w.mixedAdd(a):w.add(a));}}for(o=0;o<n;o++)u[o]=null;return i?w:w.toP()},wr.BasePoint=Sr,Sr.prototype.eq=function(){throw new Error("Not implemented")},Sr.prototype.validate=function(){return this.curve.validate(this)},wr.prototype.decodePoint=function(e,t){e=yr.toArray(e,t);var r=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1==2*r)return 6===e[0]?br(e[e.length-1]%2==0):7===e[0]&&br(e[e.length-1]%2==1),this.point(e.slice(1,1+r),e.slice(1+r,1+2*r));if((2===e[0]||3===e[0])&&e.length-1===r)return this.pointFromX(e.slice(1,1+r),3===e[0]);throw new Error("Unknown point format")},Sr.prototype.encodeCompressed=function(e){return this.encode(e,!0)},Sr.prototype._encode=function(e){var t=this.curve.p.byteLength(),r=this.getX().toArray("be",t);return e?[this.getY().isEven()?2:3].concat(r):[4].concat(r,this.getY().toArray("be",t))},Sr.prototype.encode=function(e,t){return yr.encode(this._encode(t),e)},Sr.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this},Sr.prototype._hasDoubles=function(e){if(!this.precomputed)return !1;var t=this.precomputed.doubles;return !!t&&t.points.length>=Math.ceil((e.bitLength()+1)/t.step)},Sr.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var r=[this],n=this,i=0;i<t;i+=e){for(var o=0;o<e;o++)n=n.dbl();r.push(n);}return {step:e,points:r}},Sr.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],r=(1<<e)-1,n=1===r?null:this.dbl(),i=1;i<r;i++)t[i]=t[i-1].add(n);return {wnd:e,points:t}},Sr.prototype._getBeta=function(){return null},Sr.prototype.dblp=function(e){for(var t=this,r=0;r<e;r++)t=t.dbl();return t};var Er=dr((function(e){"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}));}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e;}};})),kr=yr.assert;function Ar(e){_r.call(this,"short",e),this.a=new(j())(e.a,16).toRed(this.red),this.b=new(j())(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4);}Er(Ar,_r);var Pr=Ar;function xr(e,t,r,n){_r.BasePoint.call(this,e,"affine"),null===t&&null===r?(this.x=null,this.y=null,this.inf=!0):(this.x=new(j())(t,16),this.y=new(j())(r,16),n&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1);}function Cr(e,t,r,n){_r.BasePoint.call(this,e,"jacobian"),null===t&&null===r&&null===n?(this.x=this.curve.one,this.y=this.curve.one,this.z=new(j())(0)):(this.x=new(j())(t,16),this.y=new(j())(r,16),this.z=new(j())(n,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one;}Ar.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var t,r;if(e.beta)t=new(j())(e.beta,16).toRed(this.red);else {var n=this._getEndoRoots(this.p);t=(t=n[0].cmp(n[1])<0?n[0]:n[1]).toRed(this.red);}if(e.lambda)r=new(j())(e.lambda,16);else {var i=this._getEndoRoots(this.n);0===this.g.mul(i[0]).x.cmp(this.g.x.redMul(t))?r=i[0]:(r=i[1],kr(0===this.g.mul(r).x.cmp(this.g.x.redMul(t))));}return {beta:t,lambda:r,basis:e.basis?e.basis.map((function(e){return {a:new(j())(e.a,16),b:new(j())(e.b,16)}})):this._getEndoBasis(r)}}},Ar.prototype._getEndoRoots=function(e){var t=e===this.p?this.red:j().mont(e),r=new(j())(2).toRed(t).redInvm(),n=r.redNeg(),i=new(j())(3).toRed(t).redNeg().redSqrt().redMul(r);return [n.redAdd(i).fromRed(),n.redSub(i).fromRed()]},Ar.prototype._getEndoBasis=function(e){for(var t,r,n,i,o,s,a,l,u,c=this.n.ushrn(Math.floor(this.n.bitLength()/2)),h=e,d=this.n.clone(),f=new(j())(1),p=new(j())(0),m=new(j())(0),y=new(j())(1),g=0;0!==h.cmpn(0);){var v=d.div(h);l=d.sub(v.mul(h)),u=m.sub(v.mul(f));var b=y.sub(v.mul(p));if(!n&&l.cmp(c)<0)t=a.neg(),r=f,n=l.neg(),i=u;else if(n&&2==++g)break;a=l,d=h,h=l,m=f,f=u,y=p,p=b;}o=l.neg(),s=u;var w=n.sqr().add(i.sqr());return o.sqr().add(s.sqr()).cmp(w)>=0&&(o=t,s=r),n.negative&&(n=n.neg(),i=i.neg()),o.negative&&(o=o.neg(),s=s.neg()),[{a:n,b:i},{a:o,b:s}]},Ar.prototype._endoSplit=function(e){var t=this.endo.basis,r=t[0],n=t[1],i=n.b.mul(e).divRound(this.n),o=r.b.neg().mul(e).divRound(this.n),s=i.mul(r.a),a=o.mul(n.a),l=i.mul(r.b),u=o.mul(n.b);return {k1:e.sub(s).sub(a),k2:l.add(u).neg()}},Ar.prototype.pointFromX=function(e,t){(e=new(j())(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),n=r.redSqrt();if(0!==n.redSqr().redSub(r).cmp(this.zero))throw new Error("invalid point");var i=n.fromRed().isOdd();return (t&&!i||!t&&i)&&(n=n.redNeg()),this.point(e,n)},Ar.prototype.validate=function(e){if(e.inf)return !0;var t=e.x,r=e.y,n=this.a.redMul(t),i=t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);return 0===r.redSqr().redISub(i).cmpn(0)},Ar.prototype._endoWnafMulAdd=function(e,t,r){for(var n=this._endoWnafT1,i=this._endoWnafT2,o=0;o<e.length;o++){var s=this._endoSplit(t[o]),a=e[o],l=a._getBeta();s.k1.negative&&(s.k1.ineg(),a=a.neg(!0)),s.k2.negative&&(s.k2.ineg(),l=l.neg(!0)),n[2*o]=a,n[2*o+1]=l,i[2*o]=s.k1,i[2*o+1]=s.k2;}for(var u=this._wnafMulAdd(1,n,i,2*o,r),c=0;c<2*o;c++)n[c]=null,i[c]=null;return u},Er(xr,_r.BasePoint),Ar.prototype.point=function(e,t,r){return new xr(this,e,t,r)},Ar.prototype.pointFromJSON=function(e,t){return xr.fromJSON(this,e,t)},xr.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var r=this.curve,n=function(e){return r.point(e.x.redMul(r.endo.beta),e.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(n)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(n)}};}return t}},xr.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},xr.fromJSON=function(e,t,r){"string"==typeof t&&(t=JSON.parse(t));var n=e.point(t[0],t[1],r);if(!t[2])return n;function i(t){return e.point(t[0],t[1],r)}var o=t[2];return n.precomputed={beta:null,doubles:o.doubles&&{step:o.doubles.step,points:[n].concat(o.doubles.points.map(i))},naf:o.naf&&{wnd:o.naf.wnd,points:[n].concat(o.naf.points.map(i))}},n},xr.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},xr.prototype.isInfinity=function(){return this.inf},xr.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var t=this.y.redSub(e.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var r=t.redSqr().redISub(this.x).redISub(e.x),n=t.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,n)},xr.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,r=this.x.redSqr(),n=e.redInvm(),i=r.redAdd(r).redIAdd(r).redIAdd(t).redMul(n),o=i.redSqr().redISub(this.x.redAdd(this.x)),s=i.redMul(this.x.redSub(o)).redISub(this.y);return this.curve.point(o,s)},xr.prototype.getX=function(){return this.x.fromRed()},xr.prototype.getY=function(){return this.y.fromRed()},xr.prototype.mul=function(e){return e=new(j())(e,16),this.isInfinity()?this:this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},xr.prototype.mulAdd=function(e,t,r){var n=[this,t],i=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i):this.curve._wnafMulAdd(1,n,i,2)},xr.prototype.jmulAdd=function(e,t,r){var n=[this,t],i=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i,!0):this.curve._wnafMulAdd(1,n,i,2,!0)},xr.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},xr.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var r=this.precomputed,n=function(e){return e.neg()};t.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(n)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(n)}};}return t},xr.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},Er(Cr,_r.BasePoint),Ar.prototype.jpoint=function(e,t,r){return new Cr(this,e,t,r)},Cr.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),r=this.x.redMul(t),n=this.y.redMul(t).redMul(e);return this.curve.point(r,n)},Cr.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},Cr.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),r=this.z.redSqr(),n=this.x.redMul(t),i=e.x.redMul(r),o=this.y.redMul(t.redMul(e.z)),s=e.y.redMul(r.redMul(this.z)),a=n.redSub(i),l=o.redSub(s);if(0===a.cmpn(0))return 0!==l.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var u=a.redSqr(),c=u.redMul(a),h=n.redMul(u),d=l.redSqr().redIAdd(c).redISub(h).redISub(h),f=l.redMul(h.redISub(d)).redISub(o.redMul(c)),p=this.z.redMul(e.z).redMul(a);return this.curve.jpoint(d,f,p)},Cr.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),r=this.x,n=e.x.redMul(t),i=this.y,o=e.y.redMul(t).redMul(this.z),s=r.redSub(n),a=i.redSub(o);if(0===s.cmpn(0))return 0!==a.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var l=s.redSqr(),u=l.redMul(s),c=r.redMul(l),h=a.redSqr().redIAdd(u).redISub(c).redISub(c),d=a.redMul(c.redISub(h)).redISub(i.redMul(u)),f=this.z.redMul(s);return this.curve.jpoint(h,d,f)},Cr.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();var t;if(this.curve.zeroA||this.curve.threeA){var r=this;for(t=0;t<e;t++)r=r.dbl();return r}var n=this.curve.a,i=this.curve.tinv,o=this.x,s=this.y,a=this.z,l=a.redSqr().redSqr(),u=s.redAdd(s);for(t=0;t<e;t++){var c=o.redSqr(),h=u.redSqr(),d=h.redSqr(),f=c.redAdd(c).redIAdd(c).redIAdd(n.redMul(l)),p=o.redMul(h),m=f.redSqr().redISub(p.redAdd(p)),y=p.redISub(m),g=f.redMul(y);g=g.redIAdd(g).redISub(d);var v=u.redMul(a);t+1<e&&(l=l.redMul(d)),o=m,a=v,u=g;}return this.curve.jpoint(o,u.redMul(i),a)},Cr.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},Cr.prototype._zeroDbl=function(){var e,t,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),s=this.x.redAdd(i).redSqr().redISub(n).redISub(o);s=s.redIAdd(s);var a=n.redAdd(n).redIAdd(n),l=a.redSqr().redISub(s).redISub(s),u=o.redIAdd(o);u=(u=u.redIAdd(u)).redIAdd(u),e=l,t=a.redMul(s.redISub(l)).redISub(u),r=this.y.redAdd(this.y);}else {var c=this.x.redSqr(),h=this.y.redSqr(),d=h.redSqr(),f=this.x.redAdd(h).redSqr().redISub(c).redISub(d);f=f.redIAdd(f);var p=c.redAdd(c).redIAdd(c),m=p.redSqr(),y=d.redIAdd(d);y=(y=y.redIAdd(y)).redIAdd(y),e=m.redISub(f).redISub(f),t=p.redMul(f.redISub(e)).redISub(y),r=(r=this.y.redMul(this.z)).redIAdd(r);}return this.curve.jpoint(e,t,r)},Cr.prototype._threeDbl=function(){var e,t,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),s=this.x.redAdd(i).redSqr().redISub(n).redISub(o);s=s.redIAdd(s);var a=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),l=a.redSqr().redISub(s).redISub(s);e=l;var u=o.redIAdd(o);u=(u=u.redIAdd(u)).redIAdd(u),t=a.redMul(s.redISub(l)).redISub(u),r=this.y.redAdd(this.y);}else {var c=this.z.redSqr(),h=this.y.redSqr(),d=this.x.redMul(h),f=this.x.redSub(c).redMul(this.x.redAdd(c));f=f.redAdd(f).redIAdd(f);var p=d.redIAdd(d),m=(p=p.redIAdd(p)).redAdd(p);e=f.redSqr().redISub(m),r=this.y.redAdd(this.z).redSqr().redISub(h).redISub(c);var y=h.redSqr();y=(y=(y=y.redIAdd(y)).redIAdd(y)).redIAdd(y),t=f.redMul(p.redISub(e)).redISub(y);}return this.curve.jpoint(e,t,r)},Cr.prototype._dbl=function(){var e=this.curve.a,t=this.x,r=this.y,n=this.z,i=n.redSqr().redSqr(),o=t.redSqr(),s=r.redSqr(),a=o.redAdd(o).redIAdd(o).redIAdd(e.redMul(i)),l=t.redAdd(t),u=(l=l.redIAdd(l)).redMul(s),c=a.redSqr().redISub(u.redAdd(u)),h=u.redISub(c),d=s.redSqr();d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d);var f=a.redMul(h).redISub(d),p=r.redAdd(r).redMul(n);return this.curve.jpoint(c,f,p)},Cr.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr(),n=t.redSqr(),i=e.redAdd(e).redIAdd(e),o=i.redSqr(),s=this.x.redAdd(t).redSqr().redISub(e).redISub(n),a=(s=(s=(s=s.redIAdd(s)).redAdd(s).redIAdd(s)).redISub(o)).redSqr(),l=n.redIAdd(n);l=(l=(l=l.redIAdd(l)).redIAdd(l)).redIAdd(l);var u=i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(l),c=t.redMul(u);c=(c=c.redIAdd(c)).redIAdd(c);var h=this.x.redMul(a).redISub(c);h=(h=h.redIAdd(h)).redIAdd(h);var d=this.y.redMul(u.redMul(l.redISub(u)).redISub(s.redMul(a)));d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d);var f=this.z.redAdd(s).redSqr().redISub(r).redISub(a);return this.curve.jpoint(h,d,f)},Cr.prototype.mul=function(e,t){return e=new(j())(e,t),this.curve._wnafMul(this,e)},Cr.prototype.eq=function(e){if("affine"===e.type)return this.eq(e.toJ());if(this===e)return !0;var t=this.z.redSqr(),r=e.z.redSqr();if(0!==this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0))return !1;var n=t.redMul(this.z),i=r.redMul(e.z);return 0===this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0)},Cr.prototype.eqXToP=function(e){var t=this.z.redSqr(),r=e.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(r))return !0;for(var n=e.clone(),i=this.curve.redN.redMul(t);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return !1;if(r.redIAdd(i),0===this.x.cmp(r))return !0}},Cr.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},Cr.prototype.isInfinity=function(){return 0===this.z.cmpn(0)};var Tr=dr((function(e,t){var r=t;r.base=_r,r.short=Pr,r.mont=null,r.edwards=null;})),Nr=dr((function(e,t){var r,n=t,i=yr.assert;function o(e){"short"===e.type?this.curve=new Tr.short(e):"edwards"===e.type?this.curve=new Tr.edwards(e):this.curve=new Tr.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,i(this.g.validate(),"Invalid curve"),i(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O");}function s(e,t){Object.defineProperty(n,e,{configurable:!0,enumerable:!0,get:function(){var r=new o(t);return Object.defineProperty(n,e,{configurable:!0,enumerable:!0,value:r}),r}});}n.PresetCurve=o,s("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:hr().sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),s("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:hr().sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),s("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:hr().sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),s("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:hr().sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),s("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:hr().sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),s("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hr().sha256,gRed:!1,g:["9"]}),s("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hr().sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{r=null.crash();}catch(e){r=void 0;}s("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:hr().sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",r]});}));function Rr(e){if(!(this instanceof Rr))return new Rr(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=mr.toArray(e.entropy,e.entropyEnc||"hex"),r=mr.toArray(e.nonce,e.nonceEnc||"hex"),n=mr.toArray(e.pers,e.persEnc||"hex");fr(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(t,r,n);}var Br=Rr;Rr.prototype._init=function(e,t,r){var n=e.concat(t).concat(r);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(n),this._reseed=1,this.reseedInterval=281474976710656;},Rr.prototype._hmac=function(){return new(hr().hmac)(this.hash,this.K)},Rr.prototype._update=function(e){var t=this._hmac().update(this.V).update([0]);e&&(t=t.update(e)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest());},Rr.prototype.reseed=function(e,t,r,n){"string"!=typeof t&&(n=r,r=t,t=null),e=mr.toArray(e,t),r=mr.toArray(r,n),fr(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(r||[])),this._reseed=1;},Rr.prototype.generate=function(e,t,r,n){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof t&&(n=r,r=t,t=null),r&&(r=mr.toArray(r,n||"hex"),this._update(r));for(var i=[];i.length<e;)this.V=this._hmac().update(this.V).digest(),i=i.concat(this.V);var o=i.slice(0,e);return this._update(r),this._reseed++,mr.encode(o,t)};var Ir=yr.assert;function Or(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc);}var Mr=Or;Or.fromPublic=function(e,t,r){return t instanceof Or?t:new Or(e,{pub:t,pubEnc:r})},Or.fromPrivate=function(e,t,r){return t instanceof Or?t:new Or(e,{priv:t,privEnc:r})},Or.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},Or.prototype.getPublic=function(e,t){return "string"==typeof e&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub},Or.prototype.getPrivate=function(e){return "hex"===e?this.priv.toString(16,2):this.priv},Or.prototype._importPrivate=function(e,t){this.priv=new(j())(e,t||16),this.priv=this.priv.umod(this.ec.curve.n);},Or.prototype._importPublic=function(e,t){if(e.x||e.y)return "mont"===this.ec.curve.type?Ir(e.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||Ir(e.x&&e.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,t);},Or.prototype.derive=function(e){return e.validate()||Ir(e.validate(),"public point not validated"),e.mul(this.priv).getX()},Or.prototype.sign=function(e,t,r){return this.ec.sign(e,this,t,r)},Or.prototype.verify=function(e,t){return this.ec.verify(e,t,this)},Or.prototype.inspect=function(){return "<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var Dr=yr.assert;function Ur(e,t){if(e instanceof Ur)return e;this._importDER(e,t)||(Dr(e.r&&e.s,"Signature without r or s"),this.r=new(j())(e.r,16),this.s=new(j())(e.s,16),void 0===e.recoveryParam?this.recoveryParam=null:this.recoveryParam=e.recoveryParam);}var Kr=Ur;function Fr(){this.place=0;}function Lr(e,t){var r=e[t.place++];if(!(128&r))return r;var n=15&r;if(0===n||n>4)return !1;for(var i=0,o=0,s=t.place;o<n;o++,s++)i<<=8,i|=e[s],i>>>=0;return !(i<=127)&&(t.place=s,i)}function jr(e){for(var t=0,r=e.length-1;!e[t]&&!(128&e[t+1])&&t<r;)t++;return 0===t?e:e.slice(t)}function qr(e,t){if(t<128)e.push(t);else {var r=1+(Math.log(t)/Math.LN2>>>3);for(e.push(128|r);--r;)e.push(t>>>(r<<3)&255);e.push(t);}}Ur.prototype._importDER=function(e,t){e=yr.toArray(e,t);var r=new Fr;if(48!==e[r.place++])return !1;var n=Lr(e,r);if(!1===n)return !1;if(n+r.place!==e.length)return !1;if(2!==e[r.place++])return !1;var i=Lr(e,r);if(!1===i)return !1;var o=e.slice(r.place,i+r.place);if(r.place+=i,2!==e[r.place++])return !1;var s=Lr(e,r);if(!1===s)return !1;if(e.length!==s+r.place)return !1;var a=e.slice(r.place,s+r.place);if(0===o[0]){if(!(128&o[1]))return !1;o=o.slice(1);}if(0===a[0]){if(!(128&a[1]))return !1;a=a.slice(1);}return this.r=new(j())(o),this.s=new(j())(a),this.recoveryParam=null,!0},Ur.prototype.toDER=function(e){var t=this.r.toArray(),r=this.s.toArray();for(128&t[0]&&(t=[0].concat(t)),128&r[0]&&(r=[0].concat(r)),t=jr(t),r=jr(r);!(r[0]||128&r[1]);)r=r.slice(1);var n=[2];qr(n,t.length),(n=n.concat(t)).push(2),qr(n,r.length);var i=n.concat(r),o=[48];return qr(o,i.length),o=o.concat(i),yr.encode(o,e)};var zr=function(){throw new Error("unsupported")},Wr=yr.assert;function Gr(e){if(!(this instanceof Gr))return new Gr(e);"string"==typeof e&&(Wr(Object.prototype.hasOwnProperty.call(Nr,e),"Unknown curve "+e),e=Nr[e]),e instanceof Nr.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash;}var Vr=Gr;Gr.prototype.keyPair=function(e){return new Mr(this,e)},Gr.prototype.keyFromPrivate=function(e,t){return Mr.fromPrivate(this,e,t)},Gr.prototype.keyFromPublic=function(e,t){return Mr.fromPublic(this,e,t)},Gr.prototype.genKeyPair=function(e){e||(e={});for(var t=new Br({hash:this.hash,pers:e.pers,persEnc:e.persEnc||"utf8",entropy:e.entropy||zr(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||"utf8",nonce:this.n.toArray()}),r=this.n.byteLength(),n=this.n.sub(new(j())(2));;){var i=new(j())(t.generate(r));if(!(i.cmp(n)>0))return i.iaddn(1),this.keyFromPrivate(i)}},Gr.prototype._truncateToN=function(e,t){var r=8*e.byteLength()-this.n.bitLength();return r>0&&(e=e.ushrn(r)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e},Gr.prototype.sign=function(e,t,r,n){"object"==typeof r&&(n=r,r=null),n||(n={}),t=this.keyFromPrivate(t,r),e=this._truncateToN(new(j())(e,16));for(var i=this.n.byteLength(),o=t.getPrivate().toArray("be",i),s=e.toArray("be",i),a=new Br({hash:this.hash,entropy:o,nonce:s,pers:n.pers,persEnc:n.persEnc||"utf8"}),l=this.n.sub(new(j())(1)),u=0;;u++){var c=n.k?n.k(u):new(j())(a.generate(this.n.byteLength()));if(!((c=this._truncateToN(c,!0)).cmpn(1)<=0||c.cmp(l)>=0)){var h=this.g.mul(c);if(!h.isInfinity()){var d=h.getX(),f=d.umod(this.n);if(0!==f.cmpn(0)){var p=c.invm(this.n).mul(f.mul(t.getPrivate()).iadd(e));if(0!==(p=p.umod(this.n)).cmpn(0)){var m=(h.getY().isOdd()?1:0)|(0!==d.cmp(f)?2:0);return n.canonical&&p.cmp(this.nh)>0&&(p=this.n.sub(p),m^=1),new Kr({r:f,s:p,recoveryParam:m})}}}}}},Gr.prototype.verify=function(e,t,r,n){e=this._truncateToN(new(j())(e,16)),r=this.keyFromPublic(r,n);var i=(t=new Kr(t,"hex")).r,o=t.s;if(i.cmpn(1)<0||i.cmp(this.n)>=0)return !1;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return !1;var s,a=o.invm(this.n),l=a.mul(e).umod(this.n),u=a.mul(i).umod(this.n);return this.curve._maxwellTrick?!(s=this.g.jmulAdd(l,r.getPublic(),u)).isInfinity()&&s.eqXToP(i):!(s=this.g.mulAdd(l,r.getPublic(),u)).isInfinity()&&0===s.getX().umod(this.n).cmp(i)},Gr.prototype.recoverPubKey=function(e,t,r,n){Wr((3&r)===r,"The recovery param is more than two bits"),t=new Kr(t,n);var i=this.n,o=new(j())(e),s=t.r,a=t.s,l=1&r,u=r>>1;if(s.cmp(this.curve.p.umod(this.curve.n))>=0&&u)throw new Error("Unable to find sencond key candinate");s=u?this.curve.pointFromX(s.add(this.curve.n),l):this.curve.pointFromX(s,l);var c=t.r.invm(i),h=i.sub(o).mul(c).umod(i),d=a.mul(c).umod(i);return this.g.mulAdd(h,s,d)},Gr.prototype.getKeyRecoveryParam=function(e,t,r,n){if(null!==(t=new Kr(t,n)).recoveryParam)return t.recoveryParam;for(var i=0;i<4;i++){var o;try{o=this.recoverPubKey(e,t,i);}catch(e){continue}if(o.eq(r))return i}throw new Error("Unable to find valid recovery factor")};var Hr=dr((function(e,t){var r=t;r.version="6.5.4",r.utils=yr,r.rand=function(){throw new Error("unsupported")},r.curve=Tr,r.curves=Nr,r.ec=Vr,r.eddsa=null;})).ec;const Jr=new v("signing-key/5.5.0");let $r=null;function Zr(){return $r||($r=new Hr("secp256k1")),$r}class Xr{constructor(e){ee(this,"curve","secp256k1"),ee(this,"privateKey",R(e));const t=Zr().keyFromPrivate(A(this.privateKey));ee(this,"publicKey","0x"+t.getPublic(!1,"hex")),ee(this,"compressedPublicKey","0x"+t.getPublic(!0,"hex")),ee(this,"_isSigningKey",!0);}_addPoint(e){const t=Zr().keyFromPublic(A(this.publicKey)),r=Zr().keyFromPublic(A(e));return "0x"+t.pub.add(r.pub).encodeCompressed("hex")}signDigest(e){const t=Zr().keyFromPrivate(A(this.privateKey)),r=A(e);32!==r.length&&Jr.throwArgumentError("bad digest length","digest",e);const n=t.sign(r,{canonical:!0});return K({recoveryParam:n.recoveryParam,r:U("0x"+n.r.toString(16),32),s:U("0x"+n.s.toString(16),32)})}computeSharedSecret(e){const t=Zr().keyFromPrivate(A(this.privateKey)),r=Zr().keyFromPublic(A(Yr(e)));return U("0x"+t.derive(r.getPublic()).toString(16),32)}static isSigningKey(e){return !(!e||!e._isSigningKey)}}function Qr(e,t){const r=K(t),n={r:A(r.r),s:A(r.s)};return "0x"+Zr().recoverPubKey(A(e),n,r.recoveryParam).encode("hex",!1)}function Yr(e,t){const r=A(e);if(32===r.length){const e=new Xr(r);return t?"0x"+Zr().keyFromPrivate(r).getPublic(!0,"hex"):e.publicKey}return 33===r.length?t?R(r):"0x"+Zr().keyFromPublic(r).getPublic(!1,"hex"):65===r.length?t?"0x"+Zr().keyFromPublic(r).getPublic(!0,"hex"):R(r):Jr.throwArgumentError("invalid public or private key","key","[REDACTED]")}const en=new v("transactions/5.5.0");var tn;function rn(e){return "0x"===e?null:Ie(e)}function nn(e){return "0x"===e?ut:J.from(e)}!function(e){e[e.legacy=0]="legacy",e[e.eip2930=1]="eip2930",e[e.eip1559=2]="eip1559";}(tn||(tn={}));const on=[{name:"nonce",maxLength:32,numeric:!0},{name:"gasPrice",maxLength:32,numeric:!0},{name:"gasLimit",maxLength:32,numeric:!0},{name:"to",length:20},{name:"value",maxLength:32,numeric:!0},{name:"data"}],sn={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,type:!0,value:!0};function an(e){return Ie(I(ve(I(Yr(e),1)),12))}function ln(e,t){return an(Qr(A(e),t))}function un(e,t){const r=x(J.from(e).toHexString());return r.length>32&&en.throwArgumentError("invalid length for "+t,"transaction:"+t,e),r}function cn(e,t){return {address:Ie(e),storageKeys:(t||[]).map(((t,r)=>(32!==B(t)&&en.throwArgumentError("invalid access list storageKey",`accessList[${e}:${r}]`,t),t.toLowerCase())))}}function hn(e){if(Array.isArray(e))return e.map(((e,t)=>Array.isArray(e)?(e.length>2&&en.throwArgumentError("access list expected to be [ address, storageKeys[] ]",`value[${t}]`,e),cn(e[0],e[1])):cn(e.address,e.storageKeys)));const t=Object.keys(e).map((t=>{const r=e[t].reduce(((e,t)=>(e[t]=!0,e)),{});return cn(t,Object.keys(r).sort())}));return t.sort(((e,t)=>e.address.localeCompare(t.address))),t}function dn(e){return hn(e).map((e=>[e.address,e.storageKeys]))}function fn(e,t){if(null!=e.gasPrice){const t=J.from(e.gasPrice),r=J.from(e.maxFeePerGas||0);t.eq(r)||en.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas","tx",{gasPrice:t,maxFeePerGas:r});}const r=[un(e.chainId||0,"chainId"),un(e.nonce||0,"nonce"),un(e.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),un(e.maxFeePerGas||0,"maxFeePerGas"),un(e.gasLimit||0,"gasLimit"),null!=e.to?Ie(e.to):"0x",un(e.value||0,"value"),e.data||"0x",dn(e.accessList||[])];if(t){const e=K(t);r.push(un(e.recoveryParam,"recoveryParam")),r.push(x(e.r)),r.push(x(e.s));}return O(["0x02",Ee(r)])}function pn(e,t){const r=[un(e.chainId||0,"chainId"),un(e.nonce||0,"nonce"),un(e.gasPrice||0,"gasPrice"),un(e.gasLimit||0,"gasLimit"),null!=e.to?Ie(e.to):"0x",un(e.value||0,"value"),e.data||"0x",dn(e.accessList||[])];if(t){const e=K(t);r.push(un(e.recoveryParam,"recoveryParam")),r.push(x(e.r)),r.push(x(e.s));}return O(["0x01",Ee(r)])}function mn(e,t){if(null==e.type||0===e.type)return null!=e.accessList&&en.throwArgumentError("untyped transactions do not support accessList; include type: 1","transaction",e),function(e,t){ne(e,sn);const r=[];on.forEach((function(t){let n=e[t.name]||[];const i={};t.numeric&&(i.hexPad="left"),n=A(R(n,i)),t.length&&n.length!==t.length&&n.length>0&&en.throwArgumentError("invalid length for "+t.name,"transaction:"+t.name,n),t.maxLength&&(n=x(n),n.length>t.maxLength&&en.throwArgumentError("invalid length for "+t.name,"transaction:"+t.name,n)),r.push(R(n));}));let n=0;if(null!=e.chainId?(n=e.chainId,"number"!=typeof n&&en.throwArgumentError("invalid transaction.chainId","transaction",e)):t&&!S(t)&&t.v>28&&(n=Math.floor((t.v-35)/2)),0!==n&&(r.push(R(n)),r.push("0x"),r.push("0x")),!t)return Ee(r);const i=K(t);let o=27+i.recoveryParam;return 0!==n?(r.pop(),r.pop(),r.pop(),o+=2*n+8,i.v>28&&i.v!==o&&en.throwArgumentError("transaction.chainId/signature.v mismatch","signature",t)):i.v!==o&&en.throwArgumentError("transaction.chainId/signature.v mismatch","signature",t),r.push(R(o)),r.push(x(A(i.r))),r.push(x(A(i.s))),Ee(r)}(e,t);switch(e.type){case 1:return pn(e,t);case 2:return fn(e,t)}return en.throwError(`unsupported transaction type: ${e.type}`,v.errors.UNSUPPORTED_OPERATION,{operation:"serializeTransaction",transactionType:e.type})}function yn(e,t,r){try{const r=nn(t[0]).toNumber();if(0!==r&&1!==r)throw new Error("bad recid");e.v=r;}catch(e){en.throwArgumentError("invalid v for transaction type: 1","v",t[0]);}e.r=U(t[1],32),e.s=U(t[2],32);try{const t=ve(r(e));e.from=ln(t,{r:e.r,s:e.s,recoveryParam:e.v});}catch(e){console.log(e);}}function gn(e){const t=A(e);if(t[0]>127)return function(e){const t=Pe(e);9!==t.length&&6!==t.length&&en.throwArgumentError("invalid raw transaction","rawTransaction",e);const r={nonce:nn(t[0]).toNumber(),gasPrice:nn(t[1]),gasLimit:nn(t[2]),to:rn(t[3]),value:nn(t[4]),data:t[5],chainId:0};if(6===t.length)return r;try{r.v=J.from(t[6]).toNumber();}catch(e){return console.log(e),r}if(r.r=U(t[7],32),r.s=U(t[8],32),J.from(r.r).isZero()&&J.from(r.s).isZero())r.chainId=r.v,r.v=0;else {r.chainId=Math.floor((r.v-35)/2),r.chainId<0&&(r.chainId=0);let n=r.v-27;const i=t.slice(0,6);0!==r.chainId&&(i.push(R(r.chainId)),i.push("0x"),i.push("0x"),n-=2*r.chainId+8);const o=ve(Ee(i));try{r.from=ln(o,{r:R(r.r),s:R(r.s),recoveryParam:n});}catch(e){console.log(e);}r.hash=ve(e);}return r.type=null,r}(t);switch(t[0]){case 1:return function(e){const t=Pe(e.slice(1));8!==t.length&&11!==t.length&&en.throwArgumentError("invalid component count for transaction type: 1","payload",R(e));const r={type:1,chainId:nn(t[0]).toNumber(),nonce:nn(t[1]).toNumber(),gasPrice:nn(t[2]),gasLimit:nn(t[3]),to:rn(t[4]),value:nn(t[5]),data:t[6],accessList:hn(t[7])};return 8===t.length||(r.hash=ve(e),yn(r,t.slice(8),pn)),r}(t);case 2:return function(e){const t=Pe(e.slice(1));9!==t.length&&12!==t.length&&en.throwArgumentError("invalid component count for transaction type: 2","payload",R(e));const r=nn(t[2]),n=nn(t[3]),i={type:2,chainId:nn(t[0]).toNumber(),nonce:nn(t[1]).toNumber(),maxPriorityFeePerGas:r,maxFeePerGas:n,gasPrice:null,gasLimit:nn(t[4]),to:rn(t[5]),value:nn(t[6]),data:t[7],accessList:hn(t[8])};return 9===t.length||(i.hash=ve(e),yn(i,t.slice(9),fn)),i}(t)}return en.throwError(`unsupported transaction type: ${t[0]}`,v.errors.UNSUPPORTED_OPERATION,{operation:"parseTransaction",transactionType:t[0]})}var vn=function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};const bn=new v("contracts/5.5.0"),wn={chainId:!0,data:!0,from:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0,maxFeePerGas:!0,maxPriorityFeePerGas:!0,customData:!0};function _n(e,t){return vn(this,void 0,void 0,(function*(){const r=yield t;"string"!=typeof r&&bn.throwArgumentError("invalid address or ENS name","name",r);try{return Ie(r)}catch(e){}e||bn.throwError("a provider or signer is needed to resolve ENS names",v.errors.UNSUPPORTED_OPERATION,{operation:"resolveName"});const n=yield e.resolveName(r);return null==n&&bn.throwArgumentError("resolver or addr is not configured for ENS name","name",r),n}))}function Sn(e,t,r){return vn(this,void 0,void 0,(function*(){return Array.isArray(r)?yield Promise.all(r.map(((r,n)=>Sn(e,Array.isArray(t)?t[n]:t[r.name],r)))):"address"===r.type?yield _n(e,t):"tuple"===r.type?yield Sn(e,t,r.components):"array"===r.baseType?Array.isArray(t)?yield Promise.all(t.map((t=>Sn(e,t,r.arrayChildren)))):Promise.reject(bn.makeError("invalid value for array",v.errors.INVALID_ARGUMENT,{argument:"value",value:t})):t}))}function En(e,t,r){return vn(this,void 0,void 0,(function*(){let n={};r.length===t.inputs.length+1&&"object"==typeof r[r.length-1]&&(n=ie(r.pop())),bn.checkArgumentCount(r.length,t.inputs.length,"passed to contract"),e.signer?n.from?n.from=re({override:_n(e.signer,n.from),signer:e.signer.getAddress()}).then((e=>vn(this,void 0,void 0,(function*(){return Ie(e.signer)!==e.override&&bn.throwError("Contract with a Signer cannot override from",v.errors.UNSUPPORTED_OPERATION,{operation:"overrides.from"}),e.override})))):n.from=e.signer.getAddress():n.from&&(n.from=_n(e.provider,n.from));const i=yield re({args:Sn(e.signer||e.provider,r,t.inputs),address:e.resolvedAddress,overrides:re(n)||{}}),o=e.interface.encodeFunctionData(t,i.args),s={data:o,to:i.address},a=i.overrides;if(null!=a.nonce&&(s.nonce=J.from(a.nonce).toNumber()),null!=a.gasLimit&&(s.gasLimit=J.from(a.gasLimit)),null!=a.gasPrice&&(s.gasPrice=J.from(a.gasPrice)),null!=a.maxFeePerGas&&(s.maxFeePerGas=J.from(a.maxFeePerGas)),null!=a.maxPriorityFeePerGas&&(s.maxPriorityFeePerGas=J.from(a.maxPriorityFeePerGas)),null!=a.from&&(s.from=a.from),null!=a.type&&(s.type=a.type),null!=a.accessList&&(s.accessList=hn(a.accessList)),null==s.gasLimit&&null!=t.gas){let e=21e3;const r=A(o);for(let t=0;t<r.length;t++)e+=4,r[t]&&(e+=64);s.gasLimit=J.from(t.gas).add(e);}if(a.value){const e=J.from(a.value);e.isZero()||t.payable||bn.throwError("non-payable method cannot override value",v.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:n.value}),s.value=e;}a.customData&&(s.customData=ie(a.customData)),delete n.nonce,delete n.gasLimit,delete n.gasPrice,delete n.from,delete n.value,delete n.type,delete n.accessList,delete n.maxFeePerGas,delete n.maxPriorityFeePerGas,delete n.customData;const l=Object.keys(n).filter((e=>null!=n[e]));return l.length&&bn.throwError(`cannot override ${l.map((e=>JSON.stringify(e))).join(",")}`,v.errors.UNSUPPORTED_OPERATION,{operation:"overrides",overrides:l}),s}))}function kn(e,t){const r=t.wait.bind(t);t.wait=t=>r(t).then((t=>(t.events=t.logs.map((r=>{let n=le(r),i=null;try{i=e.interface.parseLog(r);}catch(e){}return i&&(n.args=i.args,n.decode=(t,r)=>e.interface.decodeEventLog(i.eventFragment,t,r),n.event=i.name,n.eventSignature=i.signature),n.removeListener=()=>e.provider,n.getBlock=()=>e.provider.getBlock(t.blockHash),n.getTransaction=()=>e.provider.getTransaction(t.transactionHash),n.getTransactionReceipt=()=>Promise.resolve(t),n})),t)));}function An(e,t,r){const n=e.signer||e.provider;return function(...i){return vn(this,void 0,void 0,(function*(){let o;if(i.length===t.inputs.length+1&&"object"==typeof i[i.length-1]){const e=ie(i.pop());null!=e.blockTag&&(o=yield e.blockTag),delete e.blockTag,i.push(e);}null!=e.deployTransaction&&(yield e._deployed(o));const s=yield En(e,t,i),a=yield n.call(s,o);try{let n=e.interface.decodeFunctionResult(t,a);return r&&1===t.outputs.length&&(n=n[0]),n}catch(t){throw t.code===v.errors.CALL_EXCEPTION&&(t.address=e.address,t.args=i,t.transaction=s),t}}))}}function Pn(e,t,r){return t.constant?An(e,t,r):function(e,t){return function(...r){return vn(this,void 0,void 0,(function*(){e.signer||bn.throwError("sending a transaction requires a signer",v.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction"}),null!=e.deployTransaction&&(yield e._deployed());const n=yield En(e,t,r),i=yield e.signer.sendTransaction(n);return kn(e,i),i}))}}(e,t)}function xn(e){return !e.address||null!=e.topics&&0!==e.topics.length?(e.address||"*")+"@"+(e.topics?e.topics.map((e=>Array.isArray(e)?e.join("|"):e)).join(":"):""):"*"}class Cn{constructor(e,t){ee(this,"tag",e),ee(this,"filter",t),this._listeners=[];}addListener(e,t){this._listeners.push({listener:e,once:t});}removeListener(e){let t=!1;this._listeners=this._listeners.filter((r=>!(!t&&r.listener===e&&(t=!0,1))));}removeAllListeners(){this._listeners=[];}listeners(){return this._listeners.map((e=>e.listener))}listenerCount(){return this._listeners.length}run(e){const t=this.listenerCount();return this._listeners=this._listeners.filter((t=>{const r=e.slice();return setTimeout((()=>{t.listener.apply(this,r);}),0),!t.once})),t}prepareEvent(e){}getEmit(e){return [e]}}class Tn extends Cn{constructor(){super("error",null);}}class Nn extends Cn{constructor(e,t,r,n){const i={address:e};let o=t.getEventTopic(r);n?(o!==n[0]&&bn.throwArgumentError("topic mismatch","topics",n),i.topics=n.slice()):i.topics=[o],super(xn(i),i),ee(this,"address",e),ee(this,"interface",t),ee(this,"fragment",r);}prepareEvent(e){super.prepareEvent(e),e.event=this.fragment.name,e.eventSignature=this.fragment.format(),e.decode=(e,t)=>this.interface.decodeEventLog(this.fragment,e,t);try{e.args=this.interface.decodeEventLog(this.fragment,e.data,e.topics);}catch(t){e.args=null,e.decodeError=t;}}getEmit(e){const t=de(e.args);if(t.length)throw t[0].error;const r=(e.args||[]).slice();return r.push(e),r}}class Rn extends Cn{constructor(e,t){super("*",{address:e}),ee(this,"address",e),ee(this,"interface",t);}prepareEvent(e){super.prepareEvent(e);try{const t=this.interface.parseLog(e);e.event=t.name,e.eventSignature=t.signature,e.decode=(e,r)=>this.interface.decodeEventLog(t.eventFragment,e,r),e.args=t.args;}catch(e){}}}class Bn{constructor(e,t,r){bn.checkNew(new.target,In),ee(this,"interface",te(new.target,"getInterface")(t)),null==r?(ee(this,"provider",null),ee(this,"signer",null)):lr.isSigner(r)?(ee(this,"provider",r.provider||null),ee(this,"signer",r)):nr.isProvider(r)?(ee(this,"provider",r),ee(this,"signer",null)):bn.throwArgumentError("invalid signer or provider","signerOrProvider",r),ee(this,"callStatic",{}),ee(this,"estimateGas",{}),ee(this,"functions",{}),ee(this,"populateTransaction",{}),ee(this,"filters",{});{const e={};Object.keys(this.interface.events).forEach((t=>{const r=this.interface.events[t];ee(this.filters,t,((...e)=>({address:this.address,topics:this.interface.encodeFilterTopics(r,e)}))),e[r.name]||(e[r.name]=[]),e[r.name].push(t);})),Object.keys(e).forEach((t=>{const r=e[t];1===r.length?ee(this.filters,t,this.filters[r[0]]):bn.warn(`Duplicate definition of ${t} (${r.join(", ")})`);}));}if(ee(this,"_runningEvents",{}),ee(this,"_wrappedEmits",{}),null==e&&bn.throwArgumentError("invalid contract address or ENS name","addressOrName",e),ee(this,"address",e),this.provider)ee(this,"resolvedAddress",_n(this.provider,e));else try{ee(this,"resolvedAddress",Promise.resolve(Ie(e)));}catch(e){bn.throwError("provider is required to use ENS name as contract address",v.errors.UNSUPPORTED_OPERATION,{operation:"new Contract"});}const n={},i={};Object.keys(this.interface.functions).forEach((e=>{const t=this.interface.functions[e];if(i[e])bn.warn(`Duplicate ABI entry for ${JSON.stringify(e)}`);else {i[e]=!0;{const r=t.name;n[`%${r}`]||(n[`%${r}`]=[]),n[`%${r}`].push(e);}null==this[e]&&ee(this,e,Pn(this,t,!0)),null==this.functions[e]&&ee(this.functions,e,Pn(this,t,!1)),null==this.callStatic[e]&&ee(this.callStatic,e,An(this,t,!0)),null==this.populateTransaction[e]&&ee(this.populateTransaction,e,function(e,t){return function(...r){return En(e,t,r)}}(this,t)),null==this.estimateGas[e]&&ee(this.estimateGas,e,function(e,t){const r=e.signer||e.provider;return function(...n){return vn(this,void 0,void 0,(function*(){r||bn.throwError("estimate require a provider or signer",v.errors.UNSUPPORTED_OPERATION,{operation:"estimateGas"});const i=yield En(e,t,n);return yield r.estimateGas(i)}))}}(this,t));}})),Object.keys(n).forEach((e=>{const t=n[e];if(t.length>1)return;e=e.substring(1);const r=t[0];try{null==this[e]&&ee(this,e,this[r]);}catch(e){}null==this.functions[e]&&ee(this.functions,e,this.functions[r]),null==this.callStatic[e]&&ee(this.callStatic,e,this.callStatic[r]),null==this.populateTransaction[e]&&ee(this.populateTransaction,e,this.populateTransaction[r]),null==this.estimateGas[e]&&ee(this.estimateGas,e,this.estimateGas[r]);}));}static getContractAddress(e){return De(e)}static getInterface(e){return er.isInterface(e)?e:new er(e)}deployed(){return this._deployed()}_deployed(e){return this._deployedPromise||(this.deployTransaction?this._deployedPromise=this.deployTransaction.wait().then((()=>this)):this._deployedPromise=this.provider.getCode(this.address,e).then((e=>("0x"===e&&bn.throwError("contract not deployed",v.errors.UNSUPPORTED_OPERATION,{contractAddress:this.address,operation:"getDeployed"}),this)))),this._deployedPromise}fallback(e){this.signer||bn.throwError("sending a transactions require a signer",v.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction(fallback)"});const t=ie(e||{});return ["from","to"].forEach((function(e){null!=t[e]&&bn.throwError("cannot override "+e,v.errors.UNSUPPORTED_OPERATION,{operation:e});})),t.to=this.resolvedAddress,this.deployed().then((()=>this.signer.sendTransaction(t)))}connect(e){"string"==typeof e&&(e=new ur(e,this.provider));const t=new this.constructor(this.address,this.interface,e);return this.deployTransaction&&ee(t,"deployTransaction",this.deployTransaction),t}attach(e){return new this.constructor(e,this.interface,this.signer||this.provider)}static isIndexed(e){return Xt.isIndexed(e)}_normalizeRunningEvent(e){return this._runningEvents[e.tag]?this._runningEvents[e.tag]:e}_getRunningEvent(e){if("string"==typeof e){if("error"===e)return this._normalizeRunningEvent(new Tn);if("event"===e)return this._normalizeRunningEvent(new Cn("event",null));if("*"===e)return this._normalizeRunningEvent(new Rn(this.address,this.interface));const t=this.interface.getEvent(e);return this._normalizeRunningEvent(new Nn(this.address,this.interface,t))}if(e.topics&&e.topics.length>0){try{const t=e.topics[0];if("string"!=typeof t)throw new Error("invalid topic");const r=this.interface.getEvent(t);return this._normalizeRunningEvent(new Nn(this.address,this.interface,r,e.topics))}catch(e){}const t={address:this.address,topics:e.topics};return this._normalizeRunningEvent(new Cn(xn(t),t))}return this._normalizeRunningEvent(new Rn(this.address,this.interface))}_checkRunningEvents(e){if(0===e.listenerCount()){delete this._runningEvents[e.tag];const t=this._wrappedEmits[e.tag];t&&e.filter&&(this.provider.off(e.filter,t),delete this._wrappedEmits[e.tag]);}}_wrapEvent(e,t,r){const n=le(t);return n.removeListener=()=>{r&&(e.removeListener(r),this._checkRunningEvents(e));},n.getBlock=()=>this.provider.getBlock(t.blockHash),n.getTransaction=()=>this.provider.getTransaction(t.transactionHash),n.getTransactionReceipt=()=>this.provider.getTransactionReceipt(t.transactionHash),e.prepareEvent(n),n}_addEventListener(e,t,r){if(this.provider||bn.throwError("events require a provider or a signer with a provider",v.errors.UNSUPPORTED_OPERATION,{operation:"once"}),e.addListener(t,r),this._runningEvents[e.tag]=e,!this._wrappedEmits[e.tag]){const r=r=>{let n=this._wrapEvent(e,r,t);if(null==n.decodeError)try{const t=e.getEmit(n);this.emit(e.filter,...t);}catch(e){n.decodeError=e.error;}null!=e.filter&&this.emit("event",n),null!=n.decodeError&&this.emit("error",n.decodeError,n);};this._wrappedEmits[e.tag]=r,null!=e.filter&&this.provider.on(e.filter,r);}}queryFilter(e,t,r){const n=this._getRunningEvent(e),i=ie(n.filter);return "string"==typeof t&&T(t,32)?(null!=r&&bn.throwArgumentError("cannot specify toBlock with blockhash","toBlock",r),i.blockHash=t):(i.fromBlock=null!=t?t:0,i.toBlock=null!=r?r:"latest"),this.provider.getLogs(i).then((e=>e.map((e=>this._wrapEvent(n,e,null)))))}on(e,t){return this._addEventListener(this._getRunningEvent(e),t,!1),this}once(e,t){return this._addEventListener(this._getRunningEvent(e),t,!0),this}emit(e,...t){if(!this.provider)return !1;const r=this._getRunningEvent(e),n=r.run(t)>0;return this._checkRunningEvents(r),n}listenerCount(e){return this.provider?null==e?Object.keys(this._runningEvents).reduce(((e,t)=>e+this._runningEvents[t].listenerCount()),0):this._getRunningEvent(e).listenerCount():0}listeners(e){if(!this.provider)return [];if(null==e){const e=[];for(let t in this._runningEvents)this._runningEvents[t].listeners().forEach((t=>{e.push(t);}));return e}return this._getRunningEvent(e).listeners()}removeAllListeners(e){if(!this.provider)return this;if(null==e){for(const e in this._runningEvents){const t=this._runningEvents[e];t.removeAllListeners(),this._checkRunningEvents(t);}return this}const t=this._getRunningEvent(e);return t.removeAllListeners(),this._checkRunningEvents(t),this}off(e,t){if(!this.provider)return this;const r=this._getRunningEvent(e);return r.removeListener(t),this._checkRunningEvents(r),this}removeListener(e,t){return this.off(e,t)}}class In extends Bn{}class On{constructor(e,t,r){let n=null;n="string"==typeof t?t:k(t)?R(t):t&&"string"==typeof t.object?t.object:"!","0x"!==n.substring(0,2)&&(n="0x"+n),(!T(n)||n.length%2)&&bn.throwArgumentError("invalid bytecode","bytecode",t),r&&!lr.isSigner(r)&&bn.throwArgumentError("invalid signer","signer",r),ee(this,"bytecode",n),ee(this,"interface",te(new.target,"getInterface")(e)),ee(this,"signer",r||null);}getDeployTransaction(...e){let t={};if(e.length===this.interface.deploy.inputs.length+1&&"object"==typeof e[e.length-1]){t=ie(e.pop());for(const e in t)if(!wn[e])throw new Error("unknown transaction override "+e)}return ["data","from","to"].forEach((e=>{null!=t[e]&&bn.throwError("cannot override "+e,v.errors.UNSUPPORTED_OPERATION,{operation:e});})),t.value&&(J.from(t.value).isZero()||this.interface.deploy.payable||bn.throwError("non-payable constructor cannot override value",v.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:t.value})),bn.checkArgumentCount(e.length,this.interface.deploy.inputs.length," in Contract constructor"),t.data=R(P([this.bytecode,this.interface.encodeDeploy(e)])),t}deploy(...e){return vn(this,void 0,void 0,(function*(){let t={};e.length===this.interface.deploy.inputs.length+1&&(t=e.pop()),bn.checkArgumentCount(e.length,this.interface.deploy.inputs.length," in Contract constructor");const r=yield Sn(this.signer,e,this.interface.deploy.inputs);r.push(t);const n=this.getDeployTransaction(...r),i=yield this.signer.sendTransaction(n),o=te(this.constructor,"getContractAddress")(i),s=te(this.constructor,"getContract")(o,this.interface,this.signer);return kn(s,i),ee(s,"deployTransaction",i),s}))}attach(e){return this.constructor.getContract(e,this.interface,this.signer)}connect(e){return new this.constructor(this.interface,this.bytecode,e)}static fromSolidity(e,t){null==e&&bn.throwError("missing compiler output",v.errors.MISSING_ARGUMENT,{argument:"compilerOutput"}),"string"==typeof e&&(e=JSON.parse(e));const r=e.abi;let n=null;return e.bytecode?n=e.bytecode:e.evm&&e.evm.bytecode&&(n=e.evm.bytecode),new this(r,n,t)}static getInterface(e){return In.getInterface(e)}static getContractAddress(e){return De(e)}static getContract(e,t,r){return new In(e,t,r)}}const Mn=new v(q),Dn={},Un=J.from(0),Kn=J.from(-1);function Fn(e,t,r,n){const i={fault:t,operation:r};return void 0!==n&&(i.value=n),Mn.throwError(e,v.errors.NUMERIC_FAULT,i)}let Ln="0";for(;Ln.length<256;)Ln+=Ln;function jn(e){if("number"!=typeof e)try{e=J.from(e).toNumber();}catch(e){}return "number"==typeof e&&e>=0&&e<=256&&!(e%1)?"1"+Ln.substring(0,e):Mn.throwArgumentError("invalid decimal size","decimals",e)}function qn(e,t){null==t&&(t=0);const r=jn(t),n=(e=J.from(e)).lt(Un);n&&(e=e.mul(Kn));let i=e.mod(r).toString();for(;i.length<r.length-1;)i="0"+i;i=i.match(/^([0-9]*[1-9]|0)(0*)/)[1];const o=e.div(r).toString();return e=1===r.length?o:o+"."+i,n&&(e="-"+e),e}function zn(e,t){null==t&&(t=0);const r=jn(t);"string"==typeof e&&e.match(/^-?[0-9.]+$/)||Mn.throwArgumentError("invalid decimal value","value",e);const n="-"===e.substring(0,1);n&&(e=e.substring(1)),"."===e&&Mn.throwArgumentError("missing value","value",e);const i=e.split(".");i.length>2&&Mn.throwArgumentError("too many decimal points","value",e);let o=i[0],s=i[1];for(o||(o="0"),s||(s="0");"0"===s[s.length-1];)s=s.substring(0,s.length-1);for(s.length>r.length-1&&Fn("fractional component exceeds decimals","underflow","parseFixed"),""===s&&(s="0");s.length<r.length-1;)s+="0";const a=J.from(o),l=J.from(s);let u=a.mul(r).add(l);return n&&(u=u.mul(Kn)),u}class Wn{constructor(e,t,r,n){e!==Dn&&Mn.throwError("cannot use FixedFormat constructor; use FixedFormat.from",v.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=t,this.width=r,this.decimals=n,this.name=(t?"":"u")+"fixed"+String(r)+"x"+String(n),this._multiplier=jn(n),Object.freeze(this);}static from(e){if(e instanceof Wn)return e;"number"==typeof e&&(e=`fixed128x${e}`);let t=!0,r=128,n=18;if("string"==typeof e)if("fixed"===e);else if("ufixed"===e)t=!1;else {const i=e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);i||Mn.throwArgumentError("invalid fixed format","format",e),t="u"!==i[1],r=parseInt(i[2]),n=parseInt(i[3]);}else if(e){const i=(t,r,n)=>null==e[t]?n:(typeof e[t]!==r&&Mn.throwArgumentError("invalid fixed format ("+t+" not "+r+")","format."+t,e[t]),e[t]);t=i("signed","boolean",t),r=i("width","number",r),n=i("decimals","number",n);}return r%8&&Mn.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",r),n>80&&Mn.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",n),new Wn(Dn,t,r,n)}}class Gn{constructor(e,t,r,n){Mn.checkNew(new.target,Gn),e!==Dn&&Mn.throwError("cannot use FixedNumber constructor; use FixedNumber.from",v.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=n,this._hex=t,this._value=r,this._isFixedNumber=!0,Object.freeze(this);}_checkFormat(e){this.format.name!==e.format.name&&Mn.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",e);}addUnsafe(e){this._checkFormat(e);const t=zn(this._value,this.format.decimals),r=zn(e._value,e.format.decimals);return Gn.fromValue(t.add(r),this.format.decimals,this.format)}subUnsafe(e){this._checkFormat(e);const t=zn(this._value,this.format.decimals),r=zn(e._value,e.format.decimals);return Gn.fromValue(t.sub(r),this.format.decimals,this.format)}mulUnsafe(e){this._checkFormat(e);const t=zn(this._value,this.format.decimals),r=zn(e._value,e.format.decimals);return Gn.fromValue(t.mul(r).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(e){this._checkFormat(e);const t=zn(this._value,this.format.decimals),r=zn(e._value,e.format.decimals);return Gn.fromValue(t.mul(this.format._multiplier).div(r),this.format.decimals,this.format)}floor(){const e=this.toString().split(".");1===e.length&&e.push("0");let t=Gn.from(e[0],this.format);const r=!e[1].match(/^(0*)$/);return this.isNegative()&&r&&(t=t.subUnsafe(Vn.toFormat(t.format))),t}ceiling(){const e=this.toString().split(".");1===e.length&&e.push("0");let t=Gn.from(e[0],this.format);const r=!e[1].match(/^(0*)$/);return !this.isNegative()&&r&&(t=t.addUnsafe(Vn.toFormat(t.format))),t}round(e){null==e&&(e=0);const t=this.toString().split(".");if(1===t.length&&t.push("0"),(e<0||e>80||e%1)&&Mn.throwArgumentError("invalid decimal count","decimals",e),t[1].length<=e)return this;const r=Gn.from("1"+Ln.substring(0,e),this.format),n=Hn.toFormat(this.format);return this.mulUnsafe(r).addUnsafe(n).floor().divUnsafe(r)}isZero(){return "0.0"===this._value||"0"===this._value}isNegative(){return "-"===this._value[0]}toString(){return this._value}toHexString(e){return null==e?this._hex:(e%8&&Mn.throwArgumentError("invalid byte width","width",e),U(J.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString(),e/8))}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(e){return Gn.fromString(this._value,e)}static fromValue(e,t,r){return null!=r||null==t||function(e){return null!=e&&(J.isBigNumber(e)||"number"==typeof e&&e%1==0||"string"==typeof e&&!!e.match(/^-?[0-9]+$/)||T(e)||"bigint"==typeof e||k(e))}(t)||(r=t,t=null),null==t&&(t=0),null==r&&(r="fixed"),Gn.fromString(qn(e,t),Wn.from(r))}static fromString(e,t){null==t&&(t="fixed");const r=Wn.from(t),n=zn(e,r.decimals);!r.signed&&n.lt(Un)&&Fn("unsigned value cannot be negative","overflow","value",e);let i=null;r.signed?i=n.toTwos(r.width).toHexString():(i=n.toHexString(),i=U(i,r.width/8));const o=qn(n,r.decimals);return new Gn(Dn,i,o,r)}static fromBytes(e,t){null==t&&(t="fixed");const r=Wn.from(t);if(A(e).length>r.width/8)throw new Error("overflow");let n=J.from(e);r.signed&&(n=n.fromTwos(r.width));const i=n.toTwos((r.signed?0:1)+r.width).toHexString(),o=qn(n,r.decimals);return new Gn(Dn,i,o,r)}static from(e,t){if("string"==typeof e)return Gn.fromString(e,t);if(k(e))return Gn.fromBytes(e,t);try{return Gn.fromValue(e,0,t)}catch(e){if(e.code!==v.errors.INVALID_ARGUMENT)throw e}return Mn.throwArgumentError("invalid FixedNumber value","value",e)}static isFixedNumber(e){return !(!e||!e._isFixedNumber)}}const Vn=Gn.from(1),Hn=Gn.from("0.5");function Jn(e){return "string"==typeof e&&(e=We(e)),ve(P([We("Ethereum Signed Message:\n"),We(String(e.length)),e]))}const $n="hash/5.5.0";const Zn=new v($n),Xn=new Uint8Array(32);Xn.fill(0);const Qn=J.from(-1),Yn=J.from(0),ei=J.from(1),ti=J.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),ri=U(ei.toHexString(),32),ni=U(Yn.toHexString(),32),ii={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},oi=["name","version","chainId","verifyingContract","salt"];function si(e){return function(t){return "string"!=typeof t&&Zn.throwArgumentError(`invalid domain value for ${JSON.stringify(e)}`,`domain.${e}`,t),t}}const ai={name:si("name"),version:si("version"),chainId:function(e){try{return J.from(e).toString()}catch(e){}return Zn.throwArgumentError('invalid domain value for "chainId"',"domain.chainId",e)},verifyingContract:function(e){try{return Ie(e).toLowerCase()}catch(e){}return Zn.throwArgumentError('invalid domain value "verifyingContract"',"domain.verifyingContract",e)},salt:function(e){try{const t=A(e);if(32!==t.length)throw new Error("bad length");return R(t)}catch(e){}return Zn.throwArgumentError('invalid domain value "salt"',"domain.salt",e)}};function li(e){{const t=e.match(/^(u?)int(\d*)$/);if(t){const r=""===t[1],n=parseInt(t[2]||"256");(n%8!=0||n>256||t[2]&&t[2]!==String(n))&&Zn.throwArgumentError("invalid numeric width","type",e);const i=ti.mask(r?n-1:n),o=r?i.add(ei).mul(Qn):Yn;return function(t){const r=J.from(t);return (r.lt(o)||r.gt(i))&&Zn.throwArgumentError(`value out-of-bounds for ${e}`,"value",t),U(r.toTwos(256).toHexString(),32)}}}{const t=e.match(/^bytes(\d+)$/);if(t){const r=parseInt(t[1]);return (0===r||r>32||t[1]!==String(r))&&Zn.throwArgumentError("invalid bytes width","type",e),function(t){return A(t).length!==r&&Zn.throwArgumentError(`invalid length for ${e}`,"value",t),function(e){const t=A(e),r=t.length%32;return r?O([t,Xn.slice(r)]):R(t)}(t)}}}switch(e){case"address":return function(e){return U(Ie(e),32)};case"bool":return function(e){return e?ri:ni};case"bytes":return function(e){return ve(e)};case"string":return function(e){return Ze(e)}}return null}function ui(e,t){return `${e}(${t.map((({name:e,type:t})=>t+" "+e)).join(",")})`}class ci{constructor(e){ee(this,"types",Object.freeze(le(e))),ee(this,"_encoderCache",{}),ee(this,"_types",{});const t={},r={},n={};Object.keys(e).forEach((e=>{t[e]={},r[e]=[],n[e]={};}));for(const n in e){const i={};e[n].forEach((o=>{i[o.name]&&Zn.throwArgumentError(`duplicate variable name ${JSON.stringify(o.name)} in ${JSON.stringify(n)}`,"types",e),i[o.name]=!0;const s=o.type.match(/^([^\x5b]*)(\x5b|$)/)[1];s===n&&Zn.throwArgumentError(`circular type reference to ${JSON.stringify(s)}`,"types",e),li(s)||(r[s]||Zn.throwArgumentError(`unknown type ${JSON.stringify(s)}`,"types",e),r[s].push(n),t[n][s]=!0);}));}const i=Object.keys(r).filter((e=>0===r[e].length));0===i.length?Zn.throwArgumentError("missing primary type","types",e):i.length>1&&Zn.throwArgumentError(`ambiguous primary types or unused types: ${i.map((e=>JSON.stringify(e))).join(", ")}`,"types",e),ee(this,"primaryType",i[0]),function i(o,s){s[o]&&Zn.throwArgumentError(`circular type reference to ${JSON.stringify(o)}`,"types",e),s[o]=!0,Object.keys(t[o]).forEach((e=>{r[e]&&(i(e,s),Object.keys(s).forEach((t=>{n[t][e]=!0;})));})),delete s[o];}(this.primaryType,{});for(const t in n){const r=Object.keys(n[t]);r.sort(),this._types[t]=ui(t,e[t])+r.map((t=>ui(t,e[t]))).join("");}}getEncoder(e){let t=this._encoderCache[e];return t||(t=this._encoderCache[e]=this._getEncoder(e)),t}_getEncoder(e){{const t=li(e);if(t)return t}const t=e.match(/^(.*)(\x5b(\d*)\x5d)$/);if(t){const e=t[1],r=this.getEncoder(e),n=parseInt(t[3]);return t=>{n>=0&&t.length!==n&&Zn.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",t);let i=t.map(r);return this._types[e]&&(i=i.map(ve)),ve(O(i))}}const r=this.types[e];if(r){const t=Ze(this._types[e]);return e=>{const n=r.map((({name:t,type:r})=>{const n=this.getEncoder(r)(e[t]);return this._types[r]?ve(n):n}));return n.unshift(t),O(n)}}return Zn.throwArgumentError(`unknown type: ${e}`,"type",e)}encodeType(e){const t=this._types[e];return t||Zn.throwArgumentError(`unknown type: ${JSON.stringify(e)}`,"name",e),t}encodeData(e,t){return this.getEncoder(e)(t)}hashStruct(e,t){return ve(this.encodeData(e,t))}encode(e){return this.encodeData(this.primaryType,e)}hash(e){return this.hashStruct(this.primaryType,e)}_visit(e,t,r){if(li(e))return r(e,t);const n=e.match(/^(.*)(\x5b(\d*)\x5d)$/);if(n){const e=n[1],i=parseInt(n[3]);return i>=0&&t.length!==i&&Zn.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",t),t.map((t=>this._visit(e,t,r)))}const i=this.types[e];return i?i.reduce(((e,{name:n,type:i})=>(e[n]=this._visit(i,t[n],r),e)),{}):Zn.throwArgumentError(`unknown type: ${e}`,"type",e)}visit(e,t){return this._visit(this.primaryType,e,t)}static from(e){return new ci(e)}static getPrimaryType(e){return ci.from(e).primaryType}static hashStruct(e,t,r){return ci.from(t).hashStruct(e,r)}static hashDomain(e){const t=[];for(const r in e){const n=ii[r];n||Zn.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(r)}`,"domain",e),t.push({name:r,type:n});}return t.sort(((e,t)=>oi.indexOf(e.name)-oi.indexOf(t.name))),ci.hashStruct("EIP712Domain",{EIP712Domain:t},e)}static encode(e,t,r){return O(["0x1901",ci.hashDomain(e),ci.from(t).hash(r)])}static hash(e,t,r){return ve(ci.encode(e,t,r))}static resolveNames(e,t,r,n){return i=this,o=void 0,a=function*(){e=ie(e);const i={};e.verifyingContract&&!T(e.verifyingContract,20)&&(i[e.verifyingContract]="0x");const o=ci.from(t);o.visit(r,((e,t)=>("address"!==e||T(t,20)||(i[t]="0x"),t)));for(const e in i)i[e]=yield n(e);return e.verifyingContract&&i[e.verifyingContract]&&(e.verifyingContract=i[e.verifyingContract]),r=o.visit(r,((e,t)=>"address"===e&&i[t]?i[t]:t)),{domain:e,value:r}},new((s=void 0)||(s=Promise))((function(e,t){function r(e){try{l(a.next(e));}catch(e){t(e);}}function n(e){try{l(a.throw(e));}catch(e){t(e);}}function l(t){var i;t.done?e(t.value):(i=t.value,i instanceof s?i:new s((function(e){e(i);}))).then(r,n);}l((a=a.apply(i,o||[])).next());}));var i,o,s,a;}static getPayload(e,t,r){ci.hashDomain(e);const n={},i=[];oi.forEach((t=>{const r=e[t];null!=r&&(n[t]=ai[t](r),i.push({name:t,type:ii[t]}));}));const o=ci.from(t),s=ie(t);return s.EIP712Domain?Zn.throwArgumentError("types must not contain EIP712Domain type","types.EIP712Domain",t):s.EIP712Domain=i,o.encode(r),{types:s,domain:n,primaryType:o.primaryType,message:o.visit(r,((e,t)=>{if(e.match(/^bytes(\d*)/))return R(A(t));if(e.match(/^u?int/))return J.from(t).toString();switch(e){case"address":return t.toLowerCase();case"bool":return !!t;case"string":return "string"!=typeof t&&Zn.throwArgumentError("invalid string","value",t),t}return Zn.throwArgumentError("unsupported type","type",e)}))}}}class hi{constructor(e){ee(this,"alphabet",e),ee(this,"base",e.length),ee(this,"_alphabetMap",{}),ee(this,"_leader",e.charAt(0));for(let t=0;t<e.length;t++)this._alphabetMap[e.charAt(t)]=t;}encode(e){let t=A(e);if(0===t.length)return "";let r=[0];for(let e=0;e<t.length;++e){let n=t[e];for(let e=0;e<r.length;++e)n+=r[e]<<8,r[e]=n%this.base,n=n/this.base|0;for(;n>0;)r.push(n%this.base),n=n/this.base|0;}let n="";for(let e=0;0===t[e]&&e<t.length-1;++e)n+=this._leader;for(let e=r.length-1;e>=0;--e)n+=this.alphabet[r[e]];return n}decode(e){if("string"!=typeof e)throw new TypeError("Expected String");let t=[];if(0===e.length)return new Uint8Array(t);t.push(0);for(let r=0;r<e.length;r++){let n=this._alphabetMap[e[r]];if(void 0===n)throw new Error("Non-base"+this.base+" character");let i=n;for(let e=0;e<t.length;++e)i+=t[e]*this.base,t[e]=255&i,i>>=8;for(;i>0;)t.push(255&i),i>>=8;}for(let r=0;e[r]===this._leader&&r<e.length-1;++r)t.push(0);return A(new Uint8Array(t.reverse()))}}new hi("abcdefghijklmnopqrstuvwxyz234567");const di=new hi("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");var fi;!function(e){e.sha256="sha256",e.sha512="sha512";}(fi||(fi={}));const pi=new v("sha2/5.5.0");function mi(e){return "0x"+hr().ripemd160().update(A(e)).digest("hex")}function yi(e){return "0x"+hr().sha256().update(A(e)).digest("hex")}function gi(e){return "0x"+hr().sha512().update(A(e)).digest("hex")}function vi(e,t,r){return fi[e]||pi.throwError("unsupported algorithm "+e,v.errors.UNSUPPORTED_OPERATION,{operation:"hmac",algorithm:e}),"0x"+hr().hmac(hr()[e],A(t)).update(A(r)).digest("hex")}function bi(e,t,r,n,i){let o;e=A(e),t=A(t);let s=1;const a=new Uint8Array(n),l=new Uint8Array(t.length+4);let u,c;l.set(t);for(let h=1;h<=s;h++){l[t.length]=h>>24&255,l[t.length+1]=h>>16&255,l[t.length+2]=h>>8&255,l[t.length+3]=255&h;let d=A(vi(i,e,l));o||(o=d.length,c=new Uint8Array(o),s=Math.ceil(n/o),u=n-(s-1)*o),c.set(d);for(let t=1;t<r;t++){d=A(vi(i,e,d));for(let e=0;e<o;e++)c[e]^=d[e];}const f=(h-1)*o,p=h===s?u:o;a.set(A(c).slice(0,p),f);}return R(a)}const wi=new v("wordlists/5.5.0");class _i{constructor(e){wi.checkAbstract(new.target,_i),ee(this,"locale",e);}split(e){return e.toLowerCase().split(/ +/g)}join(e){return e.join(" ")}static check(e){const t=[];for(let r=0;r<2048;r++){const n=e.getWord(r);if(r!==e.getWordIndex(n))return "0x";t.push(n);}return Ze(t.join("\n")+"\n")}static register(e,t){t||(t=e.locale);}}let Si=null;function Ei(e){if(null==Si&&(Si="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"!==_i.check(e)))throw Si=null,new Error("BIP39 Wordlist for en (English) FAILED")}const ki=new class extends _i{constructor(){super("en");}getWord(e){return Ei(this),Si[e]}getWordIndex(e){return Ei(this),Si.indexOf(e)}};_i.register(ki);const Ai={en:ki},Pi=new v("hdnode/5.5.0"),xi=J.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Ci=We("Bitcoin seed"),Ti=2147483648;function Ni(e){return (1<<e)-1<<8-e}function Ri(e){return U(R(e),32)}function Bi(e){return di.encode(P([e,I(yi(yi(e)),0,4)]))}function Ii(e){if(null==e)return Ai.en;if("string"==typeof e){const t=Ai[e];return null==t&&Pi.throwArgumentError("unknown locale","wordlist",e),t}return e}const Oi={},Mi="m/44'/60'/0'/0/0";class Di{constructor(e,t,r,n,i,o,s,a){if(Pi.checkNew(new.target,Di),e!==Oi)throw new Error("HDNode constructor cannot be called directly");if(t){const e=new Xr(t);ee(this,"privateKey",e.privateKey),ee(this,"publicKey",e.compressedPublicKey);}else ee(this,"privateKey",null),ee(this,"publicKey",R(r));ee(this,"parentFingerprint",n),ee(this,"fingerprint",I(mi(yi(this.publicKey)),0,4)),ee(this,"address",an(this.publicKey)),ee(this,"chainCode",i),ee(this,"index",o),ee(this,"depth",s),null==a?(ee(this,"mnemonic",null),ee(this,"path",null)):"string"==typeof a?(ee(this,"mnemonic",null),ee(this,"path",a)):(ee(this,"mnemonic",a),ee(this,"path",a.path));}get extendedKey(){if(this.depth>=256)throw new Error("Depth too large!");return Bi(P([null!=this.privateKey?"0x0488ADE4":"0x0488B21E",R(this.depth),this.parentFingerprint,U(R(this.index),4),this.chainCode,null!=this.privateKey?P(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new Di(Oi,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(e){if(e>4294967295)throw new Error("invalid index - "+String(e));let t=this.path;t&&(t+="/"+(2147483647&e));const r=new Uint8Array(37);if(e&Ti){if(!this.privateKey)throw new Error("cannot derive child of neutered node");r.set(A(this.privateKey),1),t&&(t+="'");}else r.set(A(this.publicKey));for(let t=24;t>=0;t-=8)r[33+(t>>3)]=e>>24-t&255;const n=A(vi(fi.sha512,this.chainCode,r)),i=n.slice(0,32),o=n.slice(32);let s=null,a=null;this.privateKey?s=Ri(J.from(i).add(this.privateKey).mod(xi)):a=new Xr(R(i))._addPoint(this.publicKey);let l=t;const u=this.mnemonic;return u&&(l=Object.freeze({phrase:u.phrase,path:t,locale:u.locale||"en"})),new Di(Oi,s,a,this.fingerprint,Ri(o),e,this.depth+1,l)}derivePath(e){const t=e.split("/");if(0===t.length||"m"===t[0]&&0!==this.depth)throw new Error("invalid path - "+e);"m"===t[0]&&t.shift();let r=this;for(let e=0;e<t.length;e++){const n=t[e];if(n.match(/^[0-9]+'$/)){const e=parseInt(n.substring(0,n.length-1));if(e>=Ti)throw new Error("invalid path index - "+n);r=r._derive(Ti+e);}else {if(!n.match(/^[0-9]+$/))throw new Error("invalid path component - "+n);{const e=parseInt(n);if(e>=Ti)throw new Error("invalid path index - "+n);r=r._derive(e);}}}return r}static _fromSeed(e,t){const r=A(e);if(r.length<16||r.length>64)throw new Error("invalid seed");const n=A(vi(fi.sha512,Ci,r));return new Di(Oi,Ri(n.slice(0,32)),null,"0x00000000",Ri(n.slice(32)),0,0,t)}static fromMnemonic(e,t,r){return e=Fi(Ki(e,r=Ii(r)),r),Di._fromSeed(Ui(e,t),{phrase:e,path:"m",locale:r.locale})}static fromSeed(e){return Di._fromSeed(e,null)}static fromExtendedKey(e){const t=di.decode(e);82===t.length&&Bi(t.slice(0,78))===e||Pi.throwArgumentError("invalid extended key","extendedKey","[REDACTED]");const r=t[4],n=R(t.slice(5,9)),i=parseInt(R(t.slice(9,13)).substring(2),16),o=R(t.slice(13,45)),s=t.slice(45,78);switch(R(t.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new Di(Oi,null,R(s),n,o,i,r,null);case"0x0488ade4":case"0x04358394 ":if(0!==s[0])break;return new Di(Oi,R(s.slice(1)),null,n,o,i,r,null)}return Pi.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function Ui(e,t){t||(t="");const r=We("mnemonic"+t,Fe.NFKD);return bi(We(e,Fe.NFKD),r,2048,64,"sha512")}function Ki(e,t){t=Ii(t),Pi.checkNormalize();const r=t.split(e);if(r.length%3!=0)throw new Error("invalid mnemonic");const n=A(new Uint8Array(Math.ceil(11*r.length/8)));let i=0;for(let e=0;e<r.length;e++){let o=t.getWordIndex(r[e].normalize("NFKD"));if(-1===o)throw new Error("invalid mnemonic");for(let e=0;e<11;e++)o&1<<10-e&&(n[i>>3]|=1<<7-i%8),i++;}const o=32*r.length/3,s=Ni(r.length/3);if((A(yi(n.slice(0,o/8)))[0]&s)!=(n[n.length-1]&s))throw new Error("invalid checksum");return R(n.slice(0,o/8))}function Fi(e,t){if(t=Ii(t),(e=A(e)).length%4!=0||e.length<16||e.length>32)throw new Error("invalid entropy");const r=[0];let n=11;for(let t=0;t<e.length;t++)n>8?(r[r.length-1]<<=8,r[r.length-1]|=e[t],n-=8):(r[r.length-1]<<=n,r[r.length-1]|=e[t]>>8-n,r.push(e[t]&(1<<8-n)-1),n+=3);const i=e.length/4,o=A(yi(e))[0]&Ni(i);return r[r.length-1]<<=i,r[r.length-1]|=o>>8-i,t.join(r.map((e=>t.getWord(e))))}function Li(e,t){try{return Ki(e,t),!0}catch(e){}return !1}function ji(e){return ("number"!=typeof e||e<0||e>=Ti||e%1)&&Pi.throwArgumentError("invalid account index","index",e),`m/44'/60'/${e}'/0/0`}const qi=new v("random/5.5.1"),zi=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==r.g)return r.g;throw new Error("unable to locate global object")}();let Wi=zi.crypto||zi.msCrypto;function Gi(e){(e<=0||e>1024||e%1||e!=e)&&qi.throwArgumentError("invalid length","length",e);const t=new Uint8Array(e);return Wi.getRandomValues(t),A(t)}Wi&&Wi.getRandomValues||(qi.warn("WARNING: Missing strong random number source"),Wi={getRandomValues:function(e){return qi.throwError("no secure random source avaialble",v.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}});var Vi=r(8826),Hi=r.n(Vi);const Ji="json-wallets/5.5.0";function $i(e){return "string"==typeof e&&"0x"!==e.substring(0,2)&&(e="0x"+e),A(e)}function Zi(e,t){for(e=String(e);e.length<t;)e="0"+e;return e}function Xi(e){return "string"==typeof e?We(e,Fe.NFKC):A(e)}function Qi(e,t){let r=e;const n=t.toLowerCase().split("/");for(let e=0;e<n.length;e++){let t=null;for(const i in r)if(i.toLowerCase()===n[e]){t=r[i];break}if(null===t)return null;r=t;}return r}function Yi(e){const t=A(e);t[6]=15&t[6]|64,t[8]=63&t[8]|128;const r=R(t);return [r.substring(2,10),r.substring(10,14),r.substring(14,18),r.substring(18,22),r.substring(22,34)].join("-")}const eo=new v(Ji);class to extends ue{isCrowdsaleAccount(e){return !(!e||!e._isCrowdsaleAccount)}}function ro(e,t){const r=JSON.parse(e);t=Xi(t);const n=Ie(Qi(r,"ethaddr")),i=$i(Qi(r,"encseed"));i&&i.length%16==0||eo.throwArgumentError("invalid encseed","json",e);const o=A(bi(t,t,2e3,32,"sha256")).slice(0,16),s=i.slice(0,16),a=i.slice(16),l=new(Hi().ModeOfOperation.cbc)(o,s),u=Hi().padding.pkcs7.strip(A(l.decrypt(a)));let c="";for(let e=0;e<u.length;e++)c+=String.fromCharCode(u[e]);const h=ve(We(c));return new to({_isCrowdsaleAccount:!0,address:n,privateKey:h})}function no(e){let t=null;try{t=JSON.parse(e);}catch(e){return !1}return t.encseed&&t.ethaddr}function io(e){let t=null;try{t=JSON.parse(e);}catch(e){return !1}return !(!t.version||parseInt(t.version)!==t.version||3!==parseInt(t.version))}function oo(e){if(no(e))try{return Ie(JSON.parse(e).ethaddr)}catch(e){return null}if(io(e))try{return Ie(JSON.parse(e).address)}catch(e){return null}return null}var so=r(7635),ao=r.n(so);const lo=new v(Ji);function uo(e){return null!=e&&e.mnemonic&&e.mnemonic.phrase}class co extends ue{isKeystoreAccount(e){return !(!e||!e._isKeystoreAccount)}}function ho(e,t){const r=$i(Qi(e,"crypto/ciphertext"));if(R(ve(P([t.slice(16,32),r]))).substring(2)!==Qi(e,"crypto/mac").toLowerCase())throw new Error("invalid password");const n=function(e,t,r){if("aes-128-ctr"===Qi(e,"crypto/cipher")){const n=$i(Qi(e,"crypto/cipherparams/iv")),i=new(Hi().Counter)(n);return A(new(Hi().ModeOfOperation.ctr)(t,i).decrypt(r))}return null}(e,t.slice(0,16),r);n||lo.throwError("unsupported cipher",v.errors.UNSUPPORTED_OPERATION,{operation:"decrypt"});const i=t.slice(32,64),o=an(n);if(e.address){let t=e.address.toLowerCase();if("0x"!==t.substring(0,2)&&(t="0x"+t),Ie(t)!==o)throw new Error("address mismatch")}const s={_isKeystoreAccount:!0,address:o,privateKey:R(n)};if("0.1"===Qi(e,"x-ethers/version")){const t=$i(Qi(e,"x-ethers/mnemonicCiphertext")),r=$i(Qi(e,"x-ethers/mnemonicCounter")),n=new(Hi().Counter)(r),o=new(Hi().ModeOfOperation.ctr)(i,n),a=Qi(e,"x-ethers/path")||Mi,l=Qi(e,"x-ethers/locale")||"en",u=A(o.decrypt(t));try{const e=Fi(u,l),t=Di.fromMnemonic(e,null,l).derivePath(a);if(t.privateKey!=s.privateKey)throw new Error("mnemonic mismatch");s.mnemonic=t.mnemonic;}catch(e){if(e.code!==v.errors.INVALID_ARGUMENT||"wordlist"!==e.argument)throw e}}return new co(s)}function fo(e,t,r,n,i){return A(bi(e,t,r,n,i))}function po(e,t,r,n,i){return Promise.resolve(fo(e,t,r,n,i))}function mo(e,t,r,n,i){const o=Xi(t),s=Qi(e,"crypto/kdf");if(s&&"string"==typeof s){const t=function(e,t){return lo.throwArgumentError("invalid key-derivation function parameters",e,t)};if("scrypt"===s.toLowerCase()){const r=$i(Qi(e,"crypto/kdfparams/salt")),a=parseInt(Qi(e,"crypto/kdfparams/n")),l=parseInt(Qi(e,"crypto/kdfparams/r")),u=parseInt(Qi(e,"crypto/kdfparams/p"));a&&l&&u||t("kdf",s),0!=(a&a-1)&&t("N",a);const c=parseInt(Qi(e,"crypto/kdfparams/dklen"));return 32!==c&&t("dklen",c),n(o,r,a,l,u,64,i)}if("pbkdf2"===s.toLowerCase()){const n=$i(Qi(e,"crypto/kdfparams/salt"));let i=null;const s=Qi(e,"crypto/kdfparams/prf");"hmac-sha256"===s?i="sha256":"hmac-sha512"===s?i="sha512":t("prf",s);const a=parseInt(Qi(e,"crypto/kdfparams/c")),l=parseInt(Qi(e,"crypto/kdfparams/dklen"));return 32!==l&&t("dklen",l),r(o,n,a,l,i)}}return lo.throwArgumentError("unsupported key-derivation function","kdf",s)}function yo(e,t,r){if(no(e)){r&&r(0);const n=ro(e,t);return r&&r(1),Promise.resolve(n)}return io(e)?function(e,t,r){return n=this,i=void 0,s=function*(){const n=JSON.parse(e);return ho(n,yield mo(n,t,po,ao().scrypt,r))},new((o=void 0)||(o=Promise))((function(e,t){function r(e){try{l(s.next(e));}catch(e){t(e);}}function a(e){try{l(s.throw(e));}catch(e){t(e);}}function l(t){var n;t.done?e(t.value):(n=t.value,n instanceof o?n:new o((function(e){e(n);}))).then(r,a);}l((s=s.apply(n,i||[])).next());}));var n,i,o,s;}(e,t,r):Promise.reject(new Error("invalid JSON wallet"))}var go=function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};const vo=new v("wallet/5.5.0");class bo extends lr{constructor(e,t){if(vo.checkNew(new.target,bo),super(),null!=(r=e)&&T(r.privateKey,32)&&null!=r.address){const t=new Xr(e.privateKey);if(ee(this,"_signingKey",(()=>t)),ee(this,"address",an(this.publicKey)),this.address!==Ie(e.address)&&vo.throwArgumentError("privateKey/address mismatch","privateKey","[REDACTED]"),function(e){const t=e.mnemonic;return t&&t.phrase}(e)){const t=e.mnemonic;ee(this,"_mnemonic",(()=>({phrase:t.phrase,path:t.path||Mi,locale:t.locale||"en"})));const r=this.mnemonic;an(Di.fromMnemonic(r.phrase,null,r.locale).derivePath(r.path).privateKey)!==this.address&&vo.throwArgumentError("mnemonic/address mismatch","privateKey","[REDACTED]");}else ee(this,"_mnemonic",(()=>null));}else {if(Xr.isSigningKey(e))"secp256k1"!==e.curve&&vo.throwArgumentError("unsupported curve; must be secp256k1","privateKey","[REDACTED]"),ee(this,"_signingKey",(()=>e));else {"string"==typeof e&&e.match(/^[0-9a-f]*$/i)&&64===e.length&&(e="0x"+e);const t=new Xr(e);ee(this,"_signingKey",(()=>t));}ee(this,"_mnemonic",(()=>null)),ee(this,"address",an(this.publicKey));}var r;t&&!nr.isProvider(t)&&vo.throwArgumentError("invalid provider","provider",t),ee(this,"provider",t||null);}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(e){return new bo(this,e)}signTransaction(e){return re(e).then((t=>{null!=t.from&&(Ie(t.from)!==this.address&&vo.throwArgumentError("transaction from address mismatch","transaction.from",e.from),delete t.from);const r=this._signingKey().signDigest(ve(mn(t)));return mn(t,r)}))}signMessage(e){return go(this,void 0,void 0,(function*(){return F(this._signingKey().signDigest(Jn(e)))}))}_signTypedData(e,t,r){return go(this,void 0,void 0,(function*(){const n=yield ci.resolveNames(e,t,r,(e=>(null==this.provider&&vo.throwError("cannot resolve ENS names without a provider",v.errors.UNSUPPORTED_OPERATION,{operation:"resolveName",value:e}),this.provider.resolveName(e))));return F(this._signingKey().signDigest(ci.hash(n.domain,t,n.value)))}))}encrypt(e,t,r){if("function"!=typeof t||r||(r=t,t={}),r&&"function"!=typeof r)throw new Error("invalid callback");return t||(t={}),function(e,t,r,n){try{if(Ie(e.address)!==an(e.privateKey))throw new Error("address/privateKey mismatch");if(uo(e)){const t=e.mnemonic;if(Di.fromMnemonic(t.phrase,null,t.locale).derivePath(t.path||Mi).privateKey!=e.privateKey)throw new Error("mnemonic mismatch")}}catch(e){return Promise.reject(e)}"function"!=typeof r||n||(n=r,r={}),r||(r={});const i=A(e.privateKey),o=Xi(t);let s=null,a=null,l=null;if(uo(e)){const t=e.mnemonic;s=A(Ki(t.phrase,t.locale||"en")),a=t.path||Mi,l=t.locale||"en";}let u=r.client;u||(u="ethers.js");let c=null;c=r.salt?A(r.salt):Gi(32);let h=null;if(r.iv){if(h=A(r.iv),16!==h.length)throw new Error("invalid iv")}else h=Gi(16);let d=null;if(r.uuid){if(d=A(r.uuid),16!==d.length)throw new Error("invalid uuid")}else d=Gi(16);let f=1<<17,p=8,m=1;return r.scrypt&&(r.scrypt.N&&(f=r.scrypt.N),r.scrypt.r&&(p=r.scrypt.r),r.scrypt.p&&(m=r.scrypt.p)),ao().scrypt(o,c,f,p,m,64,n).then((t=>{const r=(t=A(t)).slice(0,16),n=t.slice(16,32),o=t.slice(32,64),y=new(Hi().Counter)(h),g=A(new(Hi().ModeOfOperation.ctr)(r,y).encrypt(i)),v=ve(P([n,g])),b={address:e.address.substring(2).toLowerCase(),id:Yi(d),version:3,Crypto:{cipher:"aes-128-ctr",cipherparams:{iv:R(h).substring(2)},ciphertext:R(g).substring(2),kdf:"scrypt",kdfparams:{salt:R(c).substring(2),n:f,dklen:32,p:m,r:p},mac:v.substring(2)}};if(s){const e=Gi(16),t=new(Hi().Counter)(e),r=A(new(Hi().ModeOfOperation.ctr)(o,t).encrypt(s)),n=new Date,i=n.getUTCFullYear()+"-"+Zi(n.getUTCMonth()+1,2)+"-"+Zi(n.getUTCDate(),2)+"T"+Zi(n.getUTCHours(),2)+"-"+Zi(n.getUTCMinutes(),2)+"-"+Zi(n.getUTCSeconds(),2)+".0Z";b["x-ethers"]={client:u,gethFilename:"UTC--"+i+"--"+b.address,mnemonicCounter:R(e).substring(2),mnemonicCiphertext:R(r).substring(2),path:a,locale:l,version:"0.1"};}return JSON.stringify(b)}))}(this,e,t,r)}static createRandom(e){let t=Gi(16);e||(e={}),e.extraEntropy&&(t=A(I(ve(P([t,e.extraEntropy])),0,16)));const r=Fi(t,e.locale);return bo.fromMnemonic(r,e.path,e.locale)}static fromEncryptedJson(e,t,r){return yo(e,t,r).then((e=>new bo(e)))}static fromEncryptedJsonSync(e,t){return new bo(function(e,t){if(no(e))return ro(e,t);if(io(e))return function(e,t){const r=JSON.parse(e);return ho(r,mo(r,t,fo,ao().syncScrypt))}(e,t);throw new Error("invalid JSON wallet")}(e,t))}static fromMnemonic(e,t,r){return t||(t=Mi),new bo(Di.fromMnemonic(e,null,r).derivePath(t))}}function wo(e,t){return ln(Jn(e),t)}function _o(e,t,r,n){return ln(ci.hash(e,t,r),n)}const So="0x0000000000000000000000000000000000000000",Eo="0x0000000000000000000000000000000000000000000000000000000000000000",ko="Ξ",Ao=new v("networks/5.5.2");function Po(e){const t=function(t,r){null==r&&(r={});const n=[];if(t.InfuraProvider)try{n.push(new t.InfuraProvider(e,r.infura));}catch(e){}if(t.EtherscanProvider)try{n.push(new t.EtherscanProvider(e,r.etherscan));}catch(e){}if(t.AlchemyProvider)try{n.push(new t.AlchemyProvider(e,r.alchemy));}catch(e){}if(t.PocketProvider){const r=["goerli","ropsten","rinkeby"];try{const i=new t.PocketProvider(e);i.network&&-1===r.indexOf(i.network.name)&&n.push(i);}catch(e){}}if(t.CloudflareProvider)try{n.push(new t.CloudflareProvider(e));}catch(e){}if(0===n.length)return null;if(t.FallbackProvider){let i=1;return null!=r.quorum?i=r.quorum:"homestead"===e&&(i=2),new t.FallbackProvider(n,i)}return n[0]};return t.renetwork=function(e){return Po(e)},t}function xo(e,t){const r=function(r,n){return r.JsonRpcProvider?new r.JsonRpcProvider(e,t):null};return r.renetwork=function(t){return xo(e,t)},r}const Co={chainId:1,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"homestead",_defaultProvider:Po("homestead")},To={chainId:3,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"ropsten",_defaultProvider:Po("ropsten")},No={chainId:63,name:"classicMordor",_defaultProvider:xo("https://www.ethercluster.com/mordor","classicMordor")},Ro={unspecified:{chainId:0,name:"unspecified"},homestead:Co,mainnet:Co,morden:{chainId:2,name:"morden"},ropsten:To,testnet:To,rinkeby:{chainId:4,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"rinkeby",_defaultProvider:Po("rinkeby")},kovan:{chainId:42,name:"kovan",_defaultProvider:Po("kovan")},goerli:{chainId:5,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"goerli",_defaultProvider:Po("goerli")},kintsugi:{chainId:1337702,name:"kintsugi"},classic:{chainId:61,name:"classic",_defaultProvider:xo("https://www.ethercluster.com/etc","classic")},classicMorden:{chainId:62,name:"classicMorden"},classicMordor:No,classicTestnet:No,classicKotti:{chainId:6,name:"classicKotti",_defaultProvider:xo("https://www.ethercluster.com/kotti","classicKotti")},xdai:{chainId:100,name:"xdai"},matic:{chainId:137,name:"matic"},maticmum:{chainId:80001,name:"maticmum"},optimism:{chainId:10,name:"optimism"},"optimism-kovan":{chainId:69,name:"optimism-kovan"},"optimism-goerli":{chainId:420,name:"optimism-goerli"},arbitrum:{chainId:42161,name:"arbitrum"},"arbitrum-rinkeby":{chainId:421611,name:"arbitrum-rinkeby"},bnb:{chainId:56,name:"bnb"},bnbt:{chainId:97,name:"bnbt"}};function Bo(e){if(null==e)return null;if("number"==typeof e){for(const t in Ro){const r=Ro[t];if(r.chainId===e)return {name:r.name,chainId:r.chainId,ensAddress:r.ensAddress||null,_defaultProvider:r._defaultProvider||null}}return {chainId:e,name:"unknown"}}if("string"==typeof e){const t=Ro[e];return null==t?null:{name:t.name,chainId:t.chainId,ensAddress:t.ensAddress,_defaultProvider:t._defaultProvider||null}}const t=Ro[e.name];if(!t)return "number"!=typeof e.chainId&&Ao.throwArgumentError("invalid network chainId","network",e),e;0!==e.chainId&&e.chainId!==t.chainId&&Ao.throwArgumentError("network chainId mismatch","network",e);let r=e._defaultProvider||null;var n;return null==r&&t._defaultProvider&&(r=(n=t._defaultProvider)&&"function"==typeof n.renetwork?t._defaultProvider.renetwork(e):t._defaultProvider),{name:e.name,chainId:t.chainId,ensAddress:e.ensAddress||t.ensAddress||null,_defaultProvider:r}}function Io(e,t){t||(t=function(e){return [parseInt(e,16)]});let r=0,n={};return e.split(",").forEach((e=>{let i=e.split(":");r+=parseInt(i[0],16),n[r]=t(i[1]);})),n}function Oo(e){let t=0;return e.split(",").map((e=>{let r=e.split("-");1===r.length?r[1]="0":""===r[1]&&(r[1]="1");let n=t+parseInt(r[0],16);return t=parseInt(r[1],16),{l:n,h:t}}))}function Mo(e,t){let r=0;for(let n=0;n<t.length;n++){let i=t[n];if(r+=i.l,e>=r&&e<=r+i.h&&(e-r)%(i.d||1)==0){if(i.e&&-1!==i.e.indexOf(e-r))continue;return i}}return null}const Do=Oo("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),Uo="ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((e=>parseInt(e,16))),Ko=[{h:25,s:32,l:65},{h:30,s:32,e:[23],l:127},{h:54,s:1,e:[48],l:64,d:2},{h:14,s:1,l:57,d:2},{h:44,s:1,l:17,d:2},{h:10,s:1,e:[2,6,8],l:61,d:2},{h:16,s:1,l:68,d:2},{h:84,s:1,e:[18,24,66],l:19,d:2},{h:26,s:32,e:[17],l:435},{h:22,s:1,l:71,d:2},{h:15,s:80,l:40},{h:31,s:32,l:16},{h:32,s:1,l:80,d:2},{h:52,s:1,l:42,d:2},{h:12,s:1,l:55,d:2},{h:40,s:1,e:[38],l:15,d:2},{h:14,s:1,l:48,d:2},{h:37,s:48,l:49},{h:148,s:1,l:6351,d:2},{h:88,s:1,l:160,d:2},{h:15,s:16,l:704},{h:25,s:26,l:854},{h:25,s:32,l:55915},{h:37,s:40,l:1247},{h:25,s:-119711,l:53248},{h:25,s:-119763,l:52},{h:25,s:-119815,l:52},{h:25,s:-119867,e:[1,4,5,7,8,11,12,17],l:52},{h:25,s:-119919,l:52},{h:24,s:-119971,e:[2,7,8,17],l:52},{h:24,s:-120023,e:[2,7,13,15,16,17],l:52},{h:25,s:-120075,l:52},{h:25,s:-120127,l:52},{h:25,s:-120179,l:52},{h:25,s:-120231,l:52},{h:25,s:-120283,l:52},{h:25,s:-120335,l:52},{h:24,s:-119543,e:[17],l:56},{h:24,s:-119601,e:[17],l:58},{h:24,s:-119659,e:[17],l:58},{h:24,s:-119717,e:[17],l:58},{h:24,s:-119775,e:[17],l:58}],Fo=Io("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),Lo=Io("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),jo=Io("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D",(function(e){if(e.length%4!=0)throw new Error("bad data");let t=[];for(let r=0;r<e.length;r+=4)t.push(parseInt(e.substring(r,r+4),16));return t})),qo=Oo("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");function zo(e){if(e.match(/^[a-z0-9-]*$/i)&&e.length<=59)return e.toLowerCase();let t=$e(e);var r;r=t.map((e=>{if(Uo.indexOf(e)>=0)return [];if(e>=65024&&e<=65039)return [];let t=function(e){let t=Mo(e,Ko);if(t)return [e+t.s];let r=Fo[e];if(r)return r;let n=Lo[e];return n?[e+n[0]]:jo[e]||null}(e);return t||[e]})),t=r.reduce(((e,t)=>(t.forEach((t=>{e.push(t);})),e)),[]),t=$e(He(t),Fe.NFKC),t.forEach((e=>{if(Mo(e,qo))throw new Error("STRINGPREP_CONTAINS_PROHIBITED")})),t.forEach((e=>{if(Mo(e,Do))throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")}));let n=He(t);if("-"===n.substring(0,1)||"--"===n.substring(2,4)||"-"===n.substring(n.length-1))throw new Error("invalid hyphen");if(n.length>63)throw new Error("too long");return n}const Wo=new v($n),Go=new Uint8Array(32);Go.fill(0);const Vo=new RegExp("^((.*)\\.)?([^.]+)$");function Ho(e){try{const t=e.split(".");for(let e=0;e<t.length;e++)if(0===zo(t[e]).length)throw new Error("empty");return !0}catch(e){}return !1}function Jo(e){"string"!=typeof e&&Wo.throwArgumentError("invalid ENS name; not a string","name",e);let t=e,r=Go;for(;t.length;){const n=t.match(Vo);null!=n&&""!==n[2]||Wo.throwArgumentError("invalid ENS address; missing component","name",e),r=ve(P([r,ve(We(zo(n[3])))])),t=n[2]||"";}return R(r)}function $o(e){e=atob(e);const t=[];for(let r=0;r<e.length;r++)t.push(e.charCodeAt(r));return A(t)}function Zo(e){e=A(e);let t="";for(let r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function Xo(e,t){return r=this,n=void 0,o=function*(){null==t&&(t={});const r={method:t.method||"GET",headers:t.headers||{},body:t.body||void 0};!0!==t.skipFetchSetup&&(r.mode="cors",r.cache="no-cache",r.credentials="same-origin",r.redirect="follow",r.referrer="client");const n=yield fetch(e,r),i=yield n.arrayBuffer(),o={};return n.headers.forEach?n.headers.forEach(((e,t)=>{o[t.toLowerCase()]=e;})):n.headers.keys().forEach((e=>{o[e.toLowerCase()]=n.headers.get(e);})),{headers:o,statusCode:n.status,statusMessage:n.statusText,body:A(new Uint8Array(i))}},new((i=void 0)||(i=Promise))((function(e,t){function s(e){try{l(o.next(e));}catch(e){t(e);}}function a(e){try{l(o.throw(e));}catch(e){t(e);}}function l(t){var r;t.done?e(t.value):(r=t.value,r instanceof i?r:new i((function(e){e(r);}))).then(s,a);}l((o=o.apply(r,n||[])).next());}));var r,n,i,o;}const Qo=new v("web/5.5.1");function Yo(e){return new Promise((t=>{setTimeout(t,e);}))}function es(e,t){if(null==e)return null;if("string"==typeof e)return e;if(S(e)){if(t&&("text"===t.split("/")[0]||"application/json"===t.split(";")[0].trim()))try{return Je(e)}catch(e){}return R(e)}return e}function ts(e,t,r){const n="object"==typeof e&&null!=e.throttleLimit?e.throttleLimit:12;Qo.assertArgument(n>0&&n%1==0,"invalid connection throttle limit","connection.throttleLimit",n);const i="object"==typeof e?e.throttleCallback:null,o="object"==typeof e&&"number"==typeof e.throttleSlotInterval?e.throttleSlotInterval:100;Qo.assertArgument(o>0&&o%1==0,"invalid connection throttle slot interval","connection.throttleSlotInterval",o);const s={};let a=null;const l={method:"GET"};let u=!1,c=12e4;if("string"==typeof e)a=e;else if("object"==typeof e){if(null!=e&&null!=e.url||Qo.throwArgumentError("missing URL","connection.url",e),a=e.url,"number"==typeof e.timeout&&e.timeout>0&&(c=e.timeout),e.headers)for(const t in e.headers)s[t.toLowerCase()]={key:t,value:String(e.headers[t])},["if-none-match","if-modified-since"].indexOf(t.toLowerCase())>=0&&(u=!0);if(l.allowGzip=!!e.allowGzip,null!=e.user&&null!=e.password){"https:"!==a.substring(0,6)&&!0!==e.allowInsecureAuthentication&&Qo.throwError("basic authentication requires a secure https url",v.errors.INVALID_ARGUMENT,{argument:"url",url:a,user:e.user,password:"[REDACTED]"});const t=e.user+":"+e.password;s.authorization={key:"Authorization",value:"Basic "+Zo(We(t))};}}const h=new RegExp("^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$","i"),d=a?a.match(h):null;if(d)try{const e={statusCode:200,statusMessage:"OK",headers:{"content-type":d[1]},body:$o(d[2])};let t=e.body;return r&&(t=r(e.body,e)),Promise.resolve(t)}catch(e){Qo.throwError("processing response error",v.errors.SERVER_ERROR,{body:es(d[1],d[2]),error:e,requestBody:null,requestMethod:"GET",url:a});}t&&(l.method="POST",l.body=t,null==s["content-type"]&&(s["content-type"]={key:"Content-Type",value:"application/octet-stream"}),null==s["content-length"]&&(s["content-length"]={key:"Content-Length",value:String(t.length)}));const f={};Object.keys(s).forEach((e=>{const t=s[e];f[t.key]=t.value;})),l.headers=f;const p=function(){let e=null;return {promise:new Promise((function(t,r){c&&(e=setTimeout((()=>{null!=e&&(e=null,r(Qo.makeError("timeout",v.errors.TIMEOUT,{requestBody:es(l.body,f["content-type"]),requestMethod:l.method,timeout:c,url:a})));}),c));})),cancel:function(){null!=e&&(clearTimeout(e),e=null);}}}(),m=function(){return e=this,t=void 0,c=function*(){for(let e=0;e<n;e++){let t=null;try{if(t=yield Xo(a,l),e<n)if(301===t.statusCode||302===t.statusCode){const e=t.headers.location||"";if("GET"===l.method&&e.match(/^https:/)){a=t.headers.location;continue}}else if(429===t.statusCode){let r=!0;if(i&&(r=yield i(e,a)),r){let r=0;const n=t.headers["retry-after"];r="string"==typeof n&&n.match(/^[1-9][0-9]*$/)?1e3*parseInt(n):o*parseInt(String(Math.random()*Math.pow(2,e))),yield Yo(r);continue}}}catch(e){t=e.response,null==t&&(p.cancel(),Qo.throwError("missing response",v.errors.SERVER_ERROR,{requestBody:es(l.body,f["content-type"]),requestMethod:l.method,serverError:e,url:a}));}let s=t.body;if(u&&304===t.statusCode?s=null:(t.statusCode<200||t.statusCode>=300)&&(p.cancel(),Qo.throwError("bad response",v.errors.SERVER_ERROR,{status:t.statusCode,headers:t.headers,body:es(s,t.headers?t.headers["content-type"]:null),requestBody:es(l.body,f["content-type"]),requestMethod:l.method,url:a})),r)try{const e=yield r(s,t);return p.cancel(),e}catch(r){if(r.throttleRetry&&e<n){let t=!0;if(i&&(t=yield i(e,a)),t){const t=o*parseInt(String(Math.random()*Math.pow(2,e)));yield Yo(t);continue}}p.cancel(),Qo.throwError("processing response error",v.errors.SERVER_ERROR,{body:es(s,t.headers?t.headers["content-type"]:null),error:r,requestBody:es(l.body,f["content-type"]),requestMethod:l.method,url:a});}return p.cancel(),s}return Qo.throwError("failed response",v.errors.SERVER_ERROR,{requestBody:es(l.body,f["content-type"]),requestMethod:l.method,url:a})},new((s=void 0)||(s=Promise))((function(r,n){function i(e){try{a(c.next(e));}catch(e){n(e);}}function o(e){try{a(c.throw(e));}catch(e){n(e);}}function a(e){var t;e.done?r(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t);}))).then(i,o);}a((c=c.apply(e,t||[])).next());}));var e,t,s,c;}();return Promise.race([p.promise,m])}function rs(e,t,r){let n=null;if(null!=t){n=We(t);const r="string"==typeof e?{url:e}:ie(e);r.headers?0!==Object.keys(r.headers).filter((e=>"content-type"===e.toLowerCase())).length||(r.headers=ie(r.headers),r.headers["content-type"]="application/json"):r.headers={"content-type":"application/json"},e=r;}return ts(e,n,((e,t)=>{let n=null;if(null!=e)try{n=JSON.parse(Je(e));}catch(t){Qo.throwError("invalid JSON",v.errors.SERVER_ERROR,{body:e,error:t});}return r&&(n=r(n,t)),n}))}function ns(e,t){return t||(t={}),null==(t=ie(t)).floor&&(t.floor=0),null==t.ceiling&&(t.ceiling=1e4),null==t.interval&&(t.interval=250),new Promise((function(r,n){let i=null,o=!1;const s=()=>!o&&(o=!0,i&&clearTimeout(i),!0);t.timeout&&(i=setTimeout((()=>{s()&&n(new Error("timeout"));}),t.timeout));const a=t.retryLimit;let l=0;!function i(){return e().then((function(e){if(void 0!==e)s()&&r(e);else if(t.oncePoll)t.oncePoll.once("poll",i);else if(t.onceBlock)t.onceBlock.once("block",i);else if(!o){if(l++,l>a)return void(s()&&n(new Error("retry limit reached")));let e=t.interval*parseInt(String(Math.random()*Math.pow(2,l)));e<t.floor&&(e=t.floor),e>t.ceiling&&(e=t.ceiling),setTimeout(i,e);}return null}),(function(e){s()&&n(e);}))}();}))}var is=r(2882),os=r.n(is);const ss="providers/5.5.2",as=new v(ss);class ls{constructor(){as.checkNew(new.target,ls),this.formats=this.getDefaultFormats();}getDefaultFormats(){const e={},t=this.address.bind(this),r=this.bigNumber.bind(this),n=this.blockTag.bind(this),i=this.data.bind(this),o=this.hash.bind(this),s=this.hex.bind(this),a=this.number.bind(this),l=this.type.bind(this);return e.transaction={hash:o,type:l,accessList:ls.allowNull(this.accessList.bind(this),null),blockHash:ls.allowNull(o,null),blockNumber:ls.allowNull(a,null),transactionIndex:ls.allowNull(a,null),confirmations:ls.allowNull(a,null),from:t,gasPrice:ls.allowNull(r),maxPriorityFeePerGas:ls.allowNull(r),maxFeePerGas:ls.allowNull(r),gasLimit:r,to:ls.allowNull(t,null),value:r,nonce:a,data:i,r:ls.allowNull(this.uint256),s:ls.allowNull(this.uint256),v:ls.allowNull(a),creates:ls.allowNull(t,null),raw:ls.allowNull(i)},e.transactionRequest={from:ls.allowNull(t),nonce:ls.allowNull(a),gasLimit:ls.allowNull(r),gasPrice:ls.allowNull(r),maxPriorityFeePerGas:ls.allowNull(r),maxFeePerGas:ls.allowNull(r),to:ls.allowNull(t),value:ls.allowNull(r),data:ls.allowNull((e=>this.data(e,!0))),type:ls.allowNull(a),accessList:ls.allowNull(this.accessList.bind(this),null)},e.receiptLog={transactionIndex:a,blockNumber:a,transactionHash:o,address:t,topics:ls.arrayOf(o),data:i,logIndex:a,blockHash:o},e.receipt={to:ls.allowNull(this.address,null),from:ls.allowNull(this.address,null),contractAddress:ls.allowNull(t,null),transactionIndex:a,root:ls.allowNull(s),gasUsed:r,logsBloom:ls.allowNull(i),blockHash:o,transactionHash:o,logs:ls.arrayOf(this.receiptLog.bind(this)),blockNumber:a,confirmations:ls.allowNull(a,null),cumulativeGasUsed:r,effectiveGasPrice:ls.allowNull(r),status:ls.allowNull(a),type:l},e.block={hash:o,parentHash:o,number:a,timestamp:a,nonce:ls.allowNull(s),difficulty:this.difficulty.bind(this),gasLimit:r,gasUsed:r,miner:t,extraData:i,transactions:ls.allowNull(ls.arrayOf(o)),baseFeePerGas:ls.allowNull(r)},e.blockWithTransactions=ie(e.block),e.blockWithTransactions.transactions=ls.allowNull(ls.arrayOf(this.transactionResponse.bind(this))),e.filter={fromBlock:ls.allowNull(n,void 0),toBlock:ls.allowNull(n,void 0),blockHash:ls.allowNull(o,void 0),address:ls.allowNull(t,void 0),topics:ls.allowNull(this.topics.bind(this),void 0)},e.filterLog={blockNumber:ls.allowNull(a),blockHash:ls.allowNull(o),transactionIndex:a,removed:ls.allowNull(this.boolean.bind(this)),address:t,data:ls.allowFalsish(i,"0x"),topics:ls.arrayOf(o),transactionHash:o,logIndex:a},e}accessList(e){return hn(e||[])}number(e){return "0x"===e?0:J.from(e).toNumber()}type(e){return "0x"===e||null==e?0:J.from(e).toNumber()}bigNumber(e){return J.from(e)}boolean(e){if("boolean"==typeof e)return e;if("string"==typeof e){if("true"===(e=e.toLowerCase()))return !0;if("false"===e)return !1}throw new Error("invalid boolean - "+e)}hex(e,t){return "string"==typeof e&&(t||"0x"===e.substring(0,2)||(e="0x"+e),T(e))?e.toLowerCase():as.throwArgumentError("invalid hash","value",e)}data(e,t){const r=this.hex(e,t);if(r.length%2!=0)throw new Error("invalid data; odd-length - "+e);return r}address(e){return Ie(e)}callAddress(e){if(!T(e,32))return null;const t=Ie(I(e,12));return t===So?null:t}contractAddress(e){return De(e)}blockTag(e){if(null==e)return "latest";if("earliest"===e)return "0x0";if("latest"===e||"pending"===e)return e;if("number"==typeof e||T(e))return M(e);throw new Error("invalid blockTag")}hash(e,t){const r=this.hex(e,t);return 32!==B(r)?as.throwArgumentError("invalid hash","value",e):r}difficulty(e){if(null==e)return null;const t=J.from(e);try{return t.toNumber()}catch(e){}return null}uint256(e){if(!T(e))throw new Error("invalid uint256");return U(e,32)}_block(e,t){null!=e.author&&null==e.miner&&(e.miner=e.author);const r=null!=e._difficulty?e._difficulty:e.difficulty,n=ls.check(t,e);return n._difficulty=null==r?null:J.from(r),n}block(e){return this._block(e,this.formats.block)}blockWithTransactions(e){return this._block(e,this.formats.blockWithTransactions)}transactionRequest(e){return ls.check(this.formats.transactionRequest,e)}transactionResponse(e){null!=e.gas&&null==e.gasLimit&&(e.gasLimit=e.gas),e.to&&J.from(e.to).isZero()&&(e.to="0x0000000000000000000000000000000000000000"),null!=e.input&&null==e.data&&(e.data=e.input),null==e.to&&null==e.creates&&(e.creates=this.contractAddress(e)),1!==e.type&&2!==e.type||null!=e.accessList||(e.accessList=[]);const t=ls.check(this.formats.transaction,e);if(null!=e.chainId){let r=e.chainId;T(r)&&(r=J.from(r).toNumber()),t.chainId=r;}else {let r=e.networkId;null==r&&null==t.v&&(r=e.chainId),T(r)&&(r=J.from(r).toNumber()),"number"!=typeof r&&null!=t.v&&(r=(t.v-35)/2,r<0&&(r=0),r=parseInt(r)),"number"!=typeof r&&(r=0),t.chainId=r;}return t.blockHash&&"x"===t.blockHash.replace(/0/g,"")&&(t.blockHash=null),t}transaction(e){return gn(e)}receiptLog(e){return ls.check(this.formats.receiptLog,e)}receipt(e){const t=ls.check(this.formats.receipt,e);if(null!=t.root)if(t.root.length<=4){const e=J.from(t.root).toNumber();0===e||1===e?(null!=t.status&&t.status!==e&&as.throwArgumentError("alt-root-status/status mismatch","value",{root:t.root,status:t.status}),t.status=e,delete t.root):as.throwArgumentError("invalid alt-root-status","value.root",t.root);}else 66!==t.root.length&&as.throwArgumentError("invalid root hash","value.root",t.root);return null!=t.status&&(t.byzantium=!0),t}topics(e){return Array.isArray(e)?e.map((e=>this.topics(e))):null!=e?this.hash(e,!0):null}filter(e){return ls.check(this.formats.filter,e)}filterLog(e){return ls.check(this.formats.filterLog,e)}static check(e,t){const r={};for(const n in e)try{const i=e[n](t[n]);void 0!==i&&(r[n]=i);}catch(e){throw e.checkKey=n,e.checkValue=t[n],e}return r}static allowNull(e,t){return function(r){return null==r?t:e(r)}}static allowFalsish(e,t){return function(r){return r?e(r):t}}static arrayOf(e){return function(t){if(!Array.isArray(t))throw new Error("not an array");const r=[];return t.forEach((function(t){r.push(e(t));})),r}}}function us(e){return e&&"function"==typeof e.isCommunityResource}function cs(e){return us(e)&&e.isCommunityResource()}let hs=!1;function ds(){hs||(hs=!0,console.log("========= NOTICE ========="),console.log("Request-Rate Exceeded  (this message will not be repeated)"),console.log(""),console.log("The default API keys for each service are provided as a highly-throttled,"),console.log("community resource for low-traffic projects and early prototyping."),console.log(""),console.log("While your application will continue to function, we highly recommended"),console.log("signing up for your own API keys to improve performance, increase your"),console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."),console.log(""),console.log("For more details: https://docs.ethers.io/api-keys/"),console.log("=========================="));}var fs=function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};const ps=new v(ss);function ms(e){return null==e?"null":(32!==B(e)&&ps.throwArgumentError("invalid topic","topic",e),e.toLowerCase())}function ys(e){for(e=e.slice();e.length>0&&null==e[e.length-1];)e.pop();return e.map((e=>{if(Array.isArray(e)){const t={};e.forEach((e=>{t[ms(e)]=!0;}));const r=Object.keys(t);return r.sort(),r.join("|")}return ms(e)})).join("&")}function gs(e){if("string"==typeof e){if(32===B(e=e.toLowerCase()))return "tx:"+e;if(-1===e.indexOf(":"))return e}else {if(Array.isArray(e))return "filter:*:"+ys(e);if(rr.isForkEvent(e))throw ps.warn("not implemented"),new Error("not implemented");if(e&&"object"==typeof e)return "filter:"+(e.address||"*")+":"+ys(e.topics||[])}throw new Error("invalid event - "+e)}function vs(){return (new Date).getTime()}function bs(e){return new Promise((t=>{setTimeout(t,e);}))}const ws=["block","network","pending","poll"];class _s{constructor(e,t,r){ee(this,"tag",e),ee(this,"listener",t),ee(this,"once",r);}get event(){switch(this.type){case"tx":return this.hash;case"filter":return this.filter}return this.tag}get type(){return this.tag.split(":")[0]}get hash(){const e=this.tag.split(":");return "tx"!==e[0]?null:e[1]}get filter(){const e=this.tag.split(":");if("filter"!==e[0])return null;const t=e[1],r=""===(n=e[2])?[]:n.split(/&/g).map((e=>{if(""===e)return [];const t=e.split("|").map((e=>"null"===e?null:e));return 1===t.length?t[0]:t}));var n;const i={};return r.length>0&&(i.topics=r),t&&"*"!==t&&(i.address=t),i}pollable(){return this.tag.indexOf(":")>=0||ws.indexOf(this.tag)>=0}}const Ss={0:{symbol:"btc",p2pkh:0,p2sh:5,prefix:"bc"},2:{symbol:"ltc",p2pkh:48,p2sh:50,prefix:"ltc"},3:{symbol:"doge",p2pkh:30,p2sh:22},60:{symbol:"eth",ilk:"eth"},61:{symbol:"etc",ilk:"eth"},700:{symbol:"xdai",ilk:"eth"}};function Es(e){return U(J.from(e).toHexString(),32)}function ks(e){return di.encode(P([e,I(yi(yi(e)),0,4)]))}const As=new RegExp("^(ipfs)://(.*)$","i"),Ps=[new RegExp("^(https)://(.*)$","i"),new RegExp("^(data):(.*)$","i"),As,new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$","i")];function xs(e){try{return Je(Cs(e))}catch(e){}return null}function Cs(e){if("0x"===e)return null;const t=J.from(I(e,0,32)).toNumber(),r=J.from(I(e,t,t+32)).toNumber();return I(e,t+32,t+32+r)}function Ts(e){return `https://gateway.ipfs.io/ipfs/${e.substring(7)}`}class Ns{constructor(e,t,r,n){ee(this,"provider",e),ee(this,"name",r),ee(this,"address",e.formatter.address(t)),ee(this,"_resolvedAddress",n);}_fetchBytes(e,t){return fs(this,void 0,void 0,(function*(){const r={to:this.address,data:O([e,Jo(this.name),t||"0x"])};try{return Cs(yield this.provider.call(r))}catch(e){return e.code,v.errors.CALL_EXCEPTION,null}}))}_getAddress(e,t){const r=Ss[String(e)];if(null==r&&ps.throwError(`unsupported coin type: ${e}`,v.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${e})`}),"eth"===r.ilk)return this.provider.formatter.address(t);const n=A(t);if(null!=r.p2pkh){const e=t.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);if(e){const t=parseInt(e[1],16);if(e[2].length===2*t&&t>=1&&t<=75)return ks(P([[r.p2pkh],"0x"+e[2]]))}}if(null!=r.p2sh){const e=t.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);if(e){const t=parseInt(e[1],16);if(e[2].length===2*t&&t>=1&&t<=75)return ks(P([[r.p2sh],"0x"+e[2]]))}}if(null!=r.prefix){const e=n[1];let t=n[0];if(0===t?20!==e&&32!==e&&(t=-1):t=-1,t>=0&&n.length===2+e&&e>=1&&e<=75){const e=os().toWords(n.slice(2));return e.unshift(t),os().encode(r.prefix,e)}}return null}getAddress(e){return fs(this,void 0,void 0,(function*(){if(null==e&&(e=60),60===e)try{const e={to:this.address,data:"0x3b3b57de"+Jo(this.name).substring(2)},t=yield this.provider.call(e);return "0x"===t||t===Eo?null:this.provider.formatter.callAddress(t)}catch(e){if(e.code===v.errors.CALL_EXCEPTION)return null;throw e}const t=yield this._fetchBytes("0xf1cb7e06",Es(e));if(null==t||"0x"===t)return null;const r=this._getAddress(e,t);return null==r&&ps.throwError("invalid or unsupported coin data",v.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${e})`,coinType:e,data:t}),r}))}getAvatar(){return fs(this,void 0,void 0,(function*(){const e=[{type:"name",content:this.name}];try{const t=yield this.getText("avatar");if(null==t)return null;for(let r=0;r<Ps.length;r++){const n=t.match(Ps[r]);if(null==n)continue;const i=n[1].toLowerCase();switch(i){case"https":return e.push({type:"url",content:t}),{linkage:e,url:t};case"data":return e.push({type:"data",content:t}),{linkage:e,url:t};case"ipfs":return e.push({type:"ipfs",content:t}),{linkage:e,url:Ts(t)};case"erc721":case"erc1155":{const r="erc721"===i?"0xc87b56dd":"0x0e89341c";e.push({type:i,content:t});const o=this._resolvedAddress||(yield this.getAddress()),s=(n[2]||"").split("/");if(2!==s.length)return null;const a=yield this.provider.formatter.address(s[0]),l=U(J.from(s[1]).toHexString(),32);if("erc721"===i){const t=this.provider.formatter.callAddress(yield this.provider.call({to:a,data:O(["0x6352211e",l])}));if(o!==t)return null;e.push({type:"owner",content:t});}else if("erc1155"===i){const t=J.from(yield this.provider.call({to:a,data:O(["0x00fdd58e",U(o,32),l])}));if(t.isZero())return null;e.push({type:"balance",content:t.toString()});}const u={to:this.provider.formatter.address(s[0]),data:O([r,l])};let c=xs(yield this.provider.call(u));if(null==c)return null;e.push({type:"metadata-url",content:c}),"erc1155"===i&&(c=c.replace("{id}",l.substring(2)),e.push({type:"metadata-url-expanded",content:c}));const h=yield rs(c);if(!h)return null;e.push({type:"metadata",content:JSON.stringify(h)});let d=h.image;if("string"!=typeof d)return null;if(d.match(/^(https:\/\/|data:)/i));else {if(null==d.match(As))return null;e.push({type:"url-ipfs",content:d}),d=Ts(d);}return e.push({type:"url",content:d}),{linkage:e,url:d}}}}}catch(e){}return null}))}getContentHash(){return fs(this,void 0,void 0,(function*(){const e=yield this._fetchBytes("0xbc1c58d1");if(null==e||"0x"===e)return null;const t=e.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(t){const e=parseInt(t[3],16);if(t[4].length===2*e)return "ipfs://"+di.encode("0x"+t[1])}const r=e.match(/^0xe40101fa011b20([0-9a-f]*)$/);return r&&64===r[1].length?"bzz://"+r[1]:ps.throwError("invalid or unsupported content hash data",v.errors.UNSUPPORTED_OPERATION,{operation:"getContentHash()",data:e})}))}getText(e){return fs(this,void 0,void 0,(function*(){let t=We(e);t=P([Es(64),Es(t.length),t]),t.length%32!=0&&(t=P([t,U("0x",32-e.length%32)]));const r=yield this._fetchBytes("0x59d1d43c",R(t));return null==r||"0x"===r?null:Je(r)}))}}let Rs=null,Bs=1;class Is extends nr{constructor(e){if(ps.checkNew(new.target,nr),super(),this._events=[],this._emitted={block:-2},this.formatter=new.target.getFormatter(),ee(this,"anyNetwork","any"===e),this.anyNetwork&&(e=this.detectNetwork()),e instanceof Promise)this._networkPromise=e,e.catch((e=>{})),this._ready().catch((e=>{}));else {const t=te(new.target,"getNetwork")(e);t?(ee(this,"_network",t),this.emit("network",t,null)):ps.throwArgumentError("invalid network","network",e);}this._maxInternalBlockNumber=-1024,this._lastBlockNumber=-2,this._pollingInterval=4e3,this._fastQueryDate=0;}_ready(){return fs(this,void 0,void 0,(function*(){if(null==this._network){let e=null;if(this._networkPromise)try{e=yield this._networkPromise;}catch(e){}null==e&&(e=yield this.detectNetwork()),e||ps.throwError("no network detected",v.errors.UNKNOWN_ERROR,{}),null==this._network&&(this.anyNetwork?this._network=e:ee(this,"_network",e),this.emit("network",e,null));}return this._network}))}get ready(){return ns((()=>this._ready().then((e=>e),(e=>{if(e.code!==v.errors.NETWORK_ERROR||"noNetwork"!==e.event)throw e}))))}static getFormatter(){return null==Rs&&(Rs=new ls),Rs}static getNetwork(e){return Bo(null==e?"homestead":e)}_getInternalBlockNumber(e){return fs(this,void 0,void 0,(function*(){if(yield this._ready(),e>0)for(;this._internalBlockNumber;){const t=this._internalBlockNumber;try{const r=yield t;if(vs()-r.respTime<=e)return r.blockNumber;break}catch(e){if(this._internalBlockNumber===t)break}}const t=vs(),r=re({blockNumber:this.perform("getBlockNumber",{}),networkError:this.getNetwork().then((e=>null),(e=>e))}).then((({blockNumber:e,networkError:n})=>{if(n)throw this._internalBlockNumber===r&&(this._internalBlockNumber=null),n;const i=vs();return (e=J.from(e).toNumber())<this._maxInternalBlockNumber&&(e=this._maxInternalBlockNumber),this._maxInternalBlockNumber=e,this._setFastBlockNumber(e),{blockNumber:e,reqTime:t,respTime:i}}));return this._internalBlockNumber=r,r.catch((e=>{this._internalBlockNumber===r&&(this._internalBlockNumber=null);})),(yield r).blockNumber}))}poll(){return fs(this,void 0,void 0,(function*(){const e=Bs++,t=[];let r=null;try{r=yield this._getInternalBlockNumber(100+this.pollingInterval/2);}catch(e){return void this.emit("error",e)}if(this._setFastBlockNumber(r),this.emit("poll",e,r),r!==this._lastBlockNumber){if(-2===this._emitted.block&&(this._emitted.block=r-1),Math.abs(this._emitted.block-r)>1e3)ps.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${r})`),this.emit("error",ps.makeError("network block skew detected",v.errors.NETWORK_ERROR,{blockNumber:r,event:"blockSkew",previousBlockNumber:this._emitted.block})),this.emit("block",r);else for(let e=this._emitted.block+1;e<=r;e++)this.emit("block",e);this._emitted.block!==r&&(this._emitted.block=r,Object.keys(this._emitted).forEach((e=>{if("block"===e)return;const t=this._emitted[e];"pending"!==t&&r-t>12&&delete this._emitted[e];}))),-2===this._lastBlockNumber&&(this._lastBlockNumber=r-1),this._events.forEach((e=>{switch(e.type){case"tx":{const r=e.hash;let n=this.getTransactionReceipt(r).then((e=>e&&null!=e.blockNumber?(this._emitted["t:"+r]=e.blockNumber,this.emit(r,e),null):null)).catch((e=>{this.emit("error",e);}));t.push(n);break}case"filter":{const n=e.filter;n.fromBlock=this._lastBlockNumber+1,n.toBlock=r;const i=this.getLogs(n).then((e=>{0!==e.length&&e.forEach((e=>{this._emitted["b:"+e.blockHash]=e.blockNumber,this._emitted["t:"+e.transactionHash]=e.blockNumber,this.emit(n,e);}));})).catch((e=>{this.emit("error",e);}));t.push(i);break}}})),this._lastBlockNumber=r,Promise.all(t).then((()=>{this.emit("didPoll",e);})).catch((e=>{this.emit("error",e);}));}else this.emit("didPoll",e);}))}resetEventsBlock(e){this._lastBlockNumber=e-1,this.polling&&this.poll();}get network(){return this._network}detectNetwork(){return fs(this,void 0,void 0,(function*(){return ps.throwError("provider does not support network detection",v.errors.UNSUPPORTED_OPERATION,{operation:"provider.detectNetwork"})}))}getNetwork(){return fs(this,void 0,void 0,(function*(){const e=yield this._ready(),t=yield this.detectNetwork();if(e.chainId!==t.chainId){if(this.anyNetwork)return this._network=t,this._lastBlockNumber=-2,this._fastBlockNumber=null,this._fastBlockNumberPromise=null,this._fastQueryDate=0,this._emitted.block=-2,this._maxInternalBlockNumber=-1024,this._internalBlockNumber=null,this.emit("network",t,e),yield bs(0),this._network;const r=ps.makeError("underlying network changed",v.errors.NETWORK_ERROR,{event:"changed",network:e,detectedNetwork:t});throw this.emit("error",r),r}return e}))}get blockNumber(){return this._getInternalBlockNumber(100+this.pollingInterval/2).then((e=>{this._setFastBlockNumber(e);}),(e=>{})),null!=this._fastBlockNumber?this._fastBlockNumber:-1}get polling(){return null!=this._poller}set polling(e){e&&!this._poller?(this._poller=setInterval((()=>{this.poll();}),this.pollingInterval),this._bootstrapPoll||(this._bootstrapPoll=setTimeout((()=>{this.poll(),this._bootstrapPoll=setTimeout((()=>{this._poller||this.poll(),this._bootstrapPoll=null;}),this.pollingInterval);}),0))):!e&&this._poller&&(clearInterval(this._poller),this._poller=null);}get pollingInterval(){return this._pollingInterval}set pollingInterval(e){if("number"!=typeof e||e<=0||parseInt(String(e))!=e)throw new Error("invalid polling interval");this._pollingInterval=e,this._poller&&(clearInterval(this._poller),this._poller=setInterval((()=>{this.poll();}),this._pollingInterval));}_getFastBlockNumber(){const e=vs();return e-this._fastQueryDate>2*this._pollingInterval&&(this._fastQueryDate=e,this._fastBlockNumberPromise=this.getBlockNumber().then((e=>((null==this._fastBlockNumber||e>this._fastBlockNumber)&&(this._fastBlockNumber=e),this._fastBlockNumber)))),this._fastBlockNumberPromise}_setFastBlockNumber(e){null!=this._fastBlockNumber&&e<this._fastBlockNumber||(this._fastQueryDate=vs(),(null==this._fastBlockNumber||e>this._fastBlockNumber)&&(this._fastBlockNumber=e,this._fastBlockNumberPromise=Promise.resolve(e)));}waitForTransaction(e,t,r){return fs(this,void 0,void 0,(function*(){return this._waitForTransaction(e,null==t?1:t,r||0,null)}))}_waitForTransaction(e,t,r,n){return fs(this,void 0,void 0,(function*(){const i=yield this.getTransactionReceipt(e);return (i?i.confirmations:0)>=t?i:new Promise(((i,o)=>{const s=[];let a=!1;const l=function(){return !!a||(a=!0,s.forEach((e=>{e();})),!1)},u=e=>{e.confirmations<t||l()||i(e);};if(this.on(e,u),s.push((()=>{this.removeListener(e,u);})),n){let r=n.startBlock,i=null;const u=s=>fs(this,void 0,void 0,(function*(){a||(yield bs(1e3),this.getTransactionCount(n.from).then((c=>fs(this,void 0,void 0,(function*(){if(!a){if(c<=n.nonce)r=s;else {{const t=yield this.getTransaction(e);if(t&&null!=t.blockNumber)return}for(null==i&&(i=r-3,i<n.startBlock&&(i=n.startBlock));i<=s;){if(a)return;const r=yield this.getBlockWithTransactions(i);for(let i=0;i<r.transactions.length;i++){const s=r.transactions[i];if(s.hash===e)return;if(s.from===n.from&&s.nonce===n.nonce){if(a)return;const r=yield this.waitForTransaction(s.hash,t);if(l())return;let i="replaced";return s.data===n.data&&s.to===n.to&&s.value.eq(n.value)?i="repriced":"0x"===s.data&&s.from===s.to&&s.value.isZero()&&(i="cancelled"),void o(ps.makeError("transaction was replaced",v.errors.TRANSACTION_REPLACED,{cancelled:"replaced"===i||"cancelled"===i,reason:i,replacement:this._wrapTransaction(s),hash:e,receipt:r}))}}i++;}}a||this.once("block",u);}}))),(e=>{a||this.once("block",u);})));}));if(a)return;this.once("block",u),s.push((()=>{this.removeListener("block",u);}));}if("number"==typeof r&&r>0){const e=setTimeout((()=>{l()||o(ps.makeError("timeout exceeded",v.errors.TIMEOUT,{timeout:r}));}),r);e.unref&&e.unref(),s.push((()=>{clearTimeout(e);}));}}))}))}getBlockNumber(){return fs(this,void 0,void 0,(function*(){return this._getInternalBlockNumber(0)}))}getGasPrice(){return fs(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield this.perform("getGasPrice",{});try{return J.from(e)}catch(t){return ps.throwError("bad result from backend",v.errors.SERVER_ERROR,{method:"getGasPrice",result:e,error:t})}}))}getBalance(e,t){return fs(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield re({address:this._getAddress(e),blockTag:this._getBlockTag(t)}),n=yield this.perform("getBalance",r);try{return J.from(n)}catch(e){return ps.throwError("bad result from backend",v.errors.SERVER_ERROR,{method:"getBalance",params:r,result:n,error:e})}}))}getTransactionCount(e,t){return fs(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield re({address:this._getAddress(e),blockTag:this._getBlockTag(t)}),n=yield this.perform("getTransactionCount",r);try{return J.from(n).toNumber()}catch(e){return ps.throwError("bad result from backend",v.errors.SERVER_ERROR,{method:"getTransactionCount",params:r,result:n,error:e})}}))}getCode(e,t){return fs(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield re({address:this._getAddress(e),blockTag:this._getBlockTag(t)}),n=yield this.perform("getCode",r);try{return R(n)}catch(e){return ps.throwError("bad result from backend",v.errors.SERVER_ERROR,{method:"getCode",params:r,result:n,error:e})}}))}getStorageAt(e,t,r){return fs(this,void 0,void 0,(function*(){yield this.getNetwork();const n=yield re({address:this._getAddress(e),blockTag:this._getBlockTag(r),position:Promise.resolve(t).then((e=>M(e)))}),i=yield this.perform("getStorageAt",n);try{return R(i)}catch(e){return ps.throwError("bad result from backend",v.errors.SERVER_ERROR,{method:"getStorageAt",params:n,result:i,error:e})}}))}_wrapTransaction(e,t,r){if(null!=t&&32!==B(t))throw new Error("invalid response - sendTransaction");const n=e;return null!=t&&e.hash!==t&&ps.throwError("Transaction hash mismatch from Provider.sendTransaction.",v.errors.UNKNOWN_ERROR,{expectedHash:e.hash,returnedHash:t}),n.wait=(t,n)=>fs(this,void 0,void 0,(function*(){let i;null==t&&(t=1),null==n&&(n=0),0!==t&&null!=r&&(i={data:e.data,from:e.from,nonce:e.nonce,to:e.to,value:e.value,startBlock:r});const o=yield this._waitForTransaction(e.hash,t,n,i);return null==o&&0===t?null:(this._emitted["t:"+e.hash]=o.blockNumber,0===o.status&&ps.throwError("transaction failed",v.errors.CALL_EXCEPTION,{transactionHash:e.hash,transaction:e,receipt:o}),o)})),n}sendTransaction(e){return fs(this,void 0,void 0,(function*(){yield this.getNetwork();const t=yield Promise.resolve(e).then((e=>R(e))),r=this.formatter.transaction(e);null==r.confirmations&&(r.confirmations=0);const n=yield this._getInternalBlockNumber(100+2*this.pollingInterval);try{const e=yield this.perform("sendTransaction",{signedTransaction:t});return this._wrapTransaction(r,e,n)}catch(e){throw e.transaction=r,e.transactionHash=r.hash,e}}))}_getTransactionRequest(e){return fs(this,void 0,void 0,(function*(){const t=yield e,r={};return ["from","to"].forEach((e=>{null!=t[e]&&(r[e]=Promise.resolve(t[e]).then((e=>e?this._getAddress(e):null)));})),["gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","value"].forEach((e=>{null!=t[e]&&(r[e]=Promise.resolve(t[e]).then((e=>e?J.from(e):null)));})),["type"].forEach((e=>{null!=t[e]&&(r[e]=Promise.resolve(t[e]).then((e=>null!=e?e:null)));})),t.accessList&&(r.accessList=this.formatter.accessList(t.accessList)),["data"].forEach((e=>{null!=t[e]&&(r[e]=Promise.resolve(t[e]).then((e=>e?R(e):null)));})),this.formatter.transactionRequest(yield re(r))}))}_getFilter(e){return fs(this,void 0,void 0,(function*(){e=yield e;const t={};return null!=e.address&&(t.address=this._getAddress(e.address)),["blockHash","topics"].forEach((r=>{null!=e[r]&&(t[r]=e[r]);})),["fromBlock","toBlock"].forEach((r=>{null!=e[r]&&(t[r]=this._getBlockTag(e[r]));})),this.formatter.filter(yield re(t))}))}call(e,t){return fs(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield re({transaction:this._getTransactionRequest(e),blockTag:this._getBlockTag(t)}),n=yield this.perform("call",r);try{return R(n)}catch(e){return ps.throwError("bad result from backend",v.errors.SERVER_ERROR,{method:"call",params:r,result:n,error:e})}}))}estimateGas(e){return fs(this,void 0,void 0,(function*(){yield this.getNetwork();const t=yield re({transaction:this._getTransactionRequest(e)}),r=yield this.perform("estimateGas",t);try{return J.from(r)}catch(e){return ps.throwError("bad result from backend",v.errors.SERVER_ERROR,{method:"estimateGas",params:t,result:r,error:e})}}))}_getAddress(e){return fs(this,void 0,void 0,(function*(){"string"!=typeof(e=yield e)&&ps.throwArgumentError("invalid address or ENS name","name",e);const t=yield this.resolveName(e);return null==t&&ps.throwError("ENS name not configured",v.errors.UNSUPPORTED_OPERATION,{operation:`resolveName(${JSON.stringify(e)})`}),t}))}_getBlock(e,t){return fs(this,void 0,void 0,(function*(){yield this.getNetwork(),e=yield e;let r=-128;const n={includeTransactions:!!t};if(T(e,32))n.blockHash=e;else try{n.blockTag=yield this._getBlockTag(e),T(n.blockTag)&&(r=parseInt(n.blockTag.substring(2),16));}catch(t){ps.throwArgumentError("invalid block hash or block tag","blockHashOrBlockTag",e);}return ns((()=>fs(this,void 0,void 0,(function*(){const e=yield this.perform("getBlock",n);if(null==e)return null!=n.blockHash&&null==this._emitted["b:"+n.blockHash]||null!=n.blockTag&&r>this._emitted.block?null:void 0;if(t){let t=null;for(let r=0;r<e.transactions.length;r++){const n=e.transactions[r];if(null==n.blockNumber)n.confirmations=0;else if(null==n.confirmations){null==t&&(t=yield this._getInternalBlockNumber(100+2*this.pollingInterval));let e=t-n.blockNumber+1;e<=0&&(e=1),n.confirmations=e;}}const r=this.formatter.blockWithTransactions(e);return r.transactions=r.transactions.map((e=>this._wrapTransaction(e))),r}return this.formatter.block(e)}))),{oncePoll:this})}))}getBlock(e){return this._getBlock(e,!1)}getBlockWithTransactions(e){return this._getBlock(e,!0)}getTransaction(e){return fs(this,void 0,void 0,(function*(){yield this.getNetwork(),e=yield e;const t={transactionHash:this.formatter.hash(e,!0)};return ns((()=>fs(this,void 0,void 0,(function*(){const r=yield this.perform("getTransaction",t);if(null==r)return null==this._emitted["t:"+e]?null:void 0;const n=this.formatter.transactionResponse(r);if(null==n.blockNumber)n.confirmations=0;else if(null==n.confirmations){let e=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-n.blockNumber+1;e<=0&&(e=1),n.confirmations=e;}return this._wrapTransaction(n)}))),{oncePoll:this})}))}getTransactionReceipt(e){return fs(this,void 0,void 0,(function*(){yield this.getNetwork(),e=yield e;const t={transactionHash:this.formatter.hash(e,!0)};return ns((()=>fs(this,void 0,void 0,(function*(){const r=yield this.perform("getTransactionReceipt",t);if(null==r)return null==this._emitted["t:"+e]?null:void 0;if(null==r.blockHash)return;const n=this.formatter.receipt(r);if(null==n.blockNumber)n.confirmations=0;else if(null==n.confirmations){let e=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-n.blockNumber+1;e<=0&&(e=1),n.confirmations=e;}return n}))),{oncePoll:this})}))}getLogs(e){return fs(this,void 0,void 0,(function*(){yield this.getNetwork();const t=yield re({filter:this._getFilter(e)}),r=yield this.perform("getLogs",t);return r.forEach((e=>{null==e.removed&&(e.removed=!1);})),ls.arrayOf(this.formatter.filterLog.bind(this.formatter))(r)}))}getEtherPrice(){return fs(this,void 0,void 0,(function*(){return yield this.getNetwork(),this.perform("getEtherPrice",{})}))}_getBlockTag(e){return fs(this,void 0,void 0,(function*(){if("number"==typeof(e=yield e)&&e<0){e%1&&ps.throwArgumentError("invalid BlockTag","blockTag",e);let t=yield this._getInternalBlockNumber(100+2*this.pollingInterval);return t+=e,t<0&&(t=0),this.formatter.blockTag(t)}return this.formatter.blockTag(e)}))}getResolver(e){return fs(this,void 0,void 0,(function*(){try{const t=yield this._getResolver(e);return null==t?null:new Ns(this,t,e)}catch(e){if(e.code===v.errors.CALL_EXCEPTION)return null;throw e}}))}_getResolver(e){return fs(this,void 0,void 0,(function*(){const t=yield this.getNetwork();t.ensAddress||ps.throwError("network does not support ENS",v.errors.UNSUPPORTED_OPERATION,{operation:"ENS",network:t.name});const r={to:t.ensAddress,data:"0x0178b8bf"+Jo(e).substring(2)};try{return this.formatter.callAddress(yield this.call(r))}catch(e){if(e.code===v.errors.CALL_EXCEPTION)return null;throw e}}))}resolveName(e){return fs(this,void 0,void 0,(function*(){e=yield e;try{return Promise.resolve(this.formatter.address(e))}catch(t){if(T(e))throw t}"string"!=typeof e&&ps.throwArgumentError("invalid ENS name","name",e);const t=yield this.getResolver(e);return t?yield t.getAddress():null}))}lookupAddress(e){return fs(this,void 0,void 0,(function*(){e=yield e;const t=(e=this.formatter.address(e)).substring(2).toLowerCase()+".addr.reverse",r=yield this._getResolver(t);if(!r)return null;let n=A(yield this.call({to:r,data:"0x691f3431"+Jo(t).substring(2)}));if(n.length<32||!J.from(n.slice(0,32)).eq(32))return null;if(n=n.slice(32),n.length<32)return null;const i=J.from(n.slice(0,32)).toNumber();if(n=n.slice(32),i>n.length)return null;const o=Je(n.slice(0,i));return (yield this.resolveName(o))!=e?null:o}))}getAvatar(e){return fs(this,void 0,void 0,(function*(){let t=null;if(T(e)){const r=this.formatter.address(e),n=r.substring(2).toLowerCase()+".addr.reverse",i=yield this._getResolver(n);if(!i)return null;t=new Ns(this,i,"_",r);}else if(t=yield this.getResolver(e),!t)return null;const r=yield t.getAvatar();return null==r?null:r.url}))}perform(e,t){return ps.throwError(e+" not implemented",v.errors.NOT_IMPLEMENTED,{operation:e})}_startEvent(e){this.polling=this._events.filter((e=>e.pollable())).length>0;}_stopEvent(e){this.polling=this._events.filter((e=>e.pollable())).length>0;}_addEventListener(e,t,r){const n=new _s(gs(e),t,r);return this._events.push(n),this._startEvent(n),this}on(e,t){return this._addEventListener(e,t,!1)}once(e,t){return this._addEventListener(e,t,!0)}emit(e,...t){let r=!1,n=[],i=gs(e);return this._events=this._events.filter((e=>e.tag!==i||(setTimeout((()=>{e.listener.apply(this,t);}),0),r=!0,!e.once||(n.push(e),!1)))),n.forEach((e=>{this._stopEvent(e);})),r}listenerCount(e){if(!e)return this._events.length;let t=gs(e);return this._events.filter((e=>e.tag===t)).length}listeners(e){if(null==e)return this._events.map((e=>e.listener));let t=gs(e);return this._events.filter((e=>e.tag===t)).map((e=>e.listener))}off(e,t){if(null==t)return this.removeAllListeners(e);const r=[];let n=!1,i=gs(e);return this._events=this._events.filter((e=>e.tag!==i||e.listener!=t||!!n||(n=!0,r.push(e),!1))),r.forEach((e=>{this._stopEvent(e);})),this}removeAllListeners(e){let t=[];if(null==e)t=this._events,this._events=[];else {const r=gs(e);this._events=this._events.filter((e=>e.tag!==r||(t.push(e),!1)));}return t.forEach((e=>{this._stopEvent(e);})),this}}var Os=function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};const Ms=new v(ss),Ds=["call","estimateGas"];function Us(e,t,r){if("call"===e&&t.code===v.errors.SERVER_ERROR){const e=t.error;if(e&&e.message.match("reverted")&&T(e.data))return e.data;Ms.throwError("missing revert data in call exception",v.errors.CALL_EXCEPTION,{error:t,data:"0x"});}let n=t.message;t.code===v.errors.SERVER_ERROR&&t.error&&"string"==typeof t.error.message?n=t.error.message:"string"==typeof t.body?n=t.body:"string"==typeof t.responseText&&(n=t.responseText),n=(n||"").toLowerCase();const i=r.transaction||r.signedTransaction;throw n.match(/insufficient funds|base fee exceeds gas limit/)&&Ms.throwError("insufficient funds for intrinsic transaction cost",v.errors.INSUFFICIENT_FUNDS,{error:t,method:e,transaction:i}),n.match(/nonce too low/)&&Ms.throwError("nonce has already been used",v.errors.NONCE_EXPIRED,{error:t,method:e,transaction:i}),n.match(/replacement transaction underpriced/)&&Ms.throwError("replacement fee too low",v.errors.REPLACEMENT_UNDERPRICED,{error:t,method:e,transaction:i}),n.match(/only replay-protected/)&&Ms.throwError("legacy pre-eip-155 transactions not supported",v.errors.UNSUPPORTED_OPERATION,{error:t,method:e,transaction:i}),Ds.indexOf(e)>=0&&n.match(/gas required exceeds allowance|always failing transaction|execution reverted/)&&Ms.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",v.errors.UNPREDICTABLE_GAS_LIMIT,{error:t,method:e,transaction:i}),t}function Ks(e){return new Promise((function(t){setTimeout(t,e);}))}function Fs(e){if(e.error){const t=new Error(e.error.message);throw t.code=e.error.code,t.data=e.error.data,t}return e.result}function Ls(e){return e?e.toLowerCase():e}const js={};class qs extends lr{constructor(e,t,r){if(Ms.checkNew(new.target,qs),super(),e!==js)throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");ee(this,"provider",t),null==r&&(r=0),"string"==typeof r?(ee(this,"_address",this.provider.formatter.address(r)),ee(this,"_index",null)):"number"==typeof r?(ee(this,"_index",r),ee(this,"_address",null)):Ms.throwArgumentError("invalid address or index","addressOrIndex",r);}connect(e){return Ms.throwError("cannot alter JSON-RPC Signer connection",v.errors.UNSUPPORTED_OPERATION,{operation:"connect"})}connectUnchecked(){return new zs(js,this.provider,this._address||this._index)}getAddress(){return this._address?Promise.resolve(this._address):this.provider.send("eth_accounts",[]).then((e=>(e.length<=this._index&&Ms.throwError("unknown account #"+this._index,v.errors.UNSUPPORTED_OPERATION,{operation:"getAddress"}),this.provider.formatter.address(e[this._index]))))}sendUncheckedTransaction(e){e=ie(e);const t=this.getAddress().then((e=>(e&&(e=e.toLowerCase()),e)));if(null==e.gasLimit){const r=ie(e);r.from=t,e.gasLimit=this.provider.estimateGas(r);}return null!=e.to&&(e.to=Promise.resolve(e.to).then((e=>Os(this,void 0,void 0,(function*(){if(null==e)return null;const t=yield this.provider.resolveName(e);return null==t&&Ms.throwArgumentError("provided ENS name resolves to null","tx.to",e),t}))))),re({tx:re(e),sender:t}).then((({tx:t,sender:r})=>{null!=t.from?t.from.toLowerCase()!==r&&Ms.throwArgumentError("from address mismatch","transaction",e):t.from=r;const n=this.provider.constructor.hexlifyTransaction(t,{from:!0});return this.provider.send("eth_sendTransaction",[n]).then((e=>e),(e=>Us("sendTransaction",e,n)))}))}signTransaction(e){return Ms.throwError("signing transactions is unsupported",v.errors.UNSUPPORTED_OPERATION,{operation:"signTransaction"})}sendTransaction(e){return Os(this,void 0,void 0,(function*(){const t=yield this.provider._getInternalBlockNumber(100+2*this.provider.pollingInterval),r=yield this.sendUncheckedTransaction(e);try{return yield ns((()=>Os(this,void 0,void 0,(function*(){const e=yield this.provider.getTransaction(r);if(null!==e)return this.provider._wrapTransaction(e,r,t)}))),{oncePoll:this.provider})}catch(e){throw e.transactionHash=r,e}}))}signMessage(e){return Os(this,void 0,void 0,(function*(){const t="string"==typeof e?We(e):e,r=yield this.getAddress();return yield this.provider.send("personal_sign",[R(t),r.toLowerCase()])}))}_legacySignMessage(e){return Os(this,void 0,void 0,(function*(){const t="string"==typeof e?We(e):e,r=yield this.getAddress();return yield this.provider.send("eth_sign",[r.toLowerCase(),R(t)])}))}_signTypedData(e,t,r){return Os(this,void 0,void 0,(function*(){const n=yield ci.resolveNames(e,t,r,(e=>this.provider.resolveName(e))),i=yield this.getAddress();return yield this.provider.send("eth_signTypedData_v4",[i.toLowerCase(),JSON.stringify(ci.getPayload(n.domain,t,n.value))])}))}unlock(e){return Os(this,void 0,void 0,(function*(){const t=this.provider,r=yield this.getAddress();return t.send("personal_unlockAccount",[r.toLowerCase(),e,null])}))}}class zs extends qs{sendTransaction(e){return this.sendUncheckedTransaction(e).then((e=>({hash:e,nonce:null,gasLimit:null,gasPrice:null,data:null,value:null,chainId:null,confirmations:0,from:null,wait:t=>this.provider.waitForTransaction(e,t)})))}}const Ws={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0,maxFeePerGas:!0,maxPriorityFeePerGas:!0};class Gs extends Is{constructor(e,t){Ms.checkNew(new.target,Gs);let r=t;null==r&&(r=new Promise(((e,t)=>{setTimeout((()=>{this.detectNetwork().then((t=>{e(t);}),(e=>{t(e);}));}),0);}))),super(r),e||(e=te(this.constructor,"defaultUrl")()),ee(this,"connection","string"==typeof e?Object.freeze({url:e}):Object.freeze(ie(e))),this._nextId=42;}get _cache(){return null==this._eventLoopCache&&(this._eventLoopCache={}),this._eventLoopCache}static defaultUrl(){return "http://localhost:8545"}detectNetwork(){return this._cache.detectNetwork||(this._cache.detectNetwork=this._uncachedDetectNetwork(),setTimeout((()=>{this._cache.detectNetwork=null;}),0)),this._cache.detectNetwork}_uncachedDetectNetwork(){return Os(this,void 0,void 0,(function*(){yield Ks(0);let e=null;try{e=yield this.send("eth_chainId",[]);}catch(t){try{e=yield this.send("net_version",[]);}catch(e){}}if(null!=e){const t=te(this.constructor,"getNetwork");try{return t(J.from(e).toNumber())}catch(t){return Ms.throwError("could not detect network",v.errors.NETWORK_ERROR,{chainId:e,event:"invalidNetwork",serverError:t})}}return Ms.throwError("could not detect network",v.errors.NETWORK_ERROR,{event:"noNetwork"})}))}getSigner(e){return new qs(js,this,e)}getUncheckedSigner(e){return this.getSigner(e).connectUnchecked()}listAccounts(){return this.send("eth_accounts",[]).then((e=>e.map((e=>this.formatter.address(e)))))}send(e,t){const r={method:e,params:t,id:this._nextId++,jsonrpc:"2.0"};this.emit("debug",{action:"request",request:le(r),provider:this});const n=["eth_chainId","eth_blockNumber"].indexOf(e)>=0;if(n&&this._cache[e])return this._cache[e];const i=rs(this.connection,JSON.stringify(r),Fs).then((e=>(this.emit("debug",{action:"response",request:r,response:e,provider:this}),e)),(e=>{throw this.emit("debug",{action:"response",error:e,request:r,provider:this}),e}));return n&&(this._cache[e]=i,setTimeout((()=>{this._cache[e]=null;}),0)),i}prepareRequest(e,t){switch(e){case"getBlockNumber":return ["eth_blockNumber",[]];case"getGasPrice":return ["eth_gasPrice",[]];case"getBalance":return ["eth_getBalance",[Ls(t.address),t.blockTag]];case"getTransactionCount":return ["eth_getTransactionCount",[Ls(t.address),t.blockTag]];case"getCode":return ["eth_getCode",[Ls(t.address),t.blockTag]];case"getStorageAt":return ["eth_getStorageAt",[Ls(t.address),t.position,t.blockTag]];case"sendTransaction":return ["eth_sendRawTransaction",[t.signedTransaction]];case"getBlock":return t.blockTag?["eth_getBlockByNumber",[t.blockTag,!!t.includeTransactions]]:t.blockHash?["eth_getBlockByHash",[t.blockHash,!!t.includeTransactions]]:null;case"getTransaction":return ["eth_getTransactionByHash",[t.transactionHash]];case"getTransactionReceipt":return ["eth_getTransactionReceipt",[t.transactionHash]];case"call":return ["eth_call",[te(this.constructor,"hexlifyTransaction")(t.transaction,{from:!0}),t.blockTag]];case"estimateGas":return ["eth_estimateGas",[te(this.constructor,"hexlifyTransaction")(t.transaction,{from:!0})]];case"getLogs":return t.filter&&null!=t.filter.address&&(t.filter.address=Ls(t.filter.address)),["eth_getLogs",[t.filter]]}return null}perform(e,t){return Os(this,void 0,void 0,(function*(){if("call"===e||"estimateGas"===e){const e=t.transaction;if(e&&null!=e.type&&J.from(e.type).isZero()&&null==e.maxFeePerGas&&null==e.maxPriorityFeePerGas){const r=yield this.getFeeData();null==r.maxFeePerGas&&null==r.maxPriorityFeePerGas&&((t=ie(t)).transaction=ie(e),delete t.transaction.type);}}const r=this.prepareRequest(e,t);null==r&&Ms.throwError(e+" not implemented",v.errors.NOT_IMPLEMENTED,{operation:e});try{return yield this.send(r[0],r[1])}catch(r){return Us(e,r,t)}}))}_startEvent(e){"pending"===e.tag&&this._startPending(),super._startEvent(e);}_startPending(){if(null!=this._pendingFilter)return;const e=this,t=this.send("eth_newPendingTransactionFilter",[]);this._pendingFilter=t,t.then((function(r){return function n(){e.send("eth_getFilterChanges",[r]).then((function(r){if(e._pendingFilter!=t)return null;let n=Promise.resolve();return r.forEach((function(t){e._emitted["t:"+t.toLowerCase()]="pending",n=n.then((function(){return e.getTransaction(t).then((function(t){return e.emit("pending",t),null}))}));})),n.then((function(){return Ks(1e3)}))})).then((function(){if(e._pendingFilter==t)return setTimeout((function(){n();}),0),null;e.send("eth_uninstallFilter",[r]);})).catch((e=>{}));}(),r})).catch((e=>{}));}_stopEvent(e){"pending"===e.tag&&0===this.listenerCount("pending")&&(this._pendingFilter=null),super._stopEvent(e);}static hexlifyTransaction(e,t){const r=ie(Ws);if(t)for(const e in t)t[e]&&(r[e]=!0);ne(e,r);const n={};return ["gasLimit","gasPrice","type","maxFeePerGas","maxPriorityFeePerGas","nonce","value"].forEach((function(t){if(null==e[t])return;const r=M(e[t]);"gasLimit"===t&&(t="gas"),n[t]=r;})),["from","to","data"].forEach((function(t){null!=e[t]&&(n[t]=R(e[t]));})),e.accessList&&(n.accessList=hn(e.accessList)),n}}let Vs=null;try{if(Vs=WebSocket,null==Vs)throw new Error("inject please")}catch(e){const t=new v(ss);Vs=function(){t.throwError("WebSockets not supported in this environment",v.errors.UNSUPPORTED_OPERATION,{operation:"new WebSocket()"});};}var Hs=function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};const Js=new v(ss);let $s=1;class Zs extends Gs{constructor(e,t){"any"===t&&Js.throwError("WebSocketProvider does not support 'any' network yet",v.errors.UNSUPPORTED_OPERATION,{operation:"network:any"}),super(e,t),this._pollingInterval=-1,this._wsReady=!1,ee(this,"_websocket",new Vs(this.connection.url)),ee(this,"_requests",{}),ee(this,"_subs",{}),ee(this,"_subIds",{}),ee(this,"_detectNetwork",super.detectNetwork()),this._websocket.onopen=()=>{this._wsReady=!0,Object.keys(this._requests).forEach((e=>{this._websocket.send(this._requests[e].payload);}));},this._websocket.onmessage=e=>{const t=e.data,r=JSON.parse(t);if(null!=r.id){const e=String(r.id),n=this._requests[e];if(delete this._requests[e],void 0!==r.result)n.callback(null,r.result),this.emit("debug",{action:"response",request:JSON.parse(n.payload),response:r.result,provider:this});else {let e=null;r.error?(e=new Error(r.error.message||"unknown error"),ee(e,"code",r.error.code||null),ee(e,"response",t)):e=new Error("unknown error"),n.callback(e,void 0),this.emit("debug",{action:"response",error:e,request:JSON.parse(n.payload),provider:this});}}else if("eth_subscription"===r.method){const e=this._subs[r.params.subscription];e&&e.processFunc(r.params.result);}else console.warn("this should not happen");};const r=setInterval((()=>{this.emit("poll");}),1e3);r.unref&&r.unref();}detectNetwork(){return this._detectNetwork}get pollingInterval(){return 0}resetEventsBlock(e){Js.throwError("cannot reset events block on WebSocketProvider",v.errors.UNSUPPORTED_OPERATION,{operation:"resetEventBlock"});}set pollingInterval(e){Js.throwError("cannot set polling interval on WebSocketProvider",v.errors.UNSUPPORTED_OPERATION,{operation:"setPollingInterval"});}poll(){return Hs(this,void 0,void 0,(function*(){return null}))}set polling(e){e&&Js.throwError("cannot set polling on WebSocketProvider",v.errors.UNSUPPORTED_OPERATION,{operation:"setPolling"});}send(e,t){const r=$s++;return new Promise(((n,i)=>{const o=JSON.stringify({method:e,params:t,id:r,jsonrpc:"2.0"});this.emit("debug",{action:"request",request:JSON.parse(o),provider:this}),this._requests[String(r)]={callback:function(e,t){return e?i(e):n(t)},payload:o},this._wsReady&&this._websocket.send(o);}))}static defaultUrl(){return "ws://localhost:8546"}_subscribe(e,t,r){return Hs(this,void 0,void 0,(function*(){let n=this._subIds[e];null==n&&(n=Promise.all(t).then((e=>this.send("eth_subscribe",e))),this._subIds[e]=n);const i=yield n;this._subs[i]={tag:e,processFunc:r};}))}_startEvent(e){switch(e.type){case"block":this._subscribe("block",["newHeads"],(e=>{const t=J.from(e.number).toNumber();this._emitted.block=t,this.emit("block",t);}));break;case"pending":this._subscribe("pending",["newPendingTransactions"],(e=>{this.emit("pending",e);}));break;case"filter":this._subscribe(e.tag,["logs",this._getFilter(e.filter)],(t=>{null==t.removed&&(t.removed=!1),this.emit(e.filter,this.formatter.filterLog(t));}));break;case"tx":{const t=e=>{const t=e.hash;this.getTransactionReceipt(t).then((e=>{e&&this.emit(t,e);}));};t(e),this._subscribe("tx",["newHeads"],(e=>{this._events.filter((e=>"tx"===e.type)).forEach(t);}));break}case"debug":case"poll":case"willPoll":case"didPoll":case"error":break;default:console.log("unhandled:",e);}}_stopEvent(e){let t=e.tag;if("tx"===e.type){if(this._events.filter((e=>"tx"===e.type)).length)return;t="tx";}else if(this.listenerCount(e.event))return;const r=this._subIds[t];r&&(delete this._subIds[t],r.then((e=>{this._subs[e]&&(delete this._subs[e],this.send("eth_unsubscribe",[e]));})));}destroy(){return Hs(this,void 0,void 0,(function*(){this._websocket.readyState===Vs.CONNECTING&&(yield new Promise((e=>{this._websocket.onopen=function(){e(!0);},this._websocket.onerror=function(){e(!1);};}))),this._websocket.close(1e3);}))}}const Xs=new v(ss);class Qs extends Gs{detectNetwork(){const e=Object.create(null,{detectNetwork:{get:()=>super.detectNetwork}});return t=this,r=void 0,i=function*(){let t=this.network;return null==t&&(t=yield e.detectNetwork.call(this),t||Xs.throwError("no network detected",v.errors.UNKNOWN_ERROR,{}),null==this._network&&(ee(this,"_network",t),this.emit("network",t,null))),t},new((n=void 0)||(n=Promise))((function(e,o){function s(e){try{l(i.next(e));}catch(e){o(e);}}function a(e){try{l(i.throw(e));}catch(e){o(e);}}function l(t){var r;t.done?e(t.value):(r=t.value,r instanceof n?r:new n((function(e){e(r);}))).then(s,a);}l((i=i.apply(t,r||[])).next());}));var t,r,n,i;}}class Ys extends Qs{constructor(e,t){Xs.checkAbstract(new.target,Ys),e=te(new.target,"getNetwork")(e),t=te(new.target,"getApiKey")(t),super(te(new.target,"getUrl")(e,t),e),"string"==typeof t?ee(this,"apiKey",t):null!=t&&Object.keys(t).forEach((e=>{ee(this,e,t[e]);}));}_startPending(){Xs.warn("WARNING: API provider does not support pending filters");}isCommunityResource(){return !1}getSigner(e){return Xs.throwError("API provider does not support signing",v.errors.UNSUPPORTED_OPERATION,{operation:"getSigner"})}listAccounts(){return Promise.resolve([])}static getApiKey(e){return e}static getUrl(e,t){return Xs.throwError("not implemented; sub-classes must override getUrl",v.errors.NOT_IMPLEMENTED,{operation:"getUrl"})}}const ea=new v(ss),ta="_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";class ra extends Zs{constructor(e,t){const r=new na(e,t);super(r.connection.url.replace(/^http/i,"ws").replace(".alchemyapi.",".ws.alchemyapi."),r.network),ee(this,"apiKey",r.apiKey);}isCommunityResource(){return this.apiKey===ta}}class na extends Ys{static getWebSocketProvider(e,t){return new ra(e,t)}static getApiKey(e){return null==e?ta:(e&&"string"!=typeof e&&ea.throwArgumentError("invalid apiKey","apiKey",e),e)}static getUrl(e,t){let r=null;switch(e.name){case"homestead":r="eth-mainnet.alchemyapi.io/v2/";break;case"ropsten":r="eth-ropsten.alchemyapi.io/v2/";break;case"rinkeby":r="eth-rinkeby.alchemyapi.io/v2/";break;case"goerli":r="eth-goerli.alchemyapi.io/v2/";break;case"kovan":r="eth-kovan.alchemyapi.io/v2/";break;case"matic":r="polygon-mainnet.g.alchemy.com/v2/";break;case"maticmum":r="polygon-mumbai.g.alchemy.com/v2/";break;case"arbitrum":r="arb-mainnet.g.alchemy.com/v2/";break;case"arbitrum-rinkeby":r="arb-rinkeby.g.alchemy.com/v2/";break;case"optimism":r="opt-mainnet.g.alchemy.com/v2/";break;case"optimism-kovan":r="opt-kovan.g.alchemy.com/v2/";break;default:ea.throwArgumentError("unsupported network","network",arguments[0]);}return {allowGzip:!0,url:"https://"+r+t,throttleCallback:(e,r)=>(t===ta&&ds(),Promise.resolve(!0))}}isCommunityResource(){return this.apiKey===ta}}const ia=new v(ss);class oa extends Ys{static getApiKey(e){return null!=e&&ia.throwArgumentError("apiKey not supported for cloudflare","apiKey",e),null}static getUrl(e,t){let r=null;return "homestead"===e.name?r="https://cloudflare-eth.com/":ia.throwArgumentError("unsupported network","network",arguments[0]),r}perform(e,t){const r=Object.create(null,{perform:{get:()=>super.perform}});return n=this,i=void 0,s=function*(){return "getBlockNumber"===e?(yield r.perform.call(this,"getBlock",{blockTag:"latest"})).number:r.perform.call(this,e,t)},new((o=void 0)||(o=Promise))((function(e,t){function r(e){try{l(s.next(e));}catch(e){t(e);}}function a(e){try{l(s.throw(e));}catch(e){t(e);}}function l(t){var n;t.done?e(t.value):(n=t.value,n instanceof o?n:new o((function(e){e(n);}))).then(r,a);}l((s=s.apply(n,i||[])).next());}));var n,i,o,s;}}var sa=function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};const aa=new v(ss);function la(e){const t={};for(let r in e){if(null==e[r])continue;let n=e[r];"type"===r&&0===n||(n={type:!0,gasLimit:!0,gasPrice:!0,maxFeePerGs:!0,maxPriorityFeePerGas:!0,nonce:!0,value:!0}[r]?M(R(n)):"accessList"===r?"["+hn(n).map((e=>`{address:"${e.address}",storageKeys:["${e.storageKeys.join('","')}"]}`)).join(",")+"]":R(n),t[r]=n);}return t}function ua(e){if(0==e.status&&("No records found"===e.message||"No transactions found"===e.message))return e.result;if(1!=e.status||"OK"!=e.message){const t=new Error("invalid response");throw t.result=JSON.stringify(e),(e.result||"").toLowerCase().indexOf("rate limit")>=0&&(t.throttleRetry=!0),t}return e.result}function ca(e){if(e&&0==e.status&&"NOTOK"==e.message&&(e.result||"").toLowerCase().indexOf("rate limit")>=0){const t=new Error("throttled response");throw t.result=JSON.stringify(e),t.throttleRetry=!0,t}if("2.0"!=e.jsonrpc){const t=new Error("invalid response");throw t.result=JSON.stringify(e),t}if(e.error){const t=new Error(e.error.message||"unknown error");throw e.error.code&&(t.code=e.error.code),e.error.data&&(t.data=e.error.data),t}return e.result}function ha(e){if("pending"===e)throw new Error("pending not supported");return "latest"===e?e:parseInt(e.substring(2),16)}const da="9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB";function fa(e,t,r){if("call"===e&&t.code===v.errors.SERVER_ERROR){const e=t.error;if(e&&(e.message.match(/reverted/i)||e.message.match(/VM execution error/i))){let r=e.data;if(r&&(r="0x"+r.replace(/^.*0x/i,"")),T(r))return r;aa.throwError("missing revert data in call exception",v.errors.CALL_EXCEPTION,{error:t,data:"0x"});}}let n=t.message;throw t.code===v.errors.SERVER_ERROR&&(t.error&&"string"==typeof t.error.message?n=t.error.message:"string"==typeof t.body?n=t.body:"string"==typeof t.responseText&&(n=t.responseText)),n=(n||"").toLowerCase(),n.match(/insufficient funds/)&&aa.throwError("insufficient funds for intrinsic transaction cost",v.errors.INSUFFICIENT_FUNDS,{error:t,method:e,transaction:r}),n.match(/same hash was already imported|transaction nonce is too low|nonce too low/)&&aa.throwError("nonce has already been used",v.errors.NONCE_EXPIRED,{error:t,method:e,transaction:r}),n.match(/another transaction with same nonce/)&&aa.throwError("replacement fee too low",v.errors.REPLACEMENT_UNDERPRICED,{error:t,method:e,transaction:r}),n.match(/execution failed due to an exception|execution reverted/)&&aa.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",v.errors.UNPREDICTABLE_GAS_LIMIT,{error:t,method:e,transaction:r}),t}class pa extends Is{constructor(e,t){aa.checkNew(new.target,pa),super(e),ee(this,"baseUrl",this.getBaseUrl()),ee(this,"apiKey",t||da);}getBaseUrl(){switch(this.network?this.network.name:"invalid"){case"homestead":return "https://api.etherscan.io";case"ropsten":return "https://api-ropsten.etherscan.io";case"rinkeby":return "https://api-rinkeby.etherscan.io";case"kovan":return "https://api-kovan.etherscan.io";case"goerli":return "https://api-goerli.etherscan.io"}return aa.throwArgumentError("unsupported network","network",name)}getUrl(e,t){const r=Object.keys(t).reduce(((e,r)=>{const n=t[r];return null!=n&&(e+=`&${r}=${n}`),e}),""),n=this.apiKey?`&apikey=${this.apiKey}`:"";return `${this.baseUrl}/api?module=${e}${r}${n}`}getPostUrl(){return `${this.baseUrl}/api`}getPostData(e,t){return t.module=e,t.apikey=this.apiKey,t}fetch(e,t,r){return sa(this,void 0,void 0,(function*(){const n=r?this.getPostUrl():this.getUrl(e,t),i=r?this.getPostData(e,t):null,o="proxy"===e?ca:ua;this.emit("debug",{action:"request",request:n,provider:this});const s={url:n,throttleSlotInterval:1e3,throttleCallback:(e,t)=>(this.isCommunityResource()&&ds(),Promise.resolve(!0))};let a=null;i&&(s.headers={"content-type":"application/x-www-form-urlencoded; charset=UTF-8"},a=Object.keys(i).map((e=>`${e}=${i[e]}`)).join("&"));const l=yield rs(s,a,o||ca);return this.emit("debug",{action:"response",request:n,response:le(l),provider:this}),l}))}detectNetwork(){return sa(this,void 0,void 0,(function*(){return this.network}))}perform(e,t){const r=Object.create(null,{perform:{get:()=>super.perform}});return sa(this,void 0,void 0,(function*(){switch(e){case"getBlockNumber":return this.fetch("proxy",{action:"eth_blockNumber"});case"getGasPrice":return this.fetch("proxy",{action:"eth_gasPrice"});case"getBalance":return this.fetch("account",{action:"balance",address:t.address,tag:t.blockTag});case"getTransactionCount":return this.fetch("proxy",{action:"eth_getTransactionCount",address:t.address,tag:t.blockTag});case"getCode":return this.fetch("proxy",{action:"eth_getCode",address:t.address,tag:t.blockTag});case"getStorageAt":return this.fetch("proxy",{action:"eth_getStorageAt",address:t.address,position:t.position,tag:t.blockTag});case"sendTransaction":return this.fetch("proxy",{action:"eth_sendRawTransaction",hex:t.signedTransaction},!0).catch((e=>fa("sendTransaction",e,t.signedTransaction)));case"getBlock":if(t.blockTag)return this.fetch("proxy",{action:"eth_getBlockByNumber",tag:t.blockTag,boolean:t.includeTransactions?"true":"false"});throw new Error("getBlock by blockHash not implemented");case"getTransaction":return this.fetch("proxy",{action:"eth_getTransactionByHash",txhash:t.transactionHash});case"getTransactionReceipt":return this.fetch("proxy",{action:"eth_getTransactionReceipt",txhash:t.transactionHash});case"call":{if("latest"!==t.blockTag)throw new Error("EtherscanProvider does not support blockTag for call");const e=la(t.transaction);e.module="proxy",e.action="eth_call";try{return yield this.fetch("proxy",e,!0)}catch(e){return fa("call",e,t.transaction)}}case"estimateGas":{const e=la(t.transaction);e.module="proxy",e.action="eth_estimateGas";try{return yield this.fetch("proxy",e,!0)}catch(e){return fa("estimateGas",e,t.transaction)}}case"getLogs":{const e={action:"getLogs"};if(t.filter.fromBlock&&(e.fromBlock=ha(t.filter.fromBlock)),t.filter.toBlock&&(e.toBlock=ha(t.filter.toBlock)),t.filter.address&&(e.address=t.filter.address),t.filter.topics&&t.filter.topics.length>0&&(t.filter.topics.length>1&&aa.throwError("unsupported topic count",v.errors.UNSUPPORTED_OPERATION,{topics:t.filter.topics}),1===t.filter.topics.length)){const r=t.filter.topics[0];"string"==typeof r&&66===r.length||aa.throwError("unsupported topic format",v.errors.UNSUPPORTED_OPERATION,{topic0:r}),e.topic0=r;}const r=yield this.fetch("logs",e);let n={};for(let e=0;e<r.length;e++){const t=r[e];if(null==t.blockHash){if(null==n[t.blockNumber]){const e=yield this.getBlock(t.blockNumber);e&&(n[t.blockNumber]=e.hash);}t.blockHash=n[t.blockNumber];}}return r}case"getEtherPrice":return "homestead"!==this.network.name?0:parseFloat((yield this.fetch("stats",{action:"ethprice"})).ethusd)}return r.perform.call(this,e,t)}))}getHistory(e,t,r){return sa(this,void 0,void 0,(function*(){const n={action:"txlist",address:yield this.resolveName(e),startblock:null==t?0:t,endblock:null==r?99999999:r,sort:"asc"};return (yield this.fetch("account",n)).map((e=>{["contractAddress","to"].forEach((function(t){""==e[t]&&delete e[t];})),null==e.creates&&null!=e.contractAddress&&(e.creates=e.contractAddress);const t=this.formatter.transactionResponse(e);return e.timeStamp&&(t.timestamp=parseInt(e.timeStamp)),t}))}))}isCommunityResource(){return this.apiKey===da}}function ma(e){for(let t=(e=e.slice()).length-1;t>0;t--){const r=Math.floor(Math.random()*(t+1)),n=e[t];e[t]=e[r],e[r]=n;}return e}var ya=function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};const ga=new v(ss);function va(){return (new Date).getTime()}function ba(e){let t=null;for(let r=0;r<e.length;r++){const n=e[r];if(null==n)return null;t?t.name===n.name&&t.chainId===n.chainId&&(t.ensAddress===n.ensAddress||null==t.ensAddress&&null==n.ensAddress)||ga.throwArgumentError("provider mismatch","networks",e):t=n;}return t}function wa(e,t){e=e.slice().sort();const r=Math.floor(e.length/2);if(e.length%2)return e[r];const n=e[r-1],i=e[r];return null!=t&&Math.abs(n-i)>t?null:(n+i)/2}function _a(e){if(null===e)return "null";if("number"==typeof e||"boolean"==typeof e)return JSON.stringify(e);if("string"==typeof e)return e;if(J.isBigNumber(e))return e.toString();if(Array.isArray(e))return JSON.stringify(e.map((e=>_a(e))));if("object"==typeof e){const t=Object.keys(e);return t.sort(),"{"+t.map((t=>{let r=e[t];return r="function"==typeof r?"[function]":_a(r),JSON.stringify(t)+":"+r})).join(",")+"}"}throw new Error("unknown value type: "+typeof e)}let Sa=1;function Ea(e){let t=null,r=null,n=new Promise((n=>{t=function(){r&&(clearTimeout(r),r=null),n();},r=setTimeout(t,e);}));return {cancel:t,getPromise:function(){return n},wait:e=>(n=n.then(e),n)}}const ka=[v.errors.CALL_EXCEPTION,v.errors.INSUFFICIENT_FUNDS,v.errors.NONCE_EXPIRED,v.errors.REPLACEMENT_UNDERPRICED,v.errors.UNPREDICTABLE_GAS_LIMIT],Aa=["address","args","errorArgs","errorSignature","method","transaction"];function Pa(e,t){const r={weight:e.weight};return Object.defineProperty(r,"provider",{get:()=>e.provider}),e.start&&(r.start=e.start),t&&(r.duration=t-e.start),e.done&&(e.error?r.error=e.error:r.result=e.result||null),r}function xa(e,t){return ya(this,void 0,void 0,(function*(){const r=e.provider;return null!=r.blockNumber&&r.blockNumber>=t||-1===t?r:ns((()=>new Promise(((n,i)=>{setTimeout((function(){return r.blockNumber>=t?n(r):e.cancelled?n(null):n(void 0)}),0);}))),{oncePoll:r})}))}function Ca(e,t,r,n){return ya(this,void 0,void 0,(function*(){let i=e.provider;switch(r){case"getBlockNumber":case"getGasPrice":return i[r]();case"getEtherPrice":if(i.getEtherPrice)return i.getEtherPrice();break;case"getBalance":case"getTransactionCount":case"getCode":return n.blockTag&&T(n.blockTag)&&(i=yield xa(e,t)),i[r](n.address,n.blockTag||"latest");case"getStorageAt":return n.blockTag&&T(n.blockTag)&&(i=yield xa(e,t)),i.getStorageAt(n.address,n.position,n.blockTag||"latest");case"getBlock":return n.blockTag&&T(n.blockTag)&&(i=yield xa(e,t)),i[n.includeTransactions?"getBlockWithTransactions":"getBlock"](n.blockTag||n.blockHash);case"call":case"estimateGas":return n.blockTag&&T(n.blockTag)&&(i=yield xa(e,t)),i[r](n.transaction);case"getTransaction":case"getTransactionReceipt":return i[r](n.transactionHash);case"getLogs":{let r=n.filter;return (r.fromBlock&&T(r.fromBlock)||r.toBlock&&T(r.toBlock))&&(i=yield xa(e,t)),i.getLogs(r)}}return ga.throwError("unknown method error",v.errors.UNKNOWN_ERROR,{method:r,params:n})}))}class Ta extends Is{constructor(e,t){ga.checkNew(new.target,Ta),0===e.length&&ga.throwArgumentError("missing providers","providers",e);const r=e.map(((e,t)=>{if(nr.isProvider(e)){const t=cs(e)?2e3:750,r=1;return Object.freeze({provider:e,weight:1,stallTimeout:t,priority:r})}const r=ie(e);null==r.priority&&(r.priority=1),null==r.stallTimeout&&(r.stallTimeout=cs(e)?2e3:750),null==r.weight&&(r.weight=1);const n=r.weight;return (n%1||n>512||n<1)&&ga.throwArgumentError("invalid weight; must be integer in [1, 512]",`providers[${t}].weight`,n),Object.freeze(r)})),n=r.reduce(((e,t)=>e+t.weight),0);null==t?t=n/2:t>n&&ga.throwArgumentError("quorum will always fail; larger than total weight","quorum",t);let i=ba(r.map((e=>e.provider.network)));null==i&&(i=new Promise(((e,t)=>{setTimeout((()=>{this.detectNetwork().then(e,t);}),0);}))),super(i),ee(this,"providerConfigs",Object.freeze(r)),ee(this,"quorum",t),this._highestBlockNumber=-1;}detectNetwork(){return ya(this,void 0,void 0,(function*(){return ba(yield Promise.all(this.providerConfigs.map((e=>e.provider.getNetwork()))))}))}perform(e,t){return ya(this,void 0,void 0,(function*(){if("sendTransaction"===e){const e=yield Promise.all(this.providerConfigs.map((e=>e.provider.sendTransaction(t.signedTransaction).then((e=>e.hash),(e=>e)))));for(let t=0;t<e.length;t++){const r=e[t];if("string"==typeof r)return r}throw e[0]}-1===this._highestBlockNumber&&"getBlockNumber"!==e&&(yield this.getBlockNumber());const r=function(e,t,r){let n=_a;switch(t){case"getBlockNumber":return function(t){const r=t.map((e=>e.result));let n=wa(t.map((e=>e.result)),2);if(null!=n)return n=Math.ceil(n),r.indexOf(n+1)>=0&&n++,n>=e._highestBlockNumber&&(e._highestBlockNumber=n),e._highestBlockNumber};case"getGasPrice":return function(e){const t=e.map((e=>e.result));return t.sort(),t[Math.floor(t.length/2)]};case"getEtherPrice":return function(e){return wa(e.map((e=>e.result)))};case"getBalance":case"getTransactionCount":case"getCode":case"getStorageAt":case"call":case"estimateGas":case"getLogs":break;case"getTransaction":case"getTransactionReceipt":n=function(e){return null==e?null:((e=ie(e)).confirmations=-1,_a(e))};break;case"getBlock":n=r.includeTransactions?function(e){return null==e?null:((e=ie(e)).transactions=e.transactions.map((e=>((e=ie(e)).confirmations=-1,e))),_a(e))}:function(e){return null==e?null:_a(e)};break;default:throw new Error("unknown method: "+t)}return function(e,t){return function(r){const n={};r.forEach((t=>{const r=e(t.result);n[r]||(n[r]={count:0,result:t.result}),n[r].count++;}));const i=Object.keys(n);for(let e=0;e<i.length;e++){const r=n[i[e]];if(r.count>=t)return r.result}}}(n,e.quorum)}(this,e,t),n=ma(this.providerConfigs.map(ie));n.sort(((e,t)=>e.priority-t.priority));const i=this._highestBlockNumber;let o=0,s=!0;for(;;){const a=va();let l=n.filter((e=>e.runner&&a-e.start<e.stallTimeout)).reduce(((e,t)=>e+t.weight),0);for(;l<this.quorum&&o<n.length;){const r=n[o++],s=Sa++;r.start=va(),r.staller=Ea(r.stallTimeout),r.staller.wait((()=>{r.staller=null;})),r.runner=Ca(r,i,e,t).then((n=>{r.done=!0,r.result=n,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:s,backend:Pa(r,va()),request:{method:e,params:le(t)},provider:this});}),(n=>{r.done=!0,r.error=n,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:s,backend:Pa(r,va()),request:{method:e,params:le(t)},provider:this});})),this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:s,backend:Pa(r,null),request:{method:e,params:le(t)},provider:this}),l+=r.weight;}const u=[];n.forEach((e=>{!e.done&&e.runner&&(u.push(e.runner),e.staller&&u.push(e.staller.getPromise()));})),u.length&&(yield Promise.race(u));const c=n.filter((e=>e.done&&null==e.error));if(c.length>=this.quorum){const e=r(c);if(void 0!==e)return n.forEach((e=>{e.staller&&e.staller.cancel(),e.cancelled=!0;})),e;s||(yield Ea(100).getPromise()),s=!1;}const h=n.reduce(((e,t)=>{if(!t.done||null==t.error)return e;const r=t.error.code;return ka.indexOf(r)>=0&&(e[r]||(e[r]={error:t.error,weight:0}),e[r].weight+=t.weight),e}),{});if(Object.keys(h).forEach((e=>{const t=h[e];if(t.weight<this.quorum)return;n.forEach((e=>{e.staller&&e.staller.cancel(),e.cancelled=!0;}));const r=t.error,i={};Aa.forEach((e=>{null!=r[e]&&(i[e]=r[e]);})),ga.throwError(r.reason||r.message,e,i);})),0===n.filter((e=>!e.done)).length)break}return n.forEach((e=>{e.staller&&e.staller.cancel(),e.cancelled=!0;})),ga.throwError("failed to meet quorum",v.errors.SERVER_ERROR,{method:e,params:t,results:n.map((e=>Pa(e))),provider:this})}))}}const Na=null,Ra=new v(ss),Ba="84842078b09946638c03157f83405213";class Ia extends Zs{constructor(e,t){const r=new Oa(e,t),n=r.connection;n.password&&Ra.throwError("INFURA WebSocket project secrets unsupported",v.errors.UNSUPPORTED_OPERATION,{operation:"InfuraProvider.getWebSocketProvider()"}),super(n.url.replace(/^http/i,"ws").replace("/v3/","/ws/v3/"),e),ee(this,"apiKey",r.projectId),ee(this,"projectId",r.projectId),ee(this,"projectSecret",r.projectSecret);}isCommunityResource(){return this.projectId===Ba}}class Oa extends Ys{static getWebSocketProvider(e,t){return new Ia(e,t)}static getApiKey(e){const t={apiKey:Ba,projectId:Ba,projectSecret:null};return null==e||("string"==typeof e?t.projectId=e:null!=e.projectSecret?(Ra.assertArgument("string"==typeof e.projectId,"projectSecret requires a projectId","projectId",e.projectId),Ra.assertArgument("string"==typeof e.projectSecret,"invalid projectSecret","projectSecret","[REDACTED]"),t.projectId=e.projectId,t.projectSecret=e.projectSecret):e.projectId&&(t.projectId=e.projectId),t.apiKey=t.projectId),t}static getUrl(e,t){let r=null;switch(e?e.name:"unknown"){case"homestead":r="mainnet.infura.io";break;case"ropsten":r="ropsten.infura.io";break;case"rinkeby":r="rinkeby.infura.io";break;case"kovan":r="kovan.infura.io";break;case"goerli":r="goerli.infura.io";break;case"matic":r="polygon-mainnet.infura.io";break;case"maticmum":r="polygon-mumbai.infura.io";break;case"optimism":r="optimism-mainnet.infura.io";break;case"optimism-kovan":r="optimism-kovan.infura.io";break;case"arbitrum":r="arbitrum-mainnet.infura.io";break;case"arbitrum-rinkeby":r="arbitrum-rinkeby.infura.io";break;default:Ra.throwError("unsupported network",v.errors.INVALID_ARGUMENT,{argument:"network",value:e});}const n={allowGzip:!0,url:"https://"+r+"/v3/"+t.projectId,throttleCallback:(e,r)=>(t.projectId===Ba&&ds(),Promise.resolve(!0))};return null!=t.projectSecret&&(n.user="",n.password=t.projectSecret),n}isCommunityResource(){return this.projectId===Ba}}class Ma extends Gs{send(e,t){const r={method:e,params:t,id:this._nextId++,jsonrpc:"2.0"};null==this._pendingBatch&&(this._pendingBatch=[]);const n={request:r,resolve:null,reject:null},i=new Promise(((e,t)=>{n.resolve=e,n.reject=t;}));return this._pendingBatch.push(n),this._pendingBatchAggregator||(this._pendingBatchAggregator=setTimeout((()=>{const e=this._pendingBatch;this._pendingBatch=null,this._pendingBatchAggregator=null;const t=e.map((e=>e.request));return this.emit("debug",{action:"requestBatch",request:le(t),provider:this}),rs(this.connection,JSON.stringify(t)).then((r=>{this.emit("debug",{action:"response",request:t,response:r,provider:this}),e.forEach(((e,t)=>{const n=r[t];if(n.error){const t=new Error(n.error.message);t.code=n.error.code,t.data=n.error.data,e.reject(t);}else e.resolve(n.result);}));}),(r=>{this.emit("debug",{action:"response",error:r,request:t,provider:this}),e.forEach((e=>{e.reject(r);}));}))}),10)),i}}const Da=new v(ss);class Ua extends Ys{static getApiKey(e){return e&&"string"!=typeof e&&Da.throwArgumentError("invalid apiKey","apiKey",e),e||"ETHERS_JS_SHARED"}static getUrl(e,t){Da.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");let r=null;switch(e.name){case"homestead":r="https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";break;case"ropsten":r="https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";break;case"rinkeby":r="https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";break;case"goerli":r="https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";break;case"kovan":r="https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";break;default:Da.throwArgumentError("unsupported network","network",arguments[0]);}return r+"?apiKey="+t}}const Ka=new v(ss),Fa={homestead:"6004bcd10040261633ade990",ropsten:"6004bd4d0040261633ade991",rinkeby:"6004bda20040261633ade994",goerli:"6004bd860040261633ade992"};class La extends Ys{constructor(e,t){if(null==t){const r=te(new.target,"getNetwork")(e);if(r){const e=Fa[r.name];e&&(t={applicationId:e,loadBalancer:!0});}null==t&&Ka.throwError("unsupported network",v.errors.INVALID_ARGUMENT,{argument:"network",value:e});}super(e,t);}static getApiKey(e){null==e&&Ka.throwArgumentError("PocketProvider.getApiKey does not support null apiKey","apiKey",e);const t={applicationId:null,loadBalancer:!1,applicationSecretKey:null};return "string"==typeof e?t.applicationId=e:null!=e.applicationSecretKey?(Ka.assertArgument("string"==typeof e.applicationId,"applicationSecretKey requires an applicationId","applicationId",e.applicationId),Ka.assertArgument("string"==typeof e.applicationSecretKey,"invalid applicationSecretKey","applicationSecretKey","[REDACTED]"),t.applicationId=e.applicationId,t.applicationSecretKey=e.applicationSecretKey,t.loadBalancer=!!e.loadBalancer):e.applicationId?(Ka.assertArgument("string"==typeof e.applicationId,"apiKey.applicationId must be a string","apiKey.applicationId",e.applicationId),t.applicationId=e.applicationId,t.loadBalancer=!!e.loadBalancer):Ka.throwArgumentError("unsupported PocketProvider apiKey","apiKey",e),t}static getUrl(e,t){let r=null;switch(e?e.name:"unknown"){case"homestead":r="eth-mainnet.gateway.pokt.network";break;case"ropsten":r="eth-ropsten.gateway.pokt.network";break;case"rinkeby":r="eth-rinkeby.gateway.pokt.network";break;case"goerli":r="eth-goerli.gateway.pokt.network";break;default:Ka.throwError("unsupported network",v.errors.INVALID_ARGUMENT,{argument:"network",value:e});}let n=null;n=t.loadBalancer?`https://${r}/v1/lb/${t.applicationId}`:`https://${r}/v1/${t.applicationId}`;const i={url:n,headers:{}};return null!=t.applicationSecretKey&&(i.user="",i.password=t.applicationSecretKey),i}isCommunityResource(){return this.applicationId===Fa[this.network.name]}}const ja=new v(ss);let qa=1;function za(e,t){const r="Web3LegacyFetcher";return function(e,n){const i={method:e,params:n,id:qa++,jsonrpc:"2.0"};return new Promise(((e,n)=>{this.emit("debug",{action:"request",fetcher:r,request:le(i),provider:this}),t(i,((t,o)=>{if(t)return this.emit("debug",{action:"response",fetcher:r,error:t,request:i,provider:this}),n(t);if(this.emit("debug",{action:"response",fetcher:r,request:i,response:o,provider:this}),o.error){const e=new Error(o.error.message);return e.code=o.error.code,e.data=o.error.data,n(e)}e(o.result);}));}))}}class Wa extends Gs{constructor(e,t){ja.checkNew(new.target,Wa),null==e&&ja.throwArgumentError("missing provider","provider",e);let r=null,n=null,i=null;"function"==typeof e?(r="unknown:",n=e):(r=e.host||e.path||"",!r&&e.isMetaMask&&(r="metamask"),i=e,e.request?(""===r&&(r="eip-1193:"),n=function(e){return function(t,r){null==r&&(r=[]);const n={method:t,params:r};return this.emit("debug",{action:"request",fetcher:"Eip1193Fetcher",request:le(n),provider:this}),e.request(n).then((e=>(this.emit("debug",{action:"response",fetcher:"Eip1193Fetcher",request:n,response:e,provider:this}),e)),(e=>{throw this.emit("debug",{action:"response",fetcher:"Eip1193Fetcher",request:n,error:e,provider:this}),e}))}}(e)):e.sendAsync?n=za(0,e.sendAsync.bind(e)):e.send?n=za(0,e.send.bind(e)):ja.throwArgumentError("unsupported provider","provider",e),r||(r="unknown:")),super(r,t),ee(this,"jsonRpcFetchFunc",n),ee(this,"provider",i);}send(e,t){return this.jsonRpcFetchFunc(e,t)}}const Ga=new v(ss);function Va(e,t){if(null==e&&(e="homestead"),"string"==typeof e){const t=e.match(/^(ws|http)s?:/i);if(t)switch(t[1]){case"http":return new Gs(e);case"ws":return new Zs(e);default:Ga.throwArgumentError("unsupported URL scheme","network",e);}}const r=Bo(e);return r&&r._defaultProvider||Ga.throwError("unsupported getDefaultProvider network",v.errors.NETWORK_ERROR,{operation:"getDefaultProvider",network:e}),r._defaultProvider({FallbackProvider:Ta,AlchemyProvider:na,CloudflareProvider:oa,EtherscanProvider:pa,InfuraProvider:Oa,JsonRpcProvider:Gs,NodesmithProvider:Ua,PocketProvider:La,Web3Provider:Wa,IpcProvider:Na},t)}const Ha=new RegExp("^bytes([0-9]+)$"),Ja=new RegExp("^(u?int)([0-9]*)$"),$a=new RegExp("^(.*)\\[([0-9]*)\\]$"),Za=new v("solidity/5.5.0");function Xa(e,t,r){switch(e){case"address":return r?C(t,32):A(t);case"string":return We(t);case"bytes":return A(t);case"bool":return t=t?"0x01":"0x00",r?C(t,32):A(t)}let n=e.match(Ja);if(n){let i=parseInt(n[2]||"256");return (n[2]&&String(i)!==n[2]||i%8!=0||0===i||i>256)&&Za.throwArgumentError("invalid number type","type",e),r&&(i=256),C(t=J.from(t).toTwos(i),i/8)}if(n=e.match(Ha),n){const i=parseInt(n[1]);return (String(i)!==n[1]||0===i||i>32)&&Za.throwArgumentError("invalid bytes type","type",e),A(t).byteLength!==i&&Za.throwArgumentError(`invalid value for ${e}`,"value",t),r?A((t+"0000000000000000000000000000000000000000000000000000000000000000").substring(0,66)):t}if(n=e.match($a),n&&Array.isArray(t)){const r=n[1];parseInt(n[2]||String(t.length))!=t.length&&Za.throwArgumentError(`invalid array length for ${e}`,"value",t);const i=[];return t.forEach((function(e){i.push(Xa(r,e,!0));})),P(i)}return Za.throwArgumentError("invalid type","type",e)}function Qa(e,t){e.length!=t.length&&Za.throwArgumentError("wrong number of values; expected ${ types.length }","values",t);const r=[];return e.forEach((function(e,n){r.push(Xa(e,t[n]));})),R(P(r))}function Ya(e,t){return ve(Qa(e,t))}function el(e,t){return yi(Qa(e,t))}function tl(e){const t=We(e);if(t.length>31)throw new Error("bytes32 string must be less than 32 bytes");return R(P([t,Eo]).slice(0,32))}function rl(e){const t=A(e);if(32!==t.length)throw new Error("invalid bytes32 - not 32 bytes long");if(0!==t[31])throw new Error("invalid bytes32 string - no null terminator");let r=31;for(;0===t[r-1];)r--;return Je(t.slice(0,r))}const nl=new v("units/5.5.0"),il=["wei","kwei","mwei","gwei","szabo","finney","ether"];function ol(e){const t=String(e).split(".");(t.length>2||!t[0].match(/^-?[0-9]*$/)||t[1]&&!t[1].match(/^[0-9]*$/)||"."===e||"-."===e)&&nl.throwArgumentError("invalid value","value",e);let r=t[0],n="";for("-"===r.substring(0,1)&&(n="-",r=r.substring(1));"0"===r.substring(0,1);)r=r.substring(1);""===r&&(r="0");let i="";for(2===t.length&&(i="."+(t[1]||"0"));i.length>2&&"0"===i[i.length-1];)i=i.substring(0,i.length-1);const o=[];for(;r.length;){if(r.length<=3){o.unshift(r);break}{const e=r.length-3;o.unshift(r.substring(e)),r=r.substring(0,e);}}return n+o.join(",")+i}function sl(e,t){if("string"==typeof t){const e=il.indexOf(t);-1!==e&&(t=3*e);}return qn(e,null!=t?t:18)}function al(e,t){if("string"!=typeof e&&nl.throwArgumentError("value must be a string","value",e),"string"==typeof t){const e=il.indexOf(t);-1!==e&&(t=3*e);}return zn(e,null!=t?t:18)}function ll(e){return sl(e,18)}function ul(e){return al(e,18)}const cl="ethers/5.5.3",hl=new v(cl);try{const e=window;null==e._ethers&&(e._ethers=l);}catch(e){}},3715:(e,t,r)=>{var n=t;n.utils=r(6436),n.common=r(5772),n.sha=r(9041),n.ripemd=r(2949),n.hmac=r(2344),n.sha1=n.sha.sha1,n.sha256=n.sha.sha256,n.sha224=n.sha.sha224,n.sha384=n.sha.sha384,n.sha512=n.sha.sha512,n.ripemd160=n.ripemd.ripemd160;},5772:(e,t,r)=>{var n=r(6436),i=r(9746);function o(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32;}t.BlockHash=o,o.prototype.update=function(e,t){if(e=n.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){var r=(e=this.pending).length%this._delta8;this.pending=e.slice(e.length-r,e.length),0===this.pending.length&&(this.pending=null),e=n.join32(e,0,e.length-r,this.endian);for(var i=0;i<e.length;i+=this._delta32)this._update(e,i,i+this._delta32);}return this},o.prototype.digest=function(e){return this.update(this._pad()),i(null===this.pending),this._digest(e)},o.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,r=t-(e+this.padLength)%t,n=new Array(r+this.padLength);n[0]=128;for(var i=1;i<r;i++)n[i]=0;if(e<<=3,"big"===this.endian){for(var o=8;o<this.padLength;o++)n[i++]=0;n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=e>>>24&255,n[i++]=e>>>16&255,n[i++]=e>>>8&255,n[i++]=255&e;}else for(n[i++]=255&e,n[i++]=e>>>8&255,n[i++]=e>>>16&255,n[i++]=e>>>24&255,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,o=8;o<this.padLength;o++)n[i++]=0;return n};},2344:(e,t,r)=>{var n=r(6436),i=r(9746);function o(e,t,r){if(!(this instanceof o))return new o(e,t,r);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(n.toArray(t,r));}e.exports=o,o.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),i(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=(new this.Hash).update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e);},o.prototype.update=function(e,t){return this.inner.update(e,t),this},o.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)};},2949:(e,t,r)=>{var n=r(6436),i=r(5772),o=n.rotl32,s=n.sum32,a=n.sum32_3,l=n.sum32_4,u=i.BlockHash;function c(){if(!(this instanceof c))return new c;u.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little";}function h(e,t,r,n){return e<=15?t^r^n:e<=31?t&r|~t&n:e<=47?(t|~r)^n:e<=63?t&n|r&~n:t^(r|~n)}function d(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function f(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}n.inherits(c,u),t.ripemd160=c,c.blockSize=512,c.outSize=160,c.hmacStrength=192,c.padLength=64,c.prototype._update=function(e,t){for(var r=this.h[0],n=this.h[1],i=this.h[2],u=this.h[3],c=this.h[4],v=r,b=n,w=i,_=u,S=c,E=0;E<80;E++){var k=s(o(l(r,h(E,n,i,u),e[p[E]+t],d(E)),y[E]),c);r=c,c=u,u=o(i,10),i=n,n=k,k=s(o(l(v,h(79-E,b,w,_),e[m[E]+t],f(E)),g[E]),S),v=S,S=_,_=o(w,10),w=b,b=k;}k=a(this.h[1],i,_),this.h[1]=a(this.h[2],u,S),this.h[2]=a(this.h[3],c,v),this.h[3]=a(this.h[4],r,b),this.h[4]=a(this.h[0],n,w),this.h[0]=k;},c.prototype._digest=function(e){return "hex"===e?n.toHex32(this.h,"little"):n.split32(this.h,"little")};var p=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],m=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],y=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],g=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];},9041:(e,t,r)=>{t.sha1=r(4761),t.sha224=r(799),t.sha256=r(9344),t.sha384=r(772),t.sha512=r(5900);},4761:(e,t,r)=>{var n=r(6436),i=r(5772),o=r(7038),s=n.rotl32,a=n.sum32,l=n.sum32_5,u=o.ft_1,c=i.BlockHash,h=[1518500249,1859775393,2400959708,3395469782];function d(){if(!(this instanceof d))return new d;c.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80);}n.inherits(d,c),e.exports=d,d.blockSize=512,d.outSize=160,d.hmacStrength=80,d.padLength=64,d.prototype._update=function(e,t){for(var r=this.W,n=0;n<16;n++)r[n]=e[t+n];for(;n<r.length;n++)r[n]=s(r[n-3]^r[n-8]^r[n-14]^r[n-16],1);var i=this.h[0],o=this.h[1],c=this.h[2],d=this.h[3],f=this.h[4];for(n=0;n<r.length;n++){var p=~~(n/20),m=l(s(i,5),u(p,o,c,d),f,r[n],h[p]);f=d,d=c,c=s(o,30),o=i,i=m;}this.h[0]=a(this.h[0],i),this.h[1]=a(this.h[1],o),this.h[2]=a(this.h[2],c),this.h[3]=a(this.h[3],d),this.h[4]=a(this.h[4],f);},d.prototype._digest=function(e){return "hex"===e?n.toHex32(this.h,"big"):n.split32(this.h,"big")};},799:(e,t,r)=>{var n=r(6436),i=r(9344);function o(){if(!(this instanceof o))return new o;i.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428];}n.inherits(o,i),e.exports=o,o.blockSize=512,o.outSize=224,o.hmacStrength=192,o.padLength=64,o.prototype._digest=function(e){return "hex"===e?n.toHex32(this.h.slice(0,7),"big"):n.split32(this.h.slice(0,7),"big")};},9344:(e,t,r)=>{var n=r(6436),i=r(5772),o=r(7038),s=r(9746),a=n.sum32,l=n.sum32_4,u=n.sum32_5,c=o.ch32,h=o.maj32,d=o.s0_256,f=o.s1_256,p=o.g0_256,m=o.g1_256,y=i.BlockHash,g=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function v(){if(!(this instanceof v))return new v;y.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=g,this.W=new Array(64);}n.inherits(v,y),e.exports=v,v.blockSize=512,v.outSize=256,v.hmacStrength=192,v.padLength=64,v.prototype._update=function(e,t){for(var r=this.W,n=0;n<16;n++)r[n]=e[t+n];for(;n<r.length;n++)r[n]=l(m(r[n-2]),r[n-7],p(r[n-15]),r[n-16]);var i=this.h[0],o=this.h[1],y=this.h[2],g=this.h[3],v=this.h[4],b=this.h[5],w=this.h[6],_=this.h[7];for(s(this.k.length===r.length),n=0;n<r.length;n++){var S=u(_,f(v),c(v,b,w),this.k[n],r[n]),E=a(d(i),h(i,o,y));_=w,w=b,b=v,v=a(g,S),g=y,y=o,o=i,i=a(S,E);}this.h[0]=a(this.h[0],i),this.h[1]=a(this.h[1],o),this.h[2]=a(this.h[2],y),this.h[3]=a(this.h[3],g),this.h[4]=a(this.h[4],v),this.h[5]=a(this.h[5],b),this.h[6]=a(this.h[6],w),this.h[7]=a(this.h[7],_);},v.prototype._digest=function(e){return "hex"===e?n.toHex32(this.h,"big"):n.split32(this.h,"big")};},772:(e,t,r)=>{var n=r(6436),i=r(5900);function o(){if(!(this instanceof o))return new o;i.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428];}n.inherits(o,i),e.exports=o,o.blockSize=1024,o.outSize=384,o.hmacStrength=192,o.padLength=128,o.prototype._digest=function(e){return "hex"===e?n.toHex32(this.h.slice(0,12),"big"):n.split32(this.h.slice(0,12),"big")};},5900:(e,t,r)=>{var n=r(6436),i=r(5772),o=r(9746),s=n.rotr64_hi,a=n.rotr64_lo,l=n.shr64_hi,u=n.shr64_lo,c=n.sum64,h=n.sum64_hi,d=n.sum64_lo,f=n.sum64_4_hi,p=n.sum64_4_lo,m=n.sum64_5_hi,y=n.sum64_5_lo,g=i.BlockHash,v=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function b(){if(!(this instanceof b))return new b;g.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=v,this.W=new Array(160);}function w(e,t,r,n,i){var o=e&r^~e&i;return o<0&&(o+=4294967296),o}function _(e,t,r,n,i,o){var s=t&n^~t&o;return s<0&&(s+=4294967296),s}function S(e,t,r,n,i){var o=e&r^e&i^r&i;return o<0&&(o+=4294967296),o}function E(e,t,r,n,i,o){var s=t&n^t&o^n&o;return s<0&&(s+=4294967296),s}function k(e,t){var r=s(e,t,28)^s(t,e,2)^s(t,e,7);return r<0&&(r+=4294967296),r}function A(e,t){var r=a(e,t,28)^a(t,e,2)^a(t,e,7);return r<0&&(r+=4294967296),r}function P(e,t){var r=a(e,t,14)^a(e,t,18)^a(t,e,9);return r<0&&(r+=4294967296),r}function x(e,t){var r=s(e,t,1)^s(e,t,8)^l(e,t,7);return r<0&&(r+=4294967296),r}function C(e,t){var r=a(e,t,1)^a(e,t,8)^u(e,t,7);return r<0&&(r+=4294967296),r}function T(e,t){var r=a(e,t,19)^a(t,e,29)^u(e,t,6);return r<0&&(r+=4294967296),r}n.inherits(b,g),e.exports=b,b.blockSize=1024,b.outSize=512,b.hmacStrength=192,b.padLength=128,b.prototype._prepareBlock=function(e,t){for(var r=this.W,n=0;n<32;n++)r[n]=e[t+n];for(;n<r.length;n+=2){var i=(y=r[n-4],g=r[n-3],v=void 0,(v=s(y,g,19)^s(g,y,29)^l(y,g,6))<0&&(v+=4294967296),v),o=T(r[n-4],r[n-3]),a=r[n-14],u=r[n-13],c=x(r[n-30],r[n-29]),h=C(r[n-30],r[n-29]),d=r[n-32],m=r[n-31];r[n]=f(i,o,a,u,c,h,d,m),r[n+1]=p(i,o,a,u,c,h,d,m);}var y,g,v;},b.prototype._update=function(e,t){this._prepareBlock(e,t);var r,n,i,a=this.W,l=this.h[0],u=this.h[1],f=this.h[2],p=this.h[3],g=this.h[4],v=this.h[5],b=this.h[6],x=this.h[7],C=this.h[8],T=this.h[9],N=this.h[10],R=this.h[11],B=this.h[12],I=this.h[13],O=this.h[14],M=this.h[15];o(this.k.length===a.length);for(var D=0;D<a.length;D+=2){var U=O,K=M,F=(i=void 0,(i=s(r=C,n=T,14)^s(r,n,18)^s(n,r,9))<0&&(i+=4294967296),i),L=P(C,T),j=w(C,0,N,0,B),q=_(0,T,0,R,0,I),z=this.k[D],W=this.k[D+1],G=a[D],V=a[D+1],H=m(U,K,F,L,j,q,z,W,G,V),J=y(U,K,F,L,j,q,z,W,G,V);U=k(l,u),K=A(l,u),F=S(l,0,f,0,g),L=E(0,u,0,p,0,v);var $=h(U,K,F,L),Z=d(U,K,F,L);O=B,M=I,B=N,I=R,N=C,R=T,C=h(b,x,H,J),T=d(x,x,H,J),b=g,x=v,g=f,v=p,f=l,p=u,l=h(H,J,$,Z),u=d(H,J,$,Z);}c(this.h,0,l,u),c(this.h,2,f,p),c(this.h,4,g,v),c(this.h,6,b,x),c(this.h,8,C,T),c(this.h,10,N,R),c(this.h,12,B,I),c(this.h,14,O,M);},b.prototype._digest=function(e){return "hex"===e?n.toHex32(this.h,"big"):n.split32(this.h,"big")};},7038:(e,t,r)=>{var n=r(6436).rotr32;function i(e,t,r){return e&t^~e&r}function o(e,t,r){return e&t^e&r^t&r}function s(e,t,r){return e^t^r}t.ft_1=function(e,t,r,n){return 0===e?i(t,r,n):1===e||3===e?s(t,r,n):2===e?o(t,r,n):void 0},t.ch32=i,t.maj32=o,t.p32=s,t.s0_256=function(e){return n(e,2)^n(e,13)^n(e,22)},t.s1_256=function(e){return n(e,6)^n(e,11)^n(e,25)},t.g0_256=function(e){return n(e,7)^n(e,18)^e>>>3},t.g1_256=function(e){return n(e,17)^n(e,19)^e>>>10};},6436:(e,t,r)=>{var n=r(9746),i=r(5717);function o(e,t){return 55296==(64512&e.charCodeAt(t))&&!(t<0||t+1>=e.length)&&56320==(64512&e.charCodeAt(t+1))}function s(e){return (e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function a(e){return 1===e.length?"0"+e:e}function l(e){return 7===e.length?"0"+e:6===e.length?"00"+e:5===e.length?"000"+e:4===e.length?"0000"+e:3===e.length?"00000"+e:2===e.length?"000000"+e:1===e.length?"0000000"+e:e}t.inherits=i,t.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return [];var r=[];if("string"==typeof e)if(t){if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),i=0;i<e.length;i+=2)r.push(parseInt(e[i]+e[i+1],16));}else for(var n=0,i=0;i<e.length;i++){var s=e.charCodeAt(i);s<128?r[n++]=s:s<2048?(r[n++]=s>>6|192,r[n++]=63&s|128):o(e,i)?(s=65536+((1023&s)<<10)+(1023&e.charCodeAt(++i)),r[n++]=s>>18|240,r[n++]=s>>12&63|128,r[n++]=s>>6&63|128,r[n++]=63&s|128):(r[n++]=s>>12|224,r[n++]=s>>6&63|128,r[n++]=63&s|128);}else for(i=0;i<e.length;i++)r[i]=0|e[i];return r},t.toHex=function(e){for(var t="",r=0;r<e.length;r++)t+=a(e[r].toString(16));return t},t.htonl=s,t.toHex32=function(e,t){for(var r="",n=0;n<e.length;n++){var i=e[n];"little"===t&&(i=s(i)),r+=l(i.toString(16));}return r},t.zero2=a,t.zero8=l,t.join32=function(e,t,r,i){var o=r-t;n(o%4==0);for(var s=new Array(o/4),a=0,l=t;a<s.length;a++,l+=4){var u;u="big"===i?e[l]<<24|e[l+1]<<16|e[l+2]<<8|e[l+3]:e[l+3]<<24|e[l+2]<<16|e[l+1]<<8|e[l],s[a]=u>>>0;}return s},t.split32=function(e,t){for(var r=new Array(4*e.length),n=0,i=0;n<e.length;n++,i+=4){var o=e[n];"big"===t?(r[i]=o>>>24,r[i+1]=o>>>16&255,r[i+2]=o>>>8&255,r[i+3]=255&o):(r[i+3]=o>>>24,r[i+2]=o>>>16&255,r[i+1]=o>>>8&255,r[i]=255&o);}return r},t.rotr32=function(e,t){return e>>>t|e<<32-t},t.rotl32=function(e,t){return e<<t|e>>>32-t},t.sum32=function(e,t){return e+t>>>0},t.sum32_3=function(e,t,r){return e+t+r>>>0},t.sum32_4=function(e,t,r,n){return e+t+r+n>>>0},t.sum32_5=function(e,t,r,n,i){return e+t+r+n+i>>>0},t.sum64=function(e,t,r,n){var i=e[t],o=n+e[t+1]>>>0,s=(o<n?1:0)+r+i;e[t]=s>>>0,e[t+1]=o;},t.sum64_hi=function(e,t,r,n){return (t+n>>>0<t?1:0)+e+r>>>0},t.sum64_lo=function(e,t,r,n){return t+n>>>0},t.sum64_4_hi=function(e,t,r,n,i,o,s,a){var l=0,u=t;return l+=(u=u+n>>>0)<t?1:0,l+=(u=u+o>>>0)<o?1:0,e+r+i+s+(l+=(u=u+a>>>0)<a?1:0)>>>0},t.sum64_4_lo=function(e,t,r,n,i,o,s,a){return t+n+o+a>>>0},t.sum64_5_hi=function(e,t,r,n,i,o,s,a,l,u){var c=0,h=t;return c+=(h=h+n>>>0)<t?1:0,c+=(h=h+o>>>0)<o?1:0,c+=(h=h+a>>>0)<a?1:0,e+r+i+s+l+(c+=(h=h+u>>>0)<u?1:0)>>>0},t.sum64_5_lo=function(e,t,r,n,i,o,s,a,l,u){return t+n+o+a+u>>>0},t.rotr64_hi=function(e,t,r){return (t<<32-r|e>>>r)>>>0},t.rotr64_lo=function(e,t,r){return (e<<32-r|t>>>r)>>>0},t.shr64_hi=function(e,t,r){return e>>>r},t.shr64_lo=function(e,t,r){return (e<<32-r|t>>>r)>>>0};},645:(e,t)=>{t.read=function(e,t,r,n,i){var o,s,a=8*i-n-1,l=(1<<a)-1,u=l>>1,c=-7,h=r?i-1:0,d=r?-1:1,f=e[t+h];for(h+=d,o=f&(1<<-c)-1,f>>=-c,c+=a;c>0;o=256*o+e[t+h],h+=d,c-=8);for(s=o&(1<<-c)-1,o>>=-c,c+=n;c>0;s=256*s+e[t+h],h+=d,c-=8);if(0===o)o=1-u;else {if(o===l)return s?NaN:1/0*(f?-1:1);s+=Math.pow(2,n),o-=u;}return (f?-1:1)*s*Math.pow(2,o-n)},t.write=function(e,t,r,n,i,o){var s,a,l,u=8*o-i-1,c=(1<<u)-1,h=c>>1,d=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:o-1,p=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=c):(s=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-s))<1&&(s--,l*=2),(t+=s+h>=1?d/l:d*Math.pow(2,1-h))*l>=2&&(s++,l/=2),s+h>=c?(a=0,s=c):s+h>=1?(a=(t*l-1)*Math.pow(2,i),s+=h):(a=t*Math.pow(2,h-1)*Math.pow(2,i),s=0));i>=8;e[r+f]=255&a,f+=p,a/=256,i-=8);for(s=s<<i|a,u+=i;u>0;e[r+f]=255&s,f+=p,s/=256,u-=8);e[r+f-p]|=128*m;};},5717:e=>{"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}));}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e;}};},1094:(e,t,r)=>{var n;!function(){var i="input is invalid type",o="object"==typeof window,s=o?window:{};s.JS_SHA3_NO_WINDOW&&(o=!1);var a=!o&&"object"==typeof self;!s.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?s=r.g:a&&(s=self);var l=!s.JS_SHA3_NO_COMMON_JS&&e.exports,u=r.amdO,c=!s.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,h="0123456789abcdef".split(""),d=[4,1024,262144,67108864],f=[0,8,16,24],p=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],m=[224,256,384,512],y=[128,256],g=["hex","buffer","arrayBuffer","array","digest"],v={128:168,256:136};!s.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return "[object Array]"===Object.prototype.toString.call(e)}),!c||!s.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return "object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var b=function(e,t,r){return function(n){return new O(e,t,e).update(n)[r]()}},w=function(e,t,r){return function(n,i){return new O(e,t,i).update(n)[r]()}},_=function(e,t,r){return function(t,n,i,o){return P["cshake"+e].update(t,n,i,o)[r]()}},S=function(e,t,r){return function(t,n,i,o){return P["kmac"+e].update(t,n,i,o)[r]()}},E=function(e,t,r,n){for(var i=0;i<g.length;++i){var o=g[i];e[o]=t(r,n,o);}return e},k=function(e,t){var r=b(e,t,"hex");return r.create=function(){return new O(e,t,e)},r.update=function(e){return r.create().update(e)},E(r,b,e,t)},A=[{name:"keccak",padding:[1,256,65536,16777216],bits:m,createMethod:k},{name:"sha3",padding:[6,1536,393216,100663296],bits:m,createMethod:k},{name:"shake",padding:[31,7936,2031616,520093696],bits:y,createMethod:function(e,t){var r=w(e,t,"hex");return r.create=function(r){return new O(e,t,r)},r.update=function(e,t){return r.create(t).update(e)},E(r,w,e,t)}},{name:"cshake",padding:d,bits:y,createMethod:function(e,t){var r=v[e],n=_(e,0,"hex");return n.create=function(n,i,o){return i||o?new O(e,t,n).bytepad([i,o],r):P["shake"+e].create(n)},n.update=function(e,t,r,i){return n.create(t,r,i).update(e)},E(n,_,e,t)}},{name:"kmac",padding:d,bits:y,createMethod:function(e,t){var r=v[e],n=S(e,0,"hex");return n.create=function(n,i,o){return new M(e,t,i).bytepad(["KMAC",o],r).bytepad([n],r)},n.update=function(e,t,r,i){return n.create(e,r,i).update(t)},E(n,S,e,t)}}],P={},x=[],C=0;C<A.length;++C)for(var T=A[C],N=T.bits,R=0;R<N.length;++R){var B=T.name+"_"+N[R];if(x.push(B),P[B]=T.createMethod(N[R],T.padding),"sha3"!==T.name){var I=T.name+N[R];x.push(I),P[I]=P[B];}}function O(e,t,r){this.blocks=[],this.s=[],this.padding=t,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0;}function M(e,t,r){O.call(this,e,t,r);}O.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(i);if(null===e)throw new Error(i);if(c&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||c&&ArrayBuffer.isView(e)))throw new Error(i);t=!0;}for(var n,o,s=this.blocks,a=this.byteCount,l=e.length,u=this.blockCount,h=0,d=this.s;h<l;){if(this.reset)for(this.reset=!1,s[0]=this.block,n=1;n<u+1;++n)s[n]=0;if(t)for(n=this.start;h<l&&n<a;++h)s[n>>2]|=e[h]<<f[3&n++];else for(n=this.start;h<l&&n<a;++h)(o=e.charCodeAt(h))<128?s[n>>2]|=o<<f[3&n++]:o<2048?(s[n>>2]|=(192|o>>6)<<f[3&n++],s[n>>2]|=(128|63&o)<<f[3&n++]):o<55296||o>=57344?(s[n>>2]|=(224|o>>12)<<f[3&n++],s[n>>2]|=(128|o>>6&63)<<f[3&n++],s[n>>2]|=(128|63&o)<<f[3&n++]):(o=65536+((1023&o)<<10|1023&e.charCodeAt(++h)),s[n>>2]|=(240|o>>18)<<f[3&n++],s[n>>2]|=(128|o>>12&63)<<f[3&n++],s[n>>2]|=(128|o>>6&63)<<f[3&n++],s[n>>2]|=(128|63&o)<<f[3&n++]);if(this.lastByteIndex=n,n>=a){for(this.start=n-a,this.block=s[u],n=0;n<u;++n)d[n]^=s[n];D(d),this.reset=!0;}else this.start=n;}return this},O.prototype.encode=function(e,t){var r=255&e,n=1,i=[r];for(r=255&(e>>=8);r>0;)i.unshift(r),r=255&(e>>=8),++n;return t?i.push(n):i.unshift(n),this.update(i),i.length},O.prototype.encodeString=function(e){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(i);if(null===e)throw new Error(i);if(c&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||c&&ArrayBuffer.isView(e)))throw new Error(i);t=!0;}var n=0,o=e.length;if(t)n=o;else for(var s=0;s<e.length;++s){var a=e.charCodeAt(s);a<128?n+=1:a<2048?n+=2:a<55296||a>=57344?n+=3:(a=65536+((1023&a)<<10|1023&e.charCodeAt(++s)),n+=4);}return n+=this.encode(8*n),this.update(e),n},O.prototype.bytepad=function(e,t){for(var r=this.encode(t),n=0;n<e.length;++n)r+=this.encodeString(e[n]);var i=t-r%t,o=[];return o.length=i,this.update(o),this},O.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,r=this.blockCount,n=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[r],t=1;t<r+1;++t)e[t]=0;for(e[r-1]|=2147483648,t=0;t<r;++t)n[t]^=e[t];D(n);}},O.prototype.toString=O.prototype.hex=function(){this.finalize();for(var e,t=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a="";s<n;){for(o=0;o<t&&s<n;++o,++s)e=r[o],a+=h[e>>4&15]+h[15&e]+h[e>>12&15]+h[e>>8&15]+h[e>>20&15]+h[e>>16&15]+h[e>>28&15]+h[e>>24&15];s%t==0&&(D(r),o=0);}return i&&(e=r[o],a+=h[e>>4&15]+h[15&e],i>1&&(a+=h[e>>12&15]+h[e>>8&15]),i>2&&(a+=h[e>>20&15]+h[e>>16&15])),a},O.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a=this.outputBits>>3;e=i?new ArrayBuffer(n+1<<2):new ArrayBuffer(a);for(var l=new Uint32Array(e);s<n;){for(o=0;o<t&&s<n;++o,++s)l[s]=r[o];s%t==0&&D(r);}return i&&(l[o]=r[o],e=e.slice(0,a)),e},O.prototype.buffer=O.prototype.arrayBuffer,O.prototype.digest=O.prototype.array=function(){this.finalize();for(var e,t,r=this.blockCount,n=this.s,i=this.outputBlocks,o=this.extraBytes,s=0,a=0,l=[];a<i;){for(s=0;s<r&&a<i;++s,++a)e=a<<2,t=n[s],l[e]=255&t,l[e+1]=t>>8&255,l[e+2]=t>>16&255,l[e+3]=t>>24&255;a%r==0&&D(n);}return o&&(e=a<<2,t=n[s],l[e]=255&t,o>1&&(l[e+1]=t>>8&255),o>2&&(l[e+2]=t>>16&255)),l},M.prototype=new O,M.prototype.finalize=function(){return this.encode(this.outputBits,!0),O.prototype.finalize.call(this)};var D=function(e){var t,r,n,i,o,s,a,l,u,c,h,d,f,m,y,g,v,b,w,_,S,E,k,A,P,x,C,T,N,R,B,I,O,M,D,U,K,F,L,j,q,z,W,G,V,H,J,$,Z,X,Q,Y,ee,te,re,ne,ie,oe,se,ae,le,ue,ce;for(n=0;n<48;n+=2)i=e[0]^e[10]^e[20]^e[30]^e[40],o=e[1]^e[11]^e[21]^e[31]^e[41],s=e[2]^e[12]^e[22]^e[32]^e[42],a=e[3]^e[13]^e[23]^e[33]^e[43],l=e[4]^e[14]^e[24]^e[34]^e[44],u=e[5]^e[15]^e[25]^e[35]^e[45],c=e[6]^e[16]^e[26]^e[36]^e[46],h=e[7]^e[17]^e[27]^e[37]^e[47],t=(d=e[8]^e[18]^e[28]^e[38]^e[48])^(s<<1|a>>>31),r=(f=e[9]^e[19]^e[29]^e[39]^e[49])^(a<<1|s>>>31),e[0]^=t,e[1]^=r,e[10]^=t,e[11]^=r,e[20]^=t,e[21]^=r,e[30]^=t,e[31]^=r,e[40]^=t,e[41]^=r,t=i^(l<<1|u>>>31),r=o^(u<<1|l>>>31),e[2]^=t,e[3]^=r,e[12]^=t,e[13]^=r,e[22]^=t,e[23]^=r,e[32]^=t,e[33]^=r,e[42]^=t,e[43]^=r,t=s^(c<<1|h>>>31),r=a^(h<<1|c>>>31),e[4]^=t,e[5]^=r,e[14]^=t,e[15]^=r,e[24]^=t,e[25]^=r,e[34]^=t,e[35]^=r,e[44]^=t,e[45]^=r,t=l^(d<<1|f>>>31),r=u^(f<<1|d>>>31),e[6]^=t,e[7]^=r,e[16]^=t,e[17]^=r,e[26]^=t,e[27]^=r,e[36]^=t,e[37]^=r,e[46]^=t,e[47]^=r,t=c^(i<<1|o>>>31),r=h^(o<<1|i>>>31),e[8]^=t,e[9]^=r,e[18]^=t,e[19]^=r,e[28]^=t,e[29]^=r,e[38]^=t,e[39]^=r,e[48]^=t,e[49]^=r,m=e[0],y=e[1],H=e[11]<<4|e[10]>>>28,J=e[10]<<4|e[11]>>>28,T=e[20]<<3|e[21]>>>29,N=e[21]<<3|e[20]>>>29,ae=e[31]<<9|e[30]>>>23,le=e[30]<<9|e[31]>>>23,z=e[40]<<18|e[41]>>>14,W=e[41]<<18|e[40]>>>14,M=e[2]<<1|e[3]>>>31,D=e[3]<<1|e[2]>>>31,g=e[13]<<12|e[12]>>>20,v=e[12]<<12|e[13]>>>20,$=e[22]<<10|e[23]>>>22,Z=e[23]<<10|e[22]>>>22,R=e[33]<<13|e[32]>>>19,B=e[32]<<13|e[33]>>>19,ue=e[42]<<2|e[43]>>>30,ce=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,re=e[4]<<30|e[5]>>>2,U=e[14]<<6|e[15]>>>26,K=e[15]<<6|e[14]>>>26,b=e[25]<<11|e[24]>>>21,w=e[24]<<11|e[25]>>>21,X=e[34]<<15|e[35]>>>17,Q=e[35]<<15|e[34]>>>17,I=e[45]<<29|e[44]>>>3,O=e[44]<<29|e[45]>>>3,A=e[6]<<28|e[7]>>>4,P=e[7]<<28|e[6]>>>4,ne=e[17]<<23|e[16]>>>9,ie=e[16]<<23|e[17]>>>9,F=e[26]<<25|e[27]>>>7,L=e[27]<<25|e[26]>>>7,_=e[36]<<21|e[37]>>>11,S=e[37]<<21|e[36]>>>11,Y=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,G=e[8]<<27|e[9]>>>5,V=e[9]<<27|e[8]>>>5,x=e[18]<<20|e[19]>>>12,C=e[19]<<20|e[18]>>>12,oe=e[29]<<7|e[28]>>>25,se=e[28]<<7|e[29]>>>25,j=e[38]<<8|e[39]>>>24,q=e[39]<<8|e[38]>>>24,E=e[48]<<14|e[49]>>>18,k=e[49]<<14|e[48]>>>18,e[0]=m^~g&b,e[1]=y^~v&w,e[10]=A^~x&T,e[11]=P^~C&N,e[20]=M^~U&F,e[21]=D^~K&L,e[30]=G^~H&$,e[31]=V^~J&Z,e[40]=te^~ne&oe,e[41]=re^~ie&se,e[2]=g^~b&_,e[3]=v^~w&S,e[12]=x^~T&R,e[13]=C^~N&B,e[22]=U^~F&j,e[23]=K^~L&q,e[32]=H^~$&X,e[33]=J^~Z&Q,e[42]=ne^~oe&ae,e[43]=ie^~se&le,e[4]=b^~_&E,e[5]=w^~S&k,e[14]=T^~R&I,e[15]=N^~B&O,e[24]=F^~j&z,e[25]=L^~q&W,e[34]=$^~X&Y,e[35]=Z^~Q&ee,e[44]=oe^~ae&ue,e[45]=se^~le&ce,e[6]=_^~E&m,e[7]=S^~k&y,e[16]=R^~I&A,e[17]=B^~O&P,e[26]=j^~z&M,e[27]=q^~W&D,e[36]=X^~Y&G,e[37]=Q^~ee&V,e[46]=ae^~ue&te,e[47]=le^~ce&re,e[8]=E^~m&g,e[9]=k^~y&v,e[18]=I^~A&x,e[19]=O^~P&C,e[28]=z^~M&U,e[29]=W^~D&K,e[38]=Y^~G&H,e[39]=ee^~V&J,e[48]=ue^~te&ne,e[49]=ce^~re&ie,e[0]^=p[n],e[1]^=p[n+1];};if(l)e.exports=P;else {for(C=0;C<x.length;++C)s[x[C]]=P[x[C]];u&&(void 0===(n=function(){return P}.call(t,r,t,e))||(e.exports=n));}}();},9746:e=>{function t(e,t){if(!e)throw new Error(t||"Assertion failed")}e.exports=t,t.equal=function(e,t,r){if(e!=t)throw new Error(r||"Assertion failed: "+e+" != "+t)};},7635:function(e){!function(t){const r=2147483647;function n(e){const t=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let r=1779033703,n=3144134277,i=1013904242,o=2773480762,s=1359893119,a=2600822924,l=528734635,u=1541459225;const c=new Uint32Array(64);function h(e){let h=0,d=e.length;for(;d>=64;){let f,p,m,y,g,v=r,b=n,w=i,_=o,S=s,E=a,k=l,A=u;for(p=0;p<16;p++)m=h+4*p,c[p]=(255&e[m])<<24|(255&e[m+1])<<16|(255&e[m+2])<<8|255&e[m+3];for(p=16;p<64;p++)f=c[p-2],y=(f>>>17|f<<15)^(f>>>19|f<<13)^f>>>10,f=c[p-15],g=(f>>>7|f<<25)^(f>>>18|f<<14)^f>>>3,c[p]=(y+c[p-7]|0)+(g+c[p-16]|0)|0;for(p=0;p<64;p++)y=(((S>>>6|S<<26)^(S>>>11|S<<21)^(S>>>25|S<<7))+(S&E^~S&k)|0)+(A+(t[p]+c[p]|0)|0)|0,g=((v>>>2|v<<30)^(v>>>13|v<<19)^(v>>>22|v<<10))+(v&b^v&w^b&w)|0,A=k,k=E,E=S,S=_+y|0,_=w,w=b,b=v,v=y+g|0;r=r+v|0,n=n+b|0,i=i+w|0,o=o+_|0,s=s+S|0,a=a+E|0,l=l+k|0,u=u+A|0,h+=64,d-=64;}}h(e);let d,f=e.length%64,p=e.length/536870912|0,m=e.length<<3,y=f<56?56:120,g=e.slice(e.length-f,e.length);for(g.push(128),d=f+1;d<y;d++)g.push(0);return g.push(p>>>24&255),g.push(p>>>16&255),g.push(p>>>8&255),g.push(p>>>0&255),g.push(m>>>24&255),g.push(m>>>16&255),g.push(m>>>8&255),g.push(m>>>0&255),h(g),[r>>>24&255,r>>>16&255,r>>>8&255,r>>>0&255,n>>>24&255,n>>>16&255,n>>>8&255,n>>>0&255,i>>>24&255,i>>>16&255,i>>>8&255,i>>>0&255,o>>>24&255,o>>>16&255,o>>>8&255,o>>>0&255,s>>>24&255,s>>>16&255,s>>>8&255,s>>>0&255,a>>>24&255,a>>>16&255,a>>>8&255,a>>>0&255,l>>>24&255,l>>>16&255,l>>>8&255,l>>>0&255,u>>>24&255,u>>>16&255,u>>>8&255,u>>>0&255]}function i(e,t,r){e=e.length<=64?e:n(e);const i=64+t.length+4,o=new Array(i),s=new Array(64);let a,l=[];for(a=0;a<64;a++)o[a]=54;for(a=0;a<e.length;a++)o[a]^=e[a];for(a=0;a<t.length;a++)o[64+a]=t[a];for(a=i-4;a<i;a++)o[a]=0;for(a=0;a<64;a++)s[a]=92;for(a=0;a<e.length;a++)s[a]^=e[a];function u(){for(let e=i-1;e>=i-4;e--){if(o[e]++,o[e]<=255)return;o[e]=0;}}for(;r>=32;)u(),l=l.concat(n(s.concat(n(o)))),r-=32;return r>0&&(u(),l=l.concat(n(s.concat(n(o))).slice(0,r))),l}function o(e,t,r,n,i){let o;for(u(e,16*(2*r-1),i,0,16),o=0;o<2*r;o++)l(e,16*o,i,16),a(i,n),u(i,0,e,t+16*o,16);for(o=0;o<r;o++)u(e,t+2*o*16,e,16*o,16);for(o=0;o<r;o++)u(e,t+16*(2*o+1),e,16*(o+r),16);}function s(e,t){return e<<t|e>>>32-t}function a(e,t){u(e,0,t,0,16);for(let e=8;e>0;e-=2)t[4]^=s(t[0]+t[12],7),t[8]^=s(t[4]+t[0],9),t[12]^=s(t[8]+t[4],13),t[0]^=s(t[12]+t[8],18),t[9]^=s(t[5]+t[1],7),t[13]^=s(t[9]+t[5],9),t[1]^=s(t[13]+t[9],13),t[5]^=s(t[1]+t[13],18),t[14]^=s(t[10]+t[6],7),t[2]^=s(t[14]+t[10],9),t[6]^=s(t[2]+t[14],13),t[10]^=s(t[6]+t[2],18),t[3]^=s(t[15]+t[11],7),t[7]^=s(t[3]+t[15],9),t[11]^=s(t[7]+t[3],13),t[15]^=s(t[11]+t[7],18),t[1]^=s(t[0]+t[3],7),t[2]^=s(t[1]+t[0],9),t[3]^=s(t[2]+t[1],13),t[0]^=s(t[3]+t[2],18),t[6]^=s(t[5]+t[4],7),t[7]^=s(t[6]+t[5],9),t[4]^=s(t[7]+t[6],13),t[5]^=s(t[4]+t[7],18),t[11]^=s(t[10]+t[9],7),t[8]^=s(t[11]+t[10],9),t[9]^=s(t[8]+t[11],13),t[10]^=s(t[9]+t[8],18),t[12]^=s(t[15]+t[14],7),t[13]^=s(t[12]+t[15],9),t[14]^=s(t[13]+t[12],13),t[15]^=s(t[14]+t[13],18);for(let r=0;r<16;++r)e[r]+=t[r];}function l(e,t,r,n){for(let i=0;i<n;i++)r[i]^=e[t+i];}function u(e,t,r,n,i){for(;i--;)r[n++]=e[t++];}function c(e){if(!e||"number"!=typeof e.length)return !1;for(let t=0;t<e.length;t++){const r=e[t];if("number"!=typeof r||r%1||r<0||r>=256)return !1}return !0}function h(e,t){if("number"!=typeof e||e%1)throw new Error("invalid "+t);return e}function d(e,t,n,s,a,d,f){if(n=h(n,"N"),s=h(s,"r"),a=h(a,"p"),d=h(d,"dkLen"),0===n||0!=(n&n-1))throw new Error("N must be power of 2");if(n>r/128/s)throw new Error("N too large");if(s>r/128/a)throw new Error("r too large");if(!c(e))throw new Error("password must be an array or buffer");if(e=Array.prototype.slice.call(e),!c(t))throw new Error("salt must be an array or buffer");t=Array.prototype.slice.call(t);let p=i(e,t,128*a*s);const m=new Uint32Array(32*a*s);for(let e=0;e<m.length;e++){const t=4*e;m[e]=(255&p[t+3])<<24|(255&p[t+2])<<16|(255&p[t+1])<<8|(255&p[t+0])<<0;}const y=new Uint32Array(64*s),g=new Uint32Array(32*s*n),v=32*s,b=new Uint32Array(16),w=new Uint32Array(16),_=a*n*2;let S,E,k=0,A=null,P=!1,x=0,C=0;const T=f?parseInt(1e3/s):4294967295,N="undefined"!=typeof setImmediate?setImmediate:setTimeout,R=function(){if(P)return f(new Error("cancelled"),k/_);let t;switch(x){case 0:E=32*C*s,u(m,E,y,0,v),x=1,S=0;case 1:t=n-S,t>T&&(t=T);for(let e=0;e<t;e++)u(y,0,g,(S+e)*v,v),o(y,v,s,b,w);if(S+=t,k+=t,f){const e=parseInt(1e3*k/_);if(e!==A){if(P=f(null,k/_),P)break;A=e;}}if(S<n)break;S=0,x=2;case 2:t=n-S,t>T&&(t=T);for(let e=0;e<t;e++){const e=y[16*(2*s-1)]&n-1;l(g,e*v,y,v),o(y,v,s,b,w);}if(S+=t,k+=t,f){const e=parseInt(1e3*k/_);if(e!==A){if(P=f(null,k/_),P)break;A=e;}}if(S<n)break;if(u(y,0,m,E,v),C++,C<a){x=0;break}p=[];for(let e=0;e<m.length;e++)p.push(m[e]>>0&255),p.push(m[e]>>8&255),p.push(m[e]>>16&255),p.push(m[e]>>24&255);const r=i(e,p,d);return f&&f(null,1,r),r}f&&N(R);};if(!f)for(;;){const e=R();if(null!=e)return e}R();}const f={scrypt:function(e,t,r,n,i,o,s){return new Promise((function(a,l){let u=0;s&&s(0),d(e,t,r,n,i,o,(function(e,t,r){if(e)l(e);else if(r)s&&1!==u&&s(1),a(new Uint8Array(r));else if(s&&t!==u)return u=t,s(t)}));}))},syncScrypt:function(e,t,r,n,i,o){return new Uint8Array(d(e,t,r,n,i,o))}};e.exports=f;}();},1962:function(e,t,r){var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},i=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,i){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r});}),t);}(n,i,(t=e[r](t)).done,t.value);}))};}},o=this&&this.__await||function(e){return this instanceof o?(this.v=e,this):new o(e)},s=this&&this.__asyncGenerator||function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(e,t||[]),s=[];return n={},a("next"),a("throw"),a("return"),n[Symbol.asyncIterator]=function(){return this},n;function a(e){i[e]&&(n[e]=function(t){return new Promise((function(r,n){s.push([e,t,r,n])>1||l(e,t);}))});}function l(e,t){try{(r=i[e](t)).value instanceof o?Promise.resolve(r.value.v).then(u,c):h(s[0][2],r);}catch(e){h(s[0][3],e);}var r;}function u(e){l("next",e);}function c(e){l("throw",e);}function h(e,t){e(t),s.shift(),s.length&&l(s[0][0],s[0][1]);}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GrpcStatus=t.ApiUrls=t.SortDirection=t.MessageApi=void 0;const l=r(9210),u=r(5506),c=a(r(4203)),h=r(4147),d=r(5592);var f;t.MessageApi=l.messageApi.MessageApi,t.SortDirection=l.messageApi.SortDirection,t.ApiUrls={local:"http://localhost:5555",dev:"https://dev.xmtp.network",production:"https://production.xmtp.network"},(f=t.GrpcStatus||(t.GrpcStatus={}))[f.OK=0]="OK",f[f.CANCELLED=1]="CANCELLED",f[f.UNKNOWN=2]="UNKNOWN",f[f.INVALID_ARGUMENT=3]="INVALID_ARGUMENT",f[f.DEADLINE_EXCEEDED=4]="DEADLINE_EXCEEDED",f[f.NOT_FOUND=5]="NOT_FOUND",f[f.ALREADY_EXISTS=6]="ALREADY_EXISTS",f[f.PERMISSION_DENIED=7]="PERMISSION_DENIED",f[f.RESOURCE_EXHAUSTED=8]="RESOURCE_EXHAUSTED",f[f.FAILED_PRECONDITION=9]="FAILED_PRECONDITION",f[f.ABORTED=10]="ABORTED",f[f.OUT_OF_RANGE=11]="OUT_OF_RANGE",f[f.UNIMPLEMENTED=12]="UNIMPLEMENTED",f[f.INTERNAL=13]="INTERNAL",f[f.UNAVAILABLE=14]="UNAVAILABLE",f[f.DATA_LOSS=15]="DATA_LOSS",f[f.UNAUTHENTICATED=16]="UNAUTHENTICATED";const p=e=>!(!e||"AbortError"!==e.name&&!e.message.includes("aborted")),m=e=>!(e=>!(!e||16!==e.code))(e);t.default=class{constructor(e,r){this.pathPrefix=e,this.maxRetries=(null==r?void 0:r.maxRetries)||5,this.appVersion=null==r?void 0:r.appVersion,this.version="xmtp-js/"+h.version,e===t.ApiUrls.dev&&console.info(d.XMTP_DEV_WARNING);}_query(e){return (0, u.retry)(t.MessageApi.Query,[e,{pathPrefix:this.pathPrefix,mode:"cors",headers:this.headers()}],this.maxRetries,100)}_publish(e,r=0){var i;return n(this,void 0,void 0,(function*(){const n=yield this.getToken(),o=this.headers();o.set("Authorization",`Bearer ${n}`);try{return yield (0,u.retry)(t.MessageApi.Publish,[e,{pathPrefix:this.pathPrefix,mode:"cors",headers:o}],this.maxRetries,100,m)}catch(t){if(m(t)||r>=1)throw t;return yield null===(i=this.authCache)||void 0===i?void 0:i.refresh(),this._publish(e,r+1)}}))}_subscribe(e,r){const i=new AbortController;return (()=>{n(this,void 0,void 0,(function*(){for(;;){const n=(new Date).getTime();try{if(yield t.MessageApi.Subscribe(e,r,{pathPrefix:this.pathPrefix,signal:i.signal,mode:"cors",headers:this.headers()}),i.signal.aborted)return;console.info("Stream connection closed. Resubscribing"),(new Date).getTime()-n<1e3&&(yield (0,u.sleep)(1e3));}catch(e){if(p(e)||i.signal.aborted)return;console.info("Stream connection closed. Resubscribing",e.toString()),(new Date).getTime()-n<1e3&&(yield (0, u.sleep)(1e3));}}}));})(),()=>n(this,void 0,void 0,(function*(){null==i||i.abort();}))}query(e,{direction:r=t.SortDirection.SORT_DIRECTION_ASCENDING,limit:o}){var s,a;return n(this,void 0,void 0,(function*(){const t=[];try{for(var n,l=i(this.queryIteratePages(e,{direction:r,pageSize:o&&o<100?o:100}));!(n=yield l.next()).done;){const e=n.value;for(const r of e)if(t.push(r),o&&t.length===o)return t}}catch(e){s={error:e};}finally{try{n&&!n.done&&(a=l.return)&&(yield a.call(l));}finally{if(s)throw s.error}}return t}))}queryIterator(e,t){return s(this,arguments,(function*(){var r,n;try{for(var s,a=i(this.queryIteratePages(e,t));!(s=yield o(a.next())).done;){const e=s.value;for(const t of e)yield yield o(t);}}catch(e){r={error:e};}finally{try{s&&!s.done&&(n=a.return)&&(yield o(n.call(a)));}finally{if(r)throw r.error}}}))}queryIteratePages({contentTopics:e,startTime:t,endTime:r},{direction:n,pageSize:i=10}){var a,l,c;return s(this,arguments,(function*(){if(!e||!e.length)throw new Error("Must specify content topics");const s=(0, u.toNanoString)(t),h=(0, u.toNanoString)(r);let d;for(;;){const t={limit:i,direction:n,cursor:d},r=yield o(this._query({contentTopics:e,startTimeNs:s,endTimeNs:h,pagingInfo:t}));if(!(null===(a=r.envelopes)||void 0===a?void 0:a.length))return yield o(void 0);if(yield yield o(r.envelopes),!(null===(l=r.pagingInfo)||void 0===l?void 0:l.cursor))return yield o(void 0);d=null===(c=r.pagingInfo)||void 0===c?void 0:c.cursor;}}))}publish(e){return n(this,void 0,void 0,(function*(){const t=[];for(const{contentTopic:r,message:n,timestamp:i}of e){if(!r.length)throw new Error("Content topic cannot be empty string");if(!n.length)throw new Error("0 length messages not allowed");const e=i||new Date;t.push({contentTopic:r,timestampNs:(0, u.toNanoString)(e),message:Uint8Array.from(n)});}return this._publish({envelopes:t})}))}subscribe(e,t){if(!e.contentTopics.length)throw new Error("Must provide list of contentTopics to subscribe to");return this._subscribe(e,t)}getToken(){if(!this.authCache)throw new Error("AuthCache is not set on API Client");return this.authCache.getToken()}setAuthenticator(e,t){this.authCache=new c.default(e,t);}headers(){const e=new Headers;return e.set("X-Client-Version",this.version),this.appVersion&&e.set("X-App-Version",this.appVersion),e}};},8901:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}});}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r];}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t});}:function(e,t){e.default=t;}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},s=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},a=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,i){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r});}),t);}(n,i,(t=e[r](t)).done,t.value);}))};}};Object.defineProperty(t,"__esModule",{value:!0}),t.defaultOptions=t.Compression=t.KeyStoreType=void 0;const l=r(2449),u=r(5506),c=r(9982),h=r(9535),d=r(5880),f=r(6254),p=r(5783),m=r(9210),y=r(3374),g=o(r(1962)),v=r(9099),b=r(7915),{Compression:w}=m.content;t.Compression=w;const{b64Decode:_}=m.fetcher,S=104857600;var E;function k(e){const t={keyStoreType:E.networkTopicStoreV1,privateKeyOverride:void 0,env:"dev",apiUrl:void 0,codecs:[new f.TextCodec],maxContentSize:S};return (null==e?void 0:e.codecs)&&(e.codecs=t.codecs.concat(e.codecs)),(null==e?void 0:e.privateKeyOverride)&&!(null==e?void 0:e.keyStoreType)&&(e.keyStoreType=E.static),Object.assign(Object.assign({},t),e)}!function(e){e[e.networkTopicStoreV1=0]="networkTopicStoreV1",e[e.static=1]="static";}(E=t.KeyStoreType||(t.KeyStoreType={})),t.defaultOptions=k;class A{constructor(e,t){this.contacts=new Set,this.knownPublicKeyBundles=new Map,this.legacyKeys=e,this.keys=l.PrivateKeyBundleV2.fromLegacyBundle(e),this.address=e.identityKey.publicKey.walletSignatureAddress(),this._conversations=new d.Conversations(this),this._codecs=new Map,this._maxContentSize=S,this.apiClient=t;}get conversations(){return this._conversations}static create(e,t){return s(this,void 0,void 0,(function*(){const r=k(t),n=function(e){const t=e.apiUrl||g.ApiUrls[e.env];return new g.default(t,{appVersion:e.appVersion})}(r),i=yield function(e,t,r){return s(this,void 0,void 0,(function*(){if(!e.privateKeyOverride&&!t)throw new Error("Must provide either a Signer or specify privateKeyOverride");const n=function(e,t,r){switch(e.keyStoreType){case E.networkTopicStoreV1:if(!t)throw new Error("Must provide a wallet for networkTopicStore");return function(e,t){return new h.EncryptedKeyStore(e,new h.PrivateTopicStore(t))}(t,r);case E.static:if(!e.privateKeyOverride)throw new Error("Must provide a privateKeyOverride to use static store");return n=e.privateKeyOverride,new h.StaticKeyStore(n)}var n;}(e,t,r);return function(e,t){return s(this,void 0,void 0,(function*(){let r=yield t.loadPrivateKeyBundle();if(r)return r;if(!e)throw new Error("No wallet found");return r=yield l.PrivateKeyBundleV1.generate(e),yield t.storePrivateKeyBundle(r),r}))}(t,n)}))}(r,e,n);n.setAuthenticator(new v.Authenticator(i.identityKey));const o=new A(i,n);return yield o.init(r),o}))}static getKeys(e,t){return s(this,void 0,void 0,(function*(){return (yield A.create(e,t)).legacyKeys.encode()}))}init(e){return s(this,void 0,void 0,(function*(){e.codecs.forEach((e=>{this.registerCodec(e);})),this._maxContentSize=e.maxContentSize,yield this.ensureUserContactPublished(e.publishLegacyContact);}))}close(){return s(this,void 0,void 0,(function*(){}))}ensureUserContactPublished(e=!1){return s(this,void 0,void 0,(function*(){const t=yield P(this.apiClient,this.address);t&&t instanceof l.SignedPublicKeyBundle&&this.keys.getPublicKeyBundle().equals(t)||(this.publishUserContact(!0),e||this.publishUserContact(e));}))}publishUserContact(e=!1){return s(this,void 0,void 0,(function*(){const t=e?this.legacyKeys:this.keys;yield this.publishEnvelopes([{contentTopic:(0, u.buildUserContactTopic)(this.address),message:(0, y.encodeContactBundle)(t.getPublicKeyBundle())}]);}))}getUserContact(e){return s(this,void 0,void 0,(function*(){e=c.utils.getAddress(e);const t=this.knownPublicKeyBundles.get(e);if(t)return t;const r=yield P(this.apiClient,e);return r&&this.knownPublicKeyBundles.set(e,r),r}))}forgetContact(e){e=c.utils.getAddress(e),this.knownPublicKeyBundles.delete(e);}canMessage(e){return s(this,void 0,void 0,(function*(){try{return void 0!==(yield this.getUserContact(e))}catch(e){return !1}}))}static canMessage(e,t){return s(this,void 0,void 0,(function*(){try{e=c.utils.getAddress(e);}catch(e){return !1}const r=(null==t?void 0:t.apiUrl)||g.ApiUrls[(null==t?void 0:t.env)||"dev"];return void 0!==(yield P(new g.default(r,{appVersion:null==t?void 0:t.appVersion}),e))}))}validateEnvelope(e){const t=e.message;if(!e.contentTopic)throw new Error("Missing content topic");if(!t||!t.length)throw new Error("Cannot publish empty message")}publishEnvelopes(e){return s(this,void 0,void 0,(function*(){for(const t of e)this.validateEnvelope(t);try{yield this.apiClient.publish(e);}catch(e){console.log(e);}}))}registerCodec(e){const t=e.contentType,r=`${t.authorityId}/${t.typeId}`;this._codecs.set(r,e);}codecFor(e){const t=`${e.authorityId}/${e.typeId}`,r=this._codecs.get(t);if(r&&!(e.versionMajor>r.contentType.versionMajor))return r}encodeContent(e,t){return s(this,void 0,void 0,(function*(){const r=(null==t?void 0:t.contentType)||f.ContentTypeText,n=this.codecFor(r);if(!n)throw new Error("unknown content type "+r);const i=n.encode(e,this);return (null==t?void 0:t.contentFallback)&&(i.fallback=t.contentFallback),(null==t?void 0:t.compression)&&(i.compression=t.compression),yield (0, p.compress)(i),m.content.EncodedContent.encode(i).finish()}))}listInvitations(e){return this.listEnvelopes([(0, u.buildUserInviteTopic)(this.address)],b.SealedInvitation.fromEnvelope,e)}listEnvelopes(e,t,r){return s(this,void 0,void 0,(function*(){r||(r={});const{startTime:n,endTime:i,limit:o}=r,s=yield this.apiClient.query({contentTopics:e,startTime:n,endTime:i},{direction:r.direction||m.messageApi.SortDirection.SORT_DIRECTION_ASCENDING,limit:o}),a=[];for(const e of s)if(e.message)try{const r=yield t(e);a.push(r);}catch(e){console.warn("Error in listEnvelopes mapper",e);}return a}))}listEnvelopesPaginated(e,t,r){return (0, u.mapPaginatedStream)(this.apiClient.queryIteratePages({contentTopics:e,startTime:null==r?void 0:r.startTime,endTime:null==r?void 0:r.endTime},{direction:null==r?void 0:r.direction,pageSize:(null==r?void 0:r.pageSize)||100}),t)}signBytes(e){return s(this,void 0,void 0,(function*(){return this.keys.identityKey.sign(e)}))}}function P(e,t){var r,n;return s(this,void 0,void 0,(function*(){const i=e.queryIterator({contentTopics:[(0, u.buildUserContactTopic)(t)]},{pageSize:5,direction:g.SortDirection.SORT_DIRECTION_DESCENDING});try{for(var o,s=a(i);!(o=yield s.next()).done;){const e=o.value;if(!e.message)continue;const r=(0,y.decodeContactBundle)(_(e.message.toString()));if((yield null==r?void 0:r.walletSignatureAddress())===t)return r}}catch(e){r={error:e};}finally{try{o&&!o.done&&(n=s.return)&&(yield n.call(s));}finally{if(r)throw r.error}}}))}t.default=A;},5783:function(e,t,r){var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};Object.defineProperty(t,"__esModule",{value:!0}),t.writeStreamToBytes=t.readStreamFromBytes=t.compress=t.decompress=void 0;const i=r(9210);function o(e){if(e===i.content.Compression.COMPRESSION_GZIP)return "gzip";if(e===i.content.Compression.COMPRESSION_DEFLATE)return "deflate";throw new Error("unrecognized compression algorithm")}function s(e,t=1024){let r=0;return new ReadableStream({pull(n){if(r>=e.length)return n.close();let i=r+t;i=i<=e.length?i:e.length,n.enqueue(e.subarray(r,i)),r=i;}})}function a(e,t){let r=0;return new WritableStream({write(n){const i=r+n.length;if(i>t)throw new Error("maximum output size exceeded");for(;e.bytes.length<i;)e.bytes=l(e.bytes,t);e.bytes.set(n,r),r=i;},close(){r<e.bytes.length&&(e.bytes=e.bytes.subarray(0,r));}})}function l(e,t){let r=2*e.length;r>t&&(r=t);const n=new Uint8Array(r);return n.set(e),n}r(4215),t.decompress=function(e,t){return n(this,void 0,void 0,(function*(){if(void 0===e.compression)return;const r={bytes:new Uint8Array(e.content.length)};yield s(e.content).pipeThrough(new DecompressionStream(o(e.compression))).pipeTo(a(r,t)),e.content=r.bytes;}))},t.compress=function(e){return n(this,void 0,void 0,(function*(){if(void 0===e.compression)return;const t={bytes:new Uint8Array(e.content.length/10)};yield s(e.content).pipeThrough(new CompressionStream(o(e.compression))).pipeTo(a(t,e.content.length+1e3)),e.content=t.bytes;}))},t.readStreamFromBytes=s,t.writeStreamToBytes=a;},3374:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.encodeContactBundle=t.decodeContactBundle=void 0;const n=r(9210),i=r(2449);t.decodeContactBundle=function(e){var t,r;let o;try{o=n.contact.ContactBundle.decode(e);}catch(t){const r=n.publicKey.PublicKeyBundle.decode(e);o={v1:{keyBundle:new i.PublicKeyBundle(r)},v2:void 0};}if(null===(t=o.v1)||void 0===t?void 0:t.keyBundle)return new i.PublicKeyBundle(o.v1.keyBundle);if(null===(r=o.v2)||void 0===r?void 0:r.keyBundle)return new i.SignedPublicKeyBundle(o.v2.keyBundle);throw new Error("unknown or invalid contact bundle")},t.encodeContactBundle=function(e){return e instanceof i.PublicKeyBundle?n.contact.ContactBundle.encode({v1:{keyBundle:e},v2:void 0}).finish():n.contact.ContactBundle.encode({v1:void 0,v2:{keyBundle:e}}).finish()};},7915:function(e,t,r){var n=r(8764).Buffer,i=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SealedInvitation=t.SealedInvitationV1=t.SealedInvitationHeaderV1=t.InvitationV1=void 0;const s=o(r(1583)),a=r(8245),l=r(9210),u=o(r(7527)),c=r(2449),h=r(5506),{b64Decode:d}=l.fetcher;class f{constructor({topic:e,context:t,aes256GcmHkdfSha256:r}){if(!e||!e.length)throw new Error("Missing topic");if(!r||!r.keyMaterial||!r.keyMaterial.length)throw new Error("Missing key material");this.topic=e,this.context=t,this.aes256GcmHkdfSha256=r;}static createRandom(e){const t=(0, h.buildDirectMessageTopicV2)(n.from(c.utils.getRandomValues(new Uint8Array(32))).toString("base64").replace(/=*$/g,"").replace("/","-")),r=c.utils.getRandomValues(new Uint8Array(32));return new f({topic:t,aes256GcmHkdfSha256:{keyMaterial:r},context:e})}toBytes(){return l.invitation.InvitationV1.encode(this).finish()}static fromBytes(e){return new f(l.invitation.InvitationV1.decode(e))}}t.InvitationV1=f;class p{constructor({sender:e,recipient:t,createdNs:r}){if(!e)throw new Error("Missing sender");if(!t)throw new Error("Missing recipient");this.sender=new a.SignedPublicKeyBundle(e),this.recipient=new a.SignedPublicKeyBundle(t),this.createdNs=r;}toBytes(){return l.invitation.SealedInvitationHeaderV1.encode(this).finish()}static fromBytes(e){return new p(l.invitation.SealedInvitationHeaderV1.decode(e))}}t.SealedInvitationHeaderV1=p;class m{constructor({headerBytes:e,ciphertext:t}){if(!e||!e.length)throw new Error("Missing header bytes");if(!t)throw new Error("Missing ciphertext");this.headerBytes=e,this.ciphertext=new u.default(t);}get header(){return this._header||(this._header=p.fromBytes(this.headerBytes)),this._header}getInvitation(e){return i(this,void 0,void 0,(function*(){if(this._invitation)return this._invitation;const t=this.header;let r;r=e.identityKey.matches(this.header.sender.identityKey)?yield e.sharedSecret(t.recipient,t.sender.preKey,!1):yield e.sharedSecret(t.sender,t.recipient.preKey,!0);const n=yield (0, c.decrypt)(this.ciphertext,r,this.headerBytes);return this._invitation=f.fromBytes(n),this._invitation}))}toBytes(){return l.invitation.SealedInvitationV1.encode(this).finish()}static fromBytes(e){return new m(l.invitation.SealedInvitationV1.decode(e))}}t.SealedInvitationV1=m;class y{constructor({v1:e}){if(!e)throw new Error("Missing v1 invitation");this.v1=new m(e);}toBytes(){return l.invitation.SealedInvitation.encode(this).finish()}static fromBytes(e){return new y(l.invitation.SealedInvitation.decode(e))}static fromEnvelope(e){return i(this,void 0,void 0,(function*(){if(!e.message||!e.timestampNs)throw new Error("invalid invitation envelope");const t=y.fromBytes(d(e.message)),r=s.default.fromString(e.timestampNs);if(!t.v1.header.createdNs.equals(r))throw new Error("envelope and header timestamp mistmatch");return t}))}static createV1({sender:e,recipient:t,created:r,invitation:n}){return i(this,void 0,void 0,(function*(){const i=new p({sender:e.getPublicKeyBundle(),recipient:t,createdNs:(0, h.dateToNs)(r)}).toBytes(),o=yield e.sharedSecret(t,e.getCurrentPreKey().publicKey,!1),s=n.toBytes(),a=yield (0, c.encrypt)(s,o,i);return new y({v1:{headerBytes:i,ciphertext:a}})}))}}t.SealedInvitation=y;},6044:function(e,t,r){var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.decodeContent=t.DecodedMessage=t.MessageV2=t.MessageV1=void 0;const o=r(9210),s=i(r(1583)),a=i(r(7527)),l=r(2449),u=r(9272),c=r(6314),h=r(6397),d=r(6908),f=e=>{var t,r;if(null===(t=e.v1)||void 0===t?void 0:t.ciphertext)return [e.v1.headerBytes,new a.default(e.v1.ciphertext)];if(null===(r=e.v2)||void 0===r?void 0:r.ciphertext)return [e.v2.headerBytes,new a.default(e.v2.ciphertext)];throw new Error("unknown message version")};class p{constructor(e,t,r){[this.headerBytes,this.ciphertext]=f(r),this.id=e,this.bytes=t;}toBytes(){return this.bytes}}class m extends p{constructor(e,t,r,n,i){super(e,t,r),this.conversation=void 0,this.senderAddress=i,this.header=n;}static create(e,t,r){return n(this,void 0,void 0,(function*(){if(!t.sender)throw new Error("missing message sender");const n=new l.PublicKeyBundle(t.sender).walletSignatureAddress(),i=(0, u.bytesToHex)(yield (0, c.sha256)(r));return new m(i,r,e,t,n)}))}get sent(){return new Date(this.header.timestamp.toNumber())}get recipientAddress(){var e,t;if(null===(t=null===(e=this.header)||void 0===e?void 0:e.recipient)||void 0===t?void 0:t.identityKey)return new l.PublicKey(this.header.recipient.identityKey).walletSignatureAddress()}static encode(e,t,r,i){return n(this,void 0,void 0,(function*(){const n=yield e.sharedSecret(t,e.getCurrentPreKey().publicKey,!1),a={sender:e.getPublicKeyBundle(),recipient:t,timestamp:s.default.fromNumber(i.getTime())},u=o.message.MessageHeaderV1.encode(a).finish(),c={v1:{headerBytes:u,ciphertext:yield (0, l.encrypt)(r,n,u)},v2:void 0},h=o.message.Message.encode(c).finish();return m.create(c,a,h)}))}static fromBytes(e){const t=o.message.Message.decode(e),[r]=f(t),n=o.message.MessageHeaderV1.decode(r);if(!n)throw new Error("missing message header");if(!n.sender)throw new Error("missing message sender");if(!n.sender.identityKey)throw new Error("missing message sender identity key");if(!n.sender.preKey)throw new Error("missing message sender pre-key");if(!n.recipient)throw new Error("missing message recipient");if(!n.recipient.identityKey)throw new Error("missing message recipient identity-key");if(!n.recipient.preKey)throw new Error("missing message recipient pre-key");return m.create(t,n,e)}decrypt(e){var t,r;return n(this,void 0,void 0,(function*(){const n=this.header;if(!((null===(t=n.recipient)||void 0===t?void 0:t.identityKey)&&(null===(r=n.sender)||void 0===r?void 0:r.identityKey)&&n.recipient.preKey&&n.sender.preKey))throw new Error("Missing headers");const i=new l.PublicKeyBundle({identityKey:new l.PublicKey(n.recipient.identityKey),preKey:new l.PublicKey(n.recipient.preKey)}),o=new l.PublicKeyBundle({identityKey:new l.PublicKey(n.sender.identityKey),preKey:new l.PublicKey(n.sender.preKey)});let s;return s=e.identityKey.matches(o.identityKey)?yield e.sharedSecret(i,o.preKey,!1):yield e.sharedSecret(o,i.preKey,!0),(0, l.decrypt)(this.ciphertext,s,this.headerBytes)}))}}t.MessageV1=m;class y extends p{constructor(e,t,r,n,i,o){super(e,t,r),this.header=n,this.signed=i,this.senderAddress=o;}static create(e,t,r,i){return n(this,void 0,void 0,(function*(){const n=(0, u.bytesToHex)(yield (0, c.sha256)(i));if(!r.sender)throw new Error("missing message sender");const o=yield new l.SignedPublicKeyBundle(r.sender).walletSignatureAddress();return new y(n,i,e,t,r,o)}))}get sent(){return (0, d.nsToDate)(this.header.createdNs)}}t.MessageV2=y;class g{constructor({id:e,messageVersion:t,senderAddress:r,recipientAddress:n,conversation:i,contentType:o,contentTopic:s,content:a,sent:l,error:u}){this.id=e,this.messageVersion=t,this.senderAddress=r,this.recipientAddress=n,this.conversation=i,this.contentType=o,this.sent=l,this.error=u,this.content=a,this.contentTopic=s;}static fromV1Message(e,t,r,n,i,o){const{id:s,senderAddress:a,recipientAddress:l,sent:u}=e;if(!a)throw new Error("Sender address is required");return new g({id:s,messageVersion:"v1",senderAddress:a,recipientAddress:l,sent:u,content:t,contentType:r,contentTopic:n,conversation:i,error:o})}static fromV2Message(e,t,r,n,i,o){const{id:s,senderAddress:a,sent:l}=e;if(!a)throw new Error("Sender address is required");return new g({id:s,messageVersion:"v2",senderAddress:a,sent:l,content:t,contentType:r,contentTopic:n,conversation:i,error:o})}}t.DecodedMessage=g,t.decodeContent=function(e,t){const r=o.content.EncodedContent.decode(e);if(!r.type)throw new Error("missing content type");let n,i,s=new h.ContentTypeId(r.type);const a=t.codecFor(s);return a?n=a.decode(r,t):(i=new Error("unknown content type "+s),r.fallback&&(n=r.fallback,s=h.ContentTypeFallback)),{content:n,contentType:s,error:i}};},6397:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ContentTypeFallback=t.ContentTypeId=void 0;class r{constructor(e){this.authorityId=e.authorityId,this.typeId=e.typeId,this.versionMajor=e.versionMajor,this.versionMinor=e.versionMinor;}toString(){return `${this.authorityId}/${this.typeId}:${this.versionMajor}.${this.versionMinor}`}sameAs(e){return this.authorityId===e.authorityId&&this.typeId===e.typeId}}t.ContentTypeId=r,t.ContentTypeFallback=new r({authorityId:"xmtp.org",typeId:"fallback",versionMajor:1,versionMinor:0});},4596:function(e,t){var r=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e,t,r,n){this.messages=[],this.resolvers=[],this.topics=t,this.client=e,this.callback=this.newMessageCallback(r,n);}newMessageCallback(e,t){return n=>r(this,void 0,void 0,(function*(){if(n.message)try{const r=yield e(n);if(!r)return;if(t){const e=t(r);e&&this.resubscribeToTopics(e);}const i=this.resolvers.pop();i?i({value:r}):this.messages.unshift(r);}catch(e){console.warn(e);}}))}start(){return r(this,void 0,void 0,(function*(){if(!this.callback)throw new Error("Missing callback for stream");this.unsubscribeFn=this.client.apiClient.subscribe({contentTopics:this.topics},(e=>r(this,void 0,void 0,(function*(){this.callback&&(yield null==this?void 0:this.callback(e));}))));}))}static create(e,t,i,o){return r(this,void 0,void 0,(function*(){const r=new n(e,t,i,o);return yield r.start(),r}))}[Symbol.asyncIterator](){return this}return(){return r(this,void 0,void 0,(function*(){return this.unsubscribeFn&&(yield this.unsubscribeFn()),this.callback?(this.callback=void 0,this.resolvers.forEach((e=>e({value:void 0,done:!0}))),{value:void 0,done:!0}):{value:void 0,done:!0}}))}next(){const e=this.messages.pop();return e?Promise.resolve({value:e}):this.callback?new Promise((e=>this.resolvers.unshift(e))):Promise.resolve({value:void 0,done:!0})}resubscribeToTopics(e){return r(this,void 0,void 0,(function*(){if(!this.callback||!this.unsubscribeFn)throw new Error("Missing callback for stream");yield this.unsubscribeFn(),this.topics=e,this.unsubscribeFn=this.client.apiClient.subscribe({contentTopics:this.topics},(e=>r(this,void 0,void 0,(function*(){this.callback&&(yield null==this?void 0:this.callback(e));}))));}))}}t.default=n;},4203:function(e,t){var r=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e,t=3590){this.authenticator=e,this.maxAgeMs=1e3*t;}getToken(){return r(this,void 0,void 0,(function*(){return (!this.token||this.token.ageMs>this.maxAgeMs)&&(yield this.refresh()),this.token.toBase64()}))}refresh(){return r(this,void 0,void 0,(function*(){this.token=yield this.authenticator.createToken();}))}};},9064:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=r(9210),i=r(6908);class o{constructor({walletAddr:e,createdNs:t}){this.walletAddr=e,this.createdNs=t;}static create(e,t){return t=t||new Date,new o({walletAddr:e,createdNs:(0, i.dateToNs)(t)})}static fromBytes(e){const t=n.authn.AuthData.decode(e);return new o(t)}toBytes(){return n.authn.AuthData.encode(this).finish()}}t.default=o;},2138:function(e,t,r){var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=r(1094),s=r(9210),a=i(r(9064)),l=r(9272),u=i(r(8140));t.default=class{constructor(e){if(!e.publicKey.signature)throw new Error("Provided public key is not signed");this.identityKey=e;}createToken(e){return n(this,void 0,void 0,(function*(){const t=a.default.create(this.identityKey.publicKey.walletSignatureAddress(),e||new Date).toBytes(),r=(0, o.keccak256)(t),n=yield this.identityKey.sign((0, l.hexToBytes)(r));return new u.default(s.authn.Token.fromPartial({identityKey:s.publicKey.PublicKey.fromPartial(this.identityKey.publicKey),authDataBytes:t,authDataSignature:s.signature.Signature.fromPartial(n)}))}))}};},8140:function(e,t,r){var n=r(8764).Buffer,i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=r(9210),s=i(r(9064));class a{constructor({identityKey:e,authDataBytes:t,authDataSignature:r}){if(!e)throw new Error("Missing identity key in token");if(!r)throw new Error("Missing authDataSignature in token");this.identityKey=e,this.authDataBytes=t,this.authDataSignature=r;}get authData(){return this._authData||(this._authData=s.default.fromBytes(this.authDataBytes)),this._authData}get ageMs(){return (new Date).valueOf()-this.authData.createdNs.div(1e6).toNumber()}toBytes(){return o.authn.Token.encode(this).finish()}static fromBytes(e){return new a(o.authn.Token.decode(e))}toBase64(){return n.from(this.toBytes()).toString("base64")}}t.default=a;},9099:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Token=t.AuthData=t.Authenticator=void 0;var i=r(2138);Object.defineProperty(t,"Authenticator",{enumerable:!0,get:function(){return n(i).default}});var o=r(9064);Object.defineProperty(t,"AuthData",{enumerable:!0,get:function(){return n(o).default}});var s=r(8140);Object.defineProperty(t,"Token",{enumerable:!0,get:function(){return n(s).default}});},4196:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CompositeCodec=t.ContentTypeComposite=void 0;const n=r(6397),i=r(9210);t.ContentTypeComposite=new n.ContentTypeId({authorityId:"xmtp.org",typeId:"composite",versionMajor:1,versionMinor:0}),t.CompositeCodec=class{get contentType(){return t.ContentTypeComposite}encode(e,r){const n=this.toProto(e,r);let o;o=n.composite?n.composite:{parts:[n]};const s=i.composite.Composite.encode(o).finish();return {type:t.ContentTypeComposite,parameters:{},content:s}}decode(e,t){return this.fromProto({composite:i.composite.Composite.decode(e.content),part:void 0},t)}toProto(e,t){if("type"in e){const r=t.codecFor(e.type);if(!r)throw new Error(`missing codec for part type ${e.type}`);return {part:r.encode(e.content,t),composite:void 0}}const r=new Array;for(const n of e.parts)r.push(this.toProto(n,t));return {composite:{parts:r},part:void 0}}fromProto(e,t){if(e.part){if(!e.part.type)throw new Error("missing part content type");const r=new n.ContentTypeId(e.part.type),i=t.codecFor(r);if(!i)throw new Error(`missing codec for part type ${r}`);return {type:r,content:i.decode(e.part,t)}}if(!e.composite)throw new Error("invalid composite");const r=new Array;for(const n of e.composite.parts)r.push(this.fromProto(n,t));return {parts:r}}};},6254:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TextCodec=t.Encoding=t.ContentTypeText=void 0;const n=r(6397);var i;t.ContentTypeText=new n.ContentTypeId({authorityId:"xmtp.org",typeId:"text",versionMajor:1,versionMinor:0}),function(e){e.utf8="UTF-8";}(i=t.Encoding||(t.Encoding={})),t.TextCodec=class{get contentType(){return t.ContentTypeText}encode(e){return {type:t.ContentTypeText,parameters:{encoding:i.utf8},content:(new TextEncoder).encode(e)}}decode(e){const t=e.parameters.encoding;if(t&&t!==i.utf8)throw new Error(`unrecognized encoding ${t}`);return (new TextDecoder).decode(e.content)}};},5592:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.XMTP_DEV_WARNING=void 0,t.XMTP_DEV_WARNING="\nXX    XX MM    MM TTTTTT PPPPPP   DDDDD   EEEEEEE VV     VV \n XX  XX  MMM  MMM   TT   PP   PP  DD  DD  EE      VV     VV \n  XXXX   MM MM MM   TT   PPPPPP   DD   DD EEEEE    VV   VV  \n XX  XX  MM    MM   TT   PP       DD   DD EE        VV VV   \nXX    XX MM    MM   TT   PP       DDDDDD  EEEEEEE    VVV    \n\nConnected to the XMTP 'dev' network. Use 'production' for production messages.\nhttps://github.com/xmtp/xmtp-js#xmtp-production-and-dev-network-environments\n";},3937:function(e,t,r){var n=r(8764).Buffer,i=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ConversationV2=t.ConversationV1=void 0;const s=r(5506),a=r(9982),l=r(6044),u=o(r(4596)),c=r(6044),h=r(9210),d=r(2449),f=o(r(7527)),p=r(6314),m=r(6254),{b64Decode:y}=h.fetcher;class g{constructor(e,t,r){this.context=null,this.peerAddress=a.utils.getAddress(t),this.client=e,this.createdAt=r;}messages(e){return i(this,void 0,void 0,(function*(){const t=[(0, s.buildDirectMessageTopic)(this.peerAddress,this.client.address)];return this.client.listEnvelopes(t,this.decodeMessage.bind(this),e)}))}get topic(){return (0, s.buildDirectMessageTopic)(this.peerAddress,this.client.address)}messagesPaginated(e){return this.client.listEnvelopesPaginated([this.topic],this.decodeMessage.bind(this),e)}streamMessages(){return u.default.create(this.client,[this.topic],this.decodeMessage.bind(this))}export(){return {version:"v1",peerAddress:this.peerAddress,createdAt:this.createdAt}}static fromExport(e,t){return new g(e,t.peerAddress,t.createdAt)}decodeMessage({message:e,contentTopic:t}){return i(this,void 0,void 0,(function*(){const r=h.fetcher.b64Decode(e),n=yield c.MessageV1.fromBytes(r),{senderAddress:i,recipientAddress:o}=n;if(!i||!o||!t||(0, s.buildDirectMessageTopic)(i,o)!==this.topic)throw new Error("Headers do not match intended recipient");const a=yield n.decrypt(this.client.legacyKeys),{content:u,contentType:d,error:f}=(0, c.decodeContent)(a,this.client);return l.DecodedMessage.fromV1Message(n,u,d,t,this,f)}))}send(e,t){return i(this,void 0,void 0,(function*(){let r,n=yield this.client.getUserContact(this.peerAddress);if(!n)throw new Error(`recipient ${this.peerAddress} is not registered`);n instanceof d.PublicKeyBundle||(n=n.toLegacyBundle()),this.client.contacts.has(this.peerAddress)?r=[this.topic]:(r=[(0, s.buildUserIntroTopic)(this.peerAddress),(0, s.buildUserIntroTopic)(this.client.address),this.topic],this.client.contacts.add(this.peerAddress));const i=(null==t?void 0:t.contentType)||m.ContentTypeText,o=(null==t?void 0:t.timestamp)||new Date,a=yield this.client.encodeContent(e,t),u=yield c.MessageV1.encode(this.client.legacyKeys,n,a,o);return yield this.client.publishEnvelopes(r.map((e=>({contentTopic:e,message:u.toBytes(),timestamp:u.sent})))),l.DecodedMessage.fromV1Message(u,e,i,r[0],this)}))}get clientAddress(){return this.client.address}}t.ConversationV1=g;class v{constructor(e,t,r,n,i,o){this.topic=t,this.keyMaterial=r,this.createdAt=i,this.context=o,this.client=e,this.peerAddress=n;}static create(e,t,r){return i(this,void 0,void 0,(function*(){const n=e.keys.getPublicKeyBundle().equals(r.sender)?r.recipient:r.sender,i=a.utils.getAddress(yield n.walletSignatureAddress());return new v(e,t.topic,t.aes256GcmHkdfSha256.keyMaterial,i,(0, s.nsToDate)(r.createdNs),t.context)}))}messages(e){return i(this,void 0,void 0,(function*(){return this.client.listEnvelopes([this.topic],this.decodeMessage.bind(this),e)}))}messagesPaginated(e){return this.client.listEnvelopesPaginated([this.topic],this.decodeMessage.bind(this),e)}streamMessages(){return u.default.create(this.client,[this.topic],this.decodeMessage.bind(this))}send(e,t){return i(this,void 0,void 0,(function*(){const r=yield this.encodeMessage(e,t);yield this.client.publishEnvelopes([{contentTopic:this.topic,message:r.toBytes(),timestamp:r.sent}]);const n=(null==t?void 0:t.contentType)||m.ContentTypeText;return l.DecodedMessage.fromV2Message(r,e,n,this.topic,this)}))}get clientAddress(){return this.client.address}encodeMessage(e,t){return i(this,void 0,void 0,(function*(){const r=yield this.client.encodeContent(e,t),n={topic:this.topic,createdNs:(0, s.dateToNs)((null==t?void 0:t.timestamp)||new Date)},i=h.message.MessageHeaderV2.encode(n).finish(),o=yield (0, p.sha256)(b(i,r)),a={payload:r,sender:this.client.keys.getPublicKeyBundle(),signature:yield this.client.keys.getCurrentPreKey().sign(o)},l=h.content.SignedContent.encode(a).finish(),u={v1:void 0,v2:{headerBytes:i,ciphertext:yield (0, d.encrypt)(l,this.keyMaterial,i)}},f=h.message.Message.encode(u).finish();return c.MessageV2.create(u,n,a,f)}))}decodeMessage(e){var t,r,n;return i(this,void 0,void 0,(function*(){if(!e.message||!e.contentTopic)throw new Error("empty envelope");const i=y(e.message.toString()),o=h.message.Message.decode(i);if(!o.v2)throw new Error("unknown message version");const s=o.v2,a=h.message.MessageHeaderV2.decode(s.headerBytes);if(a.topic!==this.topic)throw new Error("topic mismatch");if(!s.ciphertext)throw new Error("missing ciphertext");const u=yield (0, d.decrypt)(new f.default(s.ciphertext),this.keyMaterial,s.headerBytes),m=h.content.SignedContent.decode(u);if(!(null===(t=m.sender)||void 0===t?void 0:t.identityKey)||!(null===(r=m.sender)||void 0===r?void 0:r.preKey)||!m.signature)throw new Error("incomplete signed content");const g=yield (0, p.sha256)(b(s.headerBytes,m.payload));if(!new d.SignedPublicKey(null===(n=m.sender)||void 0===n?void 0:n.preKey).verify(new d.Signature(m.signature),g))throw new Error("invalid signature");const v=yield c.MessageV2.create(o,a,m,i),{content:w,contentType:_,error:S}=(0, c.decodeContent)(m.payload,this.client);return l.DecodedMessage.fromV2Message(v,w,_,e.contentTopic,this,S)}))}export(){return {version:"v2",topic:this.topic,keyMaterial:n.from(this.keyMaterial).toString("base64"),peerAddress:this.peerAddress,createdAt:this.createdAt,context:this.context}}static fromExport(e,t){return new v(e,t.topic,n.from(t.keyMaterial,"base64"),t.peerAddress,t.createdAt,t.context)}}function b(e,t){const r=new Uint8Array(e.length+t.length);return r.set(e),r.set(t,e.length),r}t.ConversationV2=v;},1851:function(e,t,r){var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},i=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,i){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r});}),t);}(n,i,(t=e[r](t)).done,t.value);}))};}},o=this&&this.__await||function(e){return this instanceof o?(this.v=e,this):new o(e)},s=this&&this.__asyncGenerator||function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(e,t||[]),s=[];return n={},a("next"),a("throw"),a("return"),n[Symbol.asyncIterator]=function(){return this},n;function a(e){i[e]&&(n[e]=function(t){return new Promise((function(r,n){s.push([e,t,r,n])>1||l(e,t);}))});}function l(e,t){try{(r=i[e](t)).value instanceof o?Promise.resolve(r.value.v).then(u,c):h(s[0][2],r);}catch(e){h(s[0][3],e);}var r;}function u(e){l("next",e);}function c(e){l("throw",e);}function h(e,t){e(t),s.shift(),s.length&&l(s[0][0],s[0][1]);}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ConversationCache=void 0;const l=r(8125),u=r(8245),c=r(3937),h=r(6044),d=a(r(4596)),f=r(5506),p=r(7915),m=r(2449),y=r(9210),g=r(1962),{b64Decode:v}=y.fetcher,b=e=>Boolean(e.recipientAddress&&e.senderAddress);class w{constructor(){this.conversations=[],this.mutex=new l.Mutex,this.seenTopics=new Set;}load(e){return n(this,void 0,void 0,(function*(){const t=yield this.mutex.acquire();try{const r=yield e({latestSeen:this.latestSeen,existing:this.conversations});for(const e of r)this.seenTopics.has(e.topic)||(this.seenTopics.add(e.topic),this.conversations.push(e),(!this.latestSeen||e.createdAt>this.latestSeen)&&(this.latestSeen=e.createdAt));}finally{t();}return [...this.conversations]}))}}t.ConversationCache=w,t.default=class{constructor(e){this.client=e,this.v1Cache=new w,this.v2Cache=new w;}list(){return n(this,void 0,void 0,(function*(){const[e,t]=yield Promise.all([this.listV1Conversations(),this.listV2Conversations()]),r=e.concat(t);return r.sort(((e,t)=>e.createdAt.getTime()-t.createdAt.getTime())),r}))}listV1Conversations(){return n(this,void 0,void 0,(function*(){return this.v1Cache.load((({latestSeen:e})=>n(this,void 0,void 0,(function*(){const t=yield this.getIntroductionPeers({startTime:e?new Date(+e-1e4):void 0,direction:g.SortDirection.SORT_DIRECTION_ASCENDING});return Array.from(t).map((([e,t])=>new c.ConversationV1(this.client,e,t)))}))))}))}listV2Conversations(){return n(this,void 0,void 0,(function*(){return this.v2Cache.load((({latestSeen:e})=>n(this,void 0,void 0,(function*(){return this.v2ConversationLoader(e)}))))}))}v2ConversationLoader(e){return n(this,void 0,void 0,(function*(){const t=[],r=yield this.client.listInvitations({startTime:e?new Date(+e-1e4):void 0,direction:g.SortDirection.SORT_DIRECTION_ASCENDING});for(const e of r)try{const r=yield e.v1.getInvitation(this.client.keys);t.push(yield c.ConversationV2.create(this.client,r,e.v1.header));}catch(e){console.warn("Error decrypting invitation",e);}return t}))}stream(){return n(this,void 0,void 0,(function*(){const e=new Set,t=(0, f.buildUserIntroTopic)(this.client.address),r=(0, f.buildUserInviteTopic)(this.client.address);return d.default.create(this.client,[r,t],(i=>n(this,void 0,void 0,(function*(){if(i.contentTopic===t){const t=v(i.message),r=yield h.MessageV1.fromBytes(t);yield r.decrypt(this.client.legacyKeys);const n=this.getPeerAddress(r);if(!(t=>!e.has(t)&&(e.add(t),!0))(n))return;return new c.ConversationV1(this.client,n,r.sent)}if(i.contentTopic===r){const e=yield p.SealedInvitation.fromEnvelope(i),t=yield e.v1.getInvitation(this.client.keys);return yield c.ConversationV2.create(this.client,t,e.v1.header)}throw new Error("unrecognized invite topic")}))).bind(this))}))}streamAllMessages(){return n(this,void 0,void 0,(function*(){const e=(0, f.buildUserIntroTopic)(this.client.address),t=(0, f.buildUserInviteTopic)(this.client.address),r=new Set([e,t]),a=new Map;for(const e of yield this.list())r.add(e.topic),a.set(e.topic,e);const l=(e,t)=>!r.has(e)&&(a.set(e,t),r.add(e),!0),u=yield d.default.create(this.client,Array.from(r.values()),(r=>n(this,void 0,void 0,(function*(){const n=r.contentTopic;if(!n)return null;if(n===e){const e=v(r.message),t=yield h.MessageV1.fromBytes(e);if(!b(t))return null;yield t.decrypt(this.client.legacyKeys);const n=t.senderAddress===this.client.address?t.recipientAddress:t.senderAddress;return new c.ConversationV1(this.client,n,t.sent).decodeMessage(r)}if(n===t){const e=yield p.SealedInvitation.fromEnvelope(r),t=yield e.v1.getInvitation(this.client.keys);return c.ConversationV2.create(this.client,t,e.v1.header)}const i=a.get(n);if(i instanceof c.ConversationV1)return i.decodeMessage(r);if(i instanceof c.ConversationV2)return i.decodeMessage(r);throw console.log("Unknown topic"),new Error("Unknown topic")}))),(t=>{if(t instanceof h.DecodedMessage&&t.contentTopic===e){const e=new c.ConversationV1(this.client,t.recipientAddress===this.client.address?t.senderAddress:t.recipientAddress,t.sent);return l(e.topic,e)?Array.from(r.values()):void 0}if(t instanceof c.ConversationV2)return l(t.topic,t)?Array.from(r.values()):void 0}));return function(){return s(this,arguments,(function*(){var e,t;try{for(var r,n=i(u);!(r=yield o(n.next())).done;){const e=r.value;if(e instanceof h.DecodedMessage&&(yield yield o(e)),e instanceof c.ConversationV2)for(const t of yield o(e.messages()))yield yield o(t);}}catch(t){e={error:t};}finally{try{r&&!r.done&&(t=n.return)&&(yield o(t.call(n)));}finally{if(e)throw e.error}}}))}()}))}getIntroductionPeers(e){return n(this,void 0,void 0,(function*(){const t=yield this.client.listEnvelopes([(0, f.buildUserIntroTopic)(this.client.address)],(e=>n(this,void 0,void 0,(function*(){const t=yield h.MessageV1.fromBytes(v(e.message));return yield t.decrypt(this.client.legacyKeys),t}))),e),r=new Map;for(const e of t){if(!b(e))continue;const t=this.getPeerAddress(e);if(t){const n=r.get(t);(!n||n>e.sent)&&r.set(t,e.sent);}}return r}))}newConversation(e,t){return n(this,void 0,void 0,(function*(){let r=yield this.client.getUserContact(e);if(!r)throw new Error(`Recipient ${e} is not on the XMTP network`);if(r instanceof m.PublicKeyBundle&&!(null==t?void 0:t.conversationId))return new c.ConversationV1(this.client,e,new Date);if(!(null==t?void 0:t.conversationId)){const t=(yield this.listV1Conversations()).find((t=>t.peerAddress===e));if(t){if(!this.client.keys.getPublicKeyBundle().isFromLegacyBundle())throw new Error("cannot resume pre-existing V1 conversation; client keys not compatible");if(!(r instanceof m.PublicKeyBundle||r.isFromLegacyBundle()))throw new Error("cannot resume pre-existing V1 conversation; peer keys not compatible");return t}}r instanceof m.PublicKeyBundle&&(r=u.SignedPublicKeyBundle.fromLegacyBundle(r));const i=r=>{var n,i,o;return r.peerAddress===e&&(i=t,o=null!==(n=r.context)&&void 0!==n?n:void 0,(null==i?void 0:i.conversationId)===(null==o?void 0:o.conversationId))};let o;if(yield this.v2Cache.load((({latestSeen:e,existing:s})=>n(this,void 0,void 0,(function*(){const n=s.find(i);if(n)return o=n,[];const a=yield this.v2ConversationLoader(e),l=a.find(i);if(l)return o=l,a;const u=p.InvitationV1.createRandom(t),h=yield this.sendInvitation(r,u,new Date);return o=yield c.ConversationV2.create(this.client,u,h.v1.header),[o]})))),!o)throw new Error("Failed to create conversation");return o}))}export(){return n(this,void 0,void 0,(function*(){return (yield this.list()).map((e=>e.export()))}))}import(e){return n(this,void 0,void 0,(function*(){const t=[],r=[];let i=0;for(const n of e)try{"v1"===n.version?t.push(c.ConversationV1.fromExport(this.client,n)):"v2"===n.version&&r.push(c.ConversationV2.fromExport(this.client,n));}catch(e){console.log("Failed to import conversation",e),i+=1;}return yield Promise.all([this.v1Cache.load((()=>n(this,void 0,void 0,(function*(){return t})))),this.v2Cache.load((()=>n(this,void 0,void 0,(function*(){return r}))))]),i}))}sendInvitation(e,t,r){return n(this,void 0,void 0,(function*(){const n=yield p.SealedInvitation.createV1({sender:this.client.keys,recipient:e,created:r,invitation:t}),i=yield e.walletSignatureAddress();return this.client.publishEnvelopes([{contentTopic:(0, f.buildUserInviteTopic)(i),message:n.toBytes(),timestamp:r},{contentTopic:(0, f.buildUserInviteTopic)(this.client.address),message:n.toBytes(),timestamp:r}]),n}))}getPeerAddress(e){return e.recipientAddress===this.client.address?e.senderAddress:e.recipientAddress}};},5880:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ConversationV2=t.ConversationV1=t.Conversations=void 0;var i=r(1851);Object.defineProperty(t,"Conversations",{enumerable:!0,get:function(){return n(i).default}});var o=r(3937);Object.defineProperty(t,"ConversationV1",{enumerable:!0,get:function(){return o.ConversationV1}}),Object.defineProperty(t,"ConversationV2",{enumerable:!0,get:function(){return o.ConversationV2}});},7527:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AESGCMTagLength=t.AESGCMNonceSize=t.KDFSaltSize=t.AESKeySize=void 0;const n=r(9210);t.AESKeySize=32,t.KDFSaltSize=32,t.AESGCMNonceSize=12,t.AESGCMTagLength=16;class i{constructor(e){if(!e.aes256GcmHkdfSha256)throw new Error("invalid ciphertext");if(e.aes256GcmHkdfSha256.payload.length<t.AESGCMTagLength)throw new Error(`invalid ciphertext ciphertext length: ${e.aes256GcmHkdfSha256.payload.length}`);if(e.aes256GcmHkdfSha256.hkdfSalt.length!==t.KDFSaltSize)throw new Error(`invalid ciphertext salt length: ${e.aes256GcmHkdfSha256.hkdfSalt.length}`);if(e.aes256GcmHkdfSha256.gcmNonce.length!==t.AESGCMNonceSize)throw new Error(`invalid ciphertext nonce length: ${e.aes256GcmHkdfSha256.gcmNonce.length}`);this.aes256GcmHkdfSha256=e.aes256GcmHkdfSha256;}toBytes(){return n.ciphertext.Ciphertext.encode(this).finish()}static fromBytes(e){return new i(n.ciphertext.Ciphertext.decode(e))}}t.default=i;},270:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}});}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r];}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t});}:function(e,t){e.default=t;}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},s=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PrivateKey=t.SignedPrivateKey=void 0;const l=r(9210),u=o(r(9656)),c=a(r(1583)),h=o(r(6002)),d=r(2940),f=r(6314),p=r(9272);function m(e){if(32!==e.bytes.length)throw new Error(`invalid private key length: ${e.bytes.length}`)}class y{constructor(e){if(!e.secp256k1)throw new Error("invalid private key");if(m(e.secp256k1),this.secp256k1=e.secp256k1,this.createdNs=e.createdNs,!e.publicKey)throw new Error("missing public key");this.publicKey=new d.SignedPublicKey(e.publicKey);}static generate(e){return s(this,void 0,void 0,(function*(){const t={bytes:u.utils.randomPrivateKey()},r=c.default.fromNumber((new Date).getTime()).mul(1e6),n=new d.UnsignedPublicKey({secp256k1Uncompressed:{bytes:u.getPublicKey(t.bytes)},createdNs:r}),i=yield e.signKey(n);return new y({secp256k1:t,createdNs:r,publicKey:i})}))}generated(){return new Date(this.createdNs.div(1e6).toNumber())}sign(e){return s(this,void 0,void 0,(function*(){const[t,r]=yield u.sign(e,this.secp256k1.bytes,{recovered:!0,der:!1});return new h.default({ecdsaCompact:{bytes:t,recovery:r}})}))}signKey(e){return s(this,void 0,void 0,(function*(){const t=e.toBytes(),r=yield (0, f.sha256)(t),n=yield this.sign(r);return new d.SignedPublicKey({keyBytes:t,signature:n})}))}static signerKey(e,t){return s(this,void 0,void 0,(function*(){const r=yield (0, f.sha256)(e.bytesToSign());return (0, h.ecdsaSignerKey)(r,t)}))}sharedSecret(e){return u.getSharedSecret(this.secp256k1.bytes,e.secp256k1Uncompressed.bytes,!1)}encrypt(e,t,r){const n=this.sharedSecret(t);return (0, f.encrypt)(e,n,r)}decrypt(e,t,r){const n=this.sharedSecret(t);return (0, f.decrypt)(e,n,r)}matches(e){return this.publicKey.equals(e)}equals(e){return (0, p.equalBytes)(this.secp256k1.bytes,e.secp256k1.bytes)&&this.publicKey.equals(e.publicKey)}toBytes(){return l.privateKey.SignedPrivateKey.encode(this).finish()}static fromBytes(e){return new y(l.privateKey.SignedPrivateKey.decode(e))}static fromLegacyKey(e,t){return new y({createdNs:e.timestamp.mul(1e6),secp256k1:e.secp256k1,publicKey:d.SignedPublicKey.fromLegacyKey(e.publicKey,t)})}}t.SignedPrivateKey=y;class g{constructor(e){if(!e.secp256k1)throw new Error("invalid private key");if(m(e.secp256k1),this.timestamp=e.timestamp,this.secp256k1=e.secp256k1,!e.publicKey)throw new Error("missing public key");this.publicKey=new d.PublicKey(e.publicKey);}static generate(){const e={bytes:u.utils.randomPrivateKey()},t=c.default.fromNumber((new Date).getTime());return new g({secp256k1:e,timestamp:t,publicKey:new d.PublicKey({secp256k1Uncompressed:{bytes:u.getPublicKey(e.bytes)},timestamp:t})})}generated(){return new Date(this.timestamp.toNumber())}sign(e){return s(this,void 0,void 0,(function*(){const[t,r]=yield u.sign(e,this.secp256k1.bytes,{recovered:!0,der:!1});return new h.default({ecdsaCompact:{bytes:t,recovery:r}})}))}signKey(e){return s(this,void 0,void 0,(function*(){const t=yield (0, f.sha256)(e.bytesToSign());return e.signature=yield this.sign(t),e}))}sharedSecret(e){return u.getSharedSecret(this.secp256k1.bytes,e.secp256k1Uncompressed.bytes,!1)}encrypt(e,t,r){const n=this.sharedSecret(t);return (0, f.encrypt)(e,n,r)}decrypt(e,t,r){const n=this.sharedSecret(t);return (0, f.decrypt)(e,n,r)}matches(e){return this.publicKey.equals(e)}toBytes(){return l.privateKey.PrivateKey.encode(this).finish()}static fromBytes(e){return new g(l.privateKey.PrivateKey.decode(e))}}t.PrivateKey=g;},741:function(e,t,r){var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};Object.defineProperty(t,"__esModule",{value:!0}),t.decodePrivateKeyBundle=t.PrivateKeyBundleV1=t.PrivateKeyBundleV2=void 0;const i=r(9210),o=r(270),s=r(6002),a=r(8245),l=r(4728);class u{constructor(e){if(this.version=2,!e.identityKey)throw new Error("missing identity key");this.identityKey=new o.SignedPrivateKey(e.identityKey),this.preKeys=(e.preKeys||[]).map((e=>new o.SignedPrivateKey(e)));}static generate(e){return n(this,void 0,void 0,(function*(){const t=yield o.SignedPrivateKey.generate(new s.WalletSigner(e)),r=new u({identityKey:t,preKeys:[]});return yield r.addPreKey(),r}))}getCurrentPreKey(){return this.preKeys[0]}findPreKey(e){const t=this.preKeys.find((t=>t.matches(e)));if(!t)throw new l.NoMatchingPreKeyError(e);return t}addPreKey(){return n(this,void 0,void 0,(function*(){this._publicKeyBundle=void 0;const e=yield o.SignedPrivateKey.generate(this.identityKey);this.preKeys.unshift(e);}))}getPublicKeyBundle(){return this._publicKeyBundle||(this._publicKeyBundle=new a.SignedPublicKeyBundle({identityKey:this.identityKey.publicKey,preKey:this.getCurrentPreKey().publicKey})),this._publicKeyBundle}sharedSecret(e,t,r){return n(this,void 0,void 0,(function*(){if(!e.identityKey||!e.preKey)throw new Error("invalid peer key bundle");if(!(yield e.identityKey.verifyKey(e.preKey)))throw new Error("peer preKey signature invalid");if(!this.identityKey)throw new Error("missing identity key");let n,i,o;r?(o=this.findPreKey(t),n=o.sharedSecret(e.identityKey),i=this.identityKey.sharedSecret(e.preKey)):(o=this.findPreKey(t),n=this.identityKey.sharedSecret(e.preKey),i=o.sharedSecret(e.identityKey));const s=o.sharedSecret(e.preKey),a=new Uint8Array(n.length+i.length+s.length);return a.set(n,0),a.set(i,n.length),a.set(s,n.length+i.length),a}))}encode(){return i.privateKey.PrivateKeyBundle.encode({v1:void 0,v2:this}).finish()}equals(e){if(this.preKeys.length!==e.preKeys.length)return !1;for(let t=0;t<this.preKeys.length;t++)if(!this.preKeys[t].equals(e.preKeys[t]))return !1;return this.identityKey.equals(e.identityKey)}static fromLegacyBundle(e){return new u({identityKey:o.SignedPrivateKey.fromLegacyKey(e.identityKey,!0),preKeys:e.preKeys.map((e=>o.SignedPrivateKey.fromLegacyKey(e)))})}}t.PrivateKeyBundleV2=u;class c{constructor(e){if(this.version=1,!e.identityKey)throw new Error("missing identity key");this.identityKey=new o.PrivateKey(e.identityKey),this.preKeys=(e.preKeys||[]).map((e=>new o.PrivateKey(e)));}static generate(e){return n(this,void 0,void 0,(function*(){const t=o.PrivateKey.generate();e&&(yield t.publicKey.signWithWallet(e));const r=new c({identityKey:t,preKeys:[]});return yield r.addPreKey(),r}))}getCurrentPreKey(){return this.preKeys[0]}findPreKey(e){const t=this.preKeys.find((t=>t.matches(e)));if(!t)throw new l.NoMatchingPreKeyError(e);return t}addPreKey(){return n(this,void 0,void 0,(function*(){this._publicKeyBundle=void 0;const e=o.PrivateKey.generate();yield this.identityKey.signKey(e.publicKey),this.preKeys.unshift(e);}))}getPublicKeyBundle(){return this._publicKeyBundle||(this._publicKeyBundle=new a.PublicKeyBundle({identityKey:this.identityKey.publicKey,preKey:this.getCurrentPreKey().publicKey})),this._publicKeyBundle}sharedSecret(e,t,r){return n(this,void 0,void 0,(function*(){if(!e.identityKey||!e.preKey)throw new Error("invalid peer key bundle");if(!(yield e.identityKey.verifyKey(e.preKey)))throw new Error("peer preKey signature invalid");if(!this.identityKey)throw new Error("missing identity key");let n,i,o;r?(o=this.findPreKey(t),n=o.sharedSecret(e.identityKey),i=this.identityKey.sharedSecret(e.preKey)):(o=this.findPreKey(t),n=this.identityKey.sharedSecret(e.preKey),i=o.sharedSecret(e.identityKey));const s=o.sharedSecret(e.preKey),a=new Uint8Array(n.length+i.length+s.length);return a.set(n,0),a.set(i,n.length),a.set(s,n.length+i.length),a}))}encode(){return i.privateKey.PrivateKeyBundle.encode({v1:this,v2:void 0}).finish()}}t.PrivateKeyBundleV1=c,t.decodePrivateKeyBundle=function(e){const t=i.privateKey.PrivateKeyBundle.decode(e);if(t.v1)return new c(t.v1);if(t.v2)return new u(t.v2);throw new Error("unknown private key bundle version")};},2940:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}});}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r];}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t});}:function(e,t){e.default=t;}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},s=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PublicKey=t.SignedPublicKey=t.UnsignedPublicKey=void 0;const l=r(9210),u=o(r(9656)),c=a(r(1583)),h=o(r(6002)),d=r(9272),f=r(9982),p=r(6314),m=new c.default(Math.pow(10,9)).mul(Math.pow(10,9));class y{constructor(e){if(!(null==e?void 0:e.secp256k1Uncompressed))throw new Error("invalid public key");!function(e){if(65!==e.bytes.length)throw new Error(`invalid public key length: ${e.bytes.length}`);if(4!==e.bytes[0])throw new Error(`unrecognized public key prefix: ${e.bytes[0]}`)}(e.secp256k1Uncompressed),this.secp256k1Uncompressed=e.secp256k1Uncompressed,this.createdNs=e.createdNs.toUnsigned();}generated(){return new Date(this.timestamp.toNumber())}isFromLegacyKey(){return this.createdNs.lessThan(m)}get timestamp(){return (this.isFromLegacyKey()?this.createdNs:this.createdNs.div(1e6)).toUnsigned()}verify(e,t){return !!e.ecdsaCompact&&u.verify(e.ecdsaCompact.bytes,t,this.secp256k1Uncompressed.bytes)}verifyKey(e){return s(this,void 0,void 0,(function*(){if(!e.signature)return !1;const t=yield (0, p.sha256)(e.bytesToSign());return this.verify(e.signature,t)}))}equals(e){return (0, d.equalBytes)(this.secp256k1Uncompressed.bytes,e.secp256k1Uncompressed.bytes)}getEthereumAddress(){return f.utils.computeAddress(this.secp256k1Uncompressed.bytes)}toBytes(){return l.publicKey.UnsignedPublicKey.encode(this).finish()}static fromBytes(e){return new y(l.publicKey.UnsignedPublicKey.decode(e))}}t.UnsignedPublicKey=y;class g extends y{constructor(e){if(!e.keyBytes)throw new Error("missing key bytes");if(super(l.publicKey.UnsignedPublicKey.decode(e.keyBytes)),this.keyBytes=e.keyBytes,!e.signature)throw new Error("missing key signature");this.signature=new h.default(e.signature);}get unsignedKey(){return new y({createdNs:this.createdNs,secp256k1Uncompressed:this.secp256k1Uncompressed})}signerKey(){return this.signature.signerKey(this)}walletSignatureAddress(){return s(this,void 0,void 0,(function*(){if(!this.signature.walletEcdsaCompact)throw new Error("key was not signed by a wallet");const e=yield this.signerKey();if(!e)throw new Error("key signature not valid");return e.getEthereumAddress()}))}equals(e){return this.unsignedKey.equals(e.unsignedKey)&&this.signature.equals(e.signature)}bytesToSign(){return this.keyBytes}toBytes(){return l.publicKey.SignedPublicKey.encode(this).finish()}static fromBytes(e){return new g(l.publicKey.SignedPublicKey.decode(e))}toLegacyKey(){if(!this.isFromLegacyKey())throw new Error("cannot be converted to legacy key");let e=this.signature;return e.walletEcdsaCompact&&(e=new h.default({ecdsaCompact:e.walletEcdsaCompact})),new v({timestamp:this.timestamp,secp256k1Uncompressed:this.secp256k1Uncompressed,signature:e})}static fromLegacyKey(e,t){if(!e.signature)throw new Error("key is not signed");let r=e.signature;return t&&(r=new h.default({walletEcdsaCompact:r.ecdsaCompact})),new g({keyBytes:e.bytesToSign(),signature:r})}}t.SignedPublicKey=g;class v extends y{constructor(e){super({createdNs:e.timestamp.mul(1e6),secp256k1Uncompressed:e.secp256k1Uncompressed}),e.signature&&(this.signature=new h.default(e.signature));}get timestamp(){return this.createdNs.div(1e6)}bytesToSign(){return l.publicKey.PublicKey.encode({timestamp:this.timestamp,secp256k1Uncompressed:this.secp256k1Uncompressed}).finish()}signWithWallet(e){return s(this,void 0,void 0,(function*(){const t=yield e.signMessage(h.WalletSigner.identitySigRequestText(this.bytesToSign())),r=f.utils.splitSignature(t),n=(0, d.hexToBytes)(r.r),i=(0, d.hexToBytes)(r.s),o=new Uint8Array(64);o.set(n),o.set(i,n.length),this.signature=new h.default({ecdsaCompact:{bytes:o,recovery:r.recoveryParam}});}))}walletSignatureAddress(){if(!this.signature)throw new Error("key is not signed");const e=(0, d.hexToBytes)(f.utils.hashMessage(h.WalletSigner.identitySigRequestText(this.bytesToSign()))),t=this.signature.getPublicKey(e);if(!t)throw new Error("key signature is malformed");return t.getEthereumAddress()}toBytes(){return l.publicKey.PublicKey.encode(this).finish()}static fromBytes(e){return new v(l.publicKey.PublicKey.decode(e))}}t.PublicKey=v;},8245:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PublicKeyBundle=t.SignedPublicKeyBundle=void 0;const n=r(9210),i=r(2940);class o{constructor(e){if(!e.identityKey)throw new Error("missing identity key");if(!e.preKey)throw new Error("missing pre-key");this.identityKey=new i.SignedPublicKey(e.identityKey),this.preKey=new i.SignedPublicKey(e.preKey);}walletSignatureAddress(){return this.identityKey.walletSignatureAddress()}equals(e){return this.identityKey.equals(e.identityKey)&&this.preKey.equals(e.preKey)}toBytes(){return n.publicKey.SignedPublicKeyBundle.encode(this).finish()}isFromLegacyBundle(){return this.identityKey.isFromLegacyKey()&&this.preKey.isFromLegacyKey()}toLegacyBundle(){return new s({identityKey:this.identityKey.toLegacyKey(),preKey:this.preKey.toLegacyKey()})}static fromBytes(e){const t=n.publicKey.SignedPublicKeyBundle.decode(e);return new o(t)}static fromLegacyBundle(e){return new o({identityKey:i.SignedPublicKey.fromLegacyKey(e.identityKey,!0),preKey:i.SignedPublicKey.fromLegacyKey(e.preKey)})}}t.SignedPublicKeyBundle=o;class s{constructor(e){if(!e.identityKey)throw new Error("missing identity key");if(!e.preKey)throw new Error("missing pre-key");this.identityKey=new i.PublicKey(e.identityKey),this.preKey=new i.PublicKey(e.preKey);}equals(e){return this.identityKey.equals(e.identityKey)&&this.preKey.equals(e.preKey)}walletSignatureAddress(){return this.identityKey.walletSignatureAddress()}toBytes(){return n.publicKey.PublicKeyBundle.encode(this).finish()}static fromBytes(e){const t=n.publicKey.PublicKeyBundle.decode(e);return new s(t)}}t.PublicKeyBundle=s;},6002:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}});}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r];}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t});}:function(e,t){e.default=t;}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},s=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.WalletSigner=t.ecdsaSignerKey=void 0;const l=r(9210),u=a(r(1583)),c=o(r(9656)),h=r(2940),d=r(270),f=r(9982),p=r(9272);function m(e){if(64!==e.bytes.length)throw new Error(`invalid signature length: ${e.bytes.length}`);if(0!==e.recovery&&1!==e.recovery)throw new Error(`invalid recovery bit: ${e.recovery}`)}function y(e,t){return e.recovery===t.recovery&&(0, p.equalBytes)(e.bytes,t.bytes)}function g(e,t){const r=c.recoverPublicKey(e,t.bytes,t.recovery);return r?new h.UnsignedPublicKey({secp256k1Uncompressed:{bytes:r},createdNs:u.default.fromNumber(0)}):void 0}t.ecdsaSignerKey=g;class v{constructor(e){if(e.ecdsaCompact)m(e.ecdsaCompact),this.ecdsaCompact=e.ecdsaCompact;else {if(!e.walletEcdsaCompact)throw new Error("invalid signature");m(e.walletEcdsaCompact),this.walletEcdsaCompact=e.walletEcdsaCompact;}}signerKey(e){return s(this,void 0,void 0,(function*(){return this.ecdsaCompact?d.SignedPrivateKey.signerKey(e,this.ecdsaCompact):this.walletEcdsaCompact?b.signerKey(e,this.walletEcdsaCompact):void 0}))}getPublicKey(e){if(!this.ecdsaCompact)throw new Error("invalid signature");const t=c.recoverPublicKey(e,this.ecdsaCompact.bytes,this.ecdsaCompact.recovery);return t?new h.PublicKey({secp256k1Uncompressed:{bytes:t},timestamp:u.default.fromNumber(0)}):void 0}equals(e){return this.ecdsaCompact&&e.ecdsaCompact?y(this.ecdsaCompact,e.ecdsaCompact):!(!this.walletEcdsaCompact||!e.walletEcdsaCompact)&&y(this.walletEcdsaCompact,e.walletEcdsaCompact)}toBytes(){return l.signature.Signature.encode(this).finish()}static fromBytes(e){return new v(l.signature.Signature.decode(e))}}t.default=v;class b{constructor(e){this.wallet=e;}static identitySigRequestText(e){return `XMTP : Create Identity\n${(0, p.bytesToHex)(e)}\n\nFor more info: https://xmtp.org/signatures/`}static signerKey(e,t){return g((0, p.hexToBytes)(f.utils.hashMessage(this.identitySigRequestText(e.bytesToSign()))),t)}signKey(e){return s(this,void 0,void 0,(function*(){const t=e.toBytes(),r=yield this.wallet.signMessage(b.identitySigRequestText(t)),n=f.utils.splitSignature(r),i=(0, p.hexToBytes)(n.r),o=(0, p.hexToBytes)(n.s),s=new Uint8Array(64);s.set(i),s.set(o,i.length);const a=new v({walletEcdsaCompact:{bytes:s,recovery:n.recoveryParam}});return new h.SignedPublicKey({keyBytes:t,signature:a})}))}}t.WalletSigner=b;},6314:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}});}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r];}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t});}:function(e,t){e.default=t;}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},s=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};Object.defineProperty(t,"__esModule",{value:!0}),t.decrypt=t.encrypt=t.sha256=t.crypto=void 0;const a=o(r(7527));t.crypto="undefined"!=typeof window?window.crypto:"undefined"!=typeof self&&self instanceof WorkerGlobalScope?self.crypto:r(2114).webcrypto;const l=new ArrayBuffer(0);function u(e,t){const r={name:"AES-GCM",iv:e};return t&&(r.additionalData=t),r}function c(e,r){return s(this,void 0,void 0,(function*(){const n=yield t.crypto.subtle.importKey("raw",e,"HKDF",!1,["deriveKey"]);return t.crypto.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:r,info:l},n,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}))}t.sha256=function(e){return s(this,void 0,void 0,(function*(){return new Uint8Array(yield t.crypto.subtle.digest("SHA-256",e))}))},t.encrypt=function(e,r,n){return s(this,void 0,void 0,(function*(){const i=t.crypto.getRandomValues(new Uint8Array(a.KDFSaltSize)),o=t.crypto.getRandomValues(new Uint8Array(a.AESGCMNonceSize)),s=yield c(r,i),l=yield t.crypto.subtle.encrypt(u(o,n),s,e);return new a.default({aes256GcmHkdfSha256:{payload:new Uint8Array(l),hkdfSalt:i,gcmNonce:o}})}))},t.decrypt=function(e,r,n){return s(this,void 0,void 0,(function*(){if(!e.aes256GcmHkdfSha256)throw new Error("invalid payload ciphertext");const i=yield c(r,e.aes256GcmHkdfSha256.hkdfSalt),o=yield t.crypto.subtle.decrypt(u(e.aes256GcmHkdfSha256.gcmNonce,n),i,e.aes256GcmHkdfSha256.payload);return new Uint8Array(o)}))};},4728:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NoMatchingPreKeyError=void 0;const n=r(9272);class i extends Error{constructor(e){super(`no pre-key matches: ${(0, n.bytesToHex)(e.secp256k1Uncompressed.bytes)}`);}}t.NoMatchingPreKeyError=i;},2449:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}});}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r];}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t});}:function(e,t){e.default=t;}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WalletSigner=t.Signature=t.PrivateKeyBundleV2=t.PrivateKeyBundleV1=t.decodePrivateKeyBundle=t.SignedPrivateKey=t.PrivateKey=t.PublicKeyBundle=t.PublicKey=t.SignedPublicKeyBundle=t.SignedPublicKey=t.UnsignedPublicKey=t.decrypt=t.encrypt=t.utils=void 0;const s=r(8245);Object.defineProperty(t,"PublicKeyBundle",{enumerable:!0,get:function(){return s.PublicKeyBundle}}),Object.defineProperty(t,"SignedPublicKeyBundle",{enumerable:!0,get:function(){return s.SignedPublicKeyBundle}});const a=r(270);Object.defineProperty(t,"SignedPrivateKey",{enumerable:!0,get:function(){return a.SignedPrivateKey}}),Object.defineProperty(t,"PrivateKey",{enumerable:!0,get:function(){return a.PrivateKey}});const l=r(741);Object.defineProperty(t,"PrivateKeyBundleV1",{enumerable:!0,get:function(){return l.PrivateKeyBundleV1}}),Object.defineProperty(t,"PrivateKeyBundleV2",{enumerable:!0,get:function(){return l.PrivateKeyBundleV2}}),Object.defineProperty(t,"decodePrivateKeyBundle",{enumerable:!0,get:function(){return l.decodePrivateKeyBundle}});const u=r(2940);Object.defineProperty(t,"UnsignedPublicKey",{enumerable:!0,get:function(){return u.UnsignedPublicKey}}),Object.defineProperty(t,"SignedPublicKey",{enumerable:!0,get:function(){return u.SignedPublicKey}}),Object.defineProperty(t,"PublicKey",{enumerable:!0,get:function(){return u.PublicKey}});const c=o(r(6002));t.Signature=c.default,Object.defineProperty(t,"WalletSigner",{enumerable:!0,get:function(){return c.WalletSigner}});const h=o(r(9272));t.utils=h;const d=r(6314);Object.defineProperty(t,"encrypt",{enumerable:!0,get:function(){return d.encrypt}}),Object.defineProperty(t,"decrypt",{enumerable:!0,get:function(){return d.decrypt}});},9272:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}});}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r];}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t});}:function(e,t){e.default=t;}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.equalBytes=t.hexToBytes=t.bytesToHex=t.getRandomValues=void 0;const s=o(r(9656)),a=r(6314);t.getRandomValues=function(e){return a.crypto.getRandomValues(e)},t.bytesToHex=s.utils.bytesToHex,t.hexToBytes=function(e){e.startsWith("0x")&&(e=e.slice(2));const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r;t[r]=Number.parseInt(e.slice(n,n+2),16);}return t},t.equalBytes=function(e,t){if(e.length!==t.length)return !1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return !1;return !0};},4432:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.mapPaginatedStream=t.toNanoString=t.fromNanoString=t.dateToNs=t.nsToDate=t.SortDirection=t.ApiUrls=t.ContentTypeComposite=t.CompositeCodec=t.ContentTypeText=t.TextCodec=t.ContentTypeFallback=t.ContentTypeId=t.Conversations=t.Compression=t.KeyStoreType=t.Client=t.Stream=t.Signature=t.PrivateKey=t.SignedPublicKeyBundle=t.SignedPublicKey=t.PublicKeyBundle=t.PublicKey=t.decodeContent=t.DecodedMessage=void 0;var i=r(6044);Object.defineProperty(t,"DecodedMessage",{enumerable:!0,get:function(){return i.DecodedMessage}}),Object.defineProperty(t,"decodeContent",{enumerable:!0,get:function(){return i.decodeContent}});var o=r(2449);Object.defineProperty(t,"PublicKey",{enumerable:!0,get:function(){return o.PublicKey}}),Object.defineProperty(t,"PublicKeyBundle",{enumerable:!0,get:function(){return o.PublicKeyBundle}}),Object.defineProperty(t,"SignedPublicKey",{enumerable:!0,get:function(){return o.SignedPublicKey}}),Object.defineProperty(t,"SignedPublicKeyBundle",{enumerable:!0,get:function(){return o.SignedPublicKeyBundle}}),Object.defineProperty(t,"PrivateKey",{enumerable:!0,get:function(){return o.PrivateKey}}),Object.defineProperty(t,"Signature",{enumerable:!0,get:function(){return o.Signature}});var s=r(4596);Object.defineProperty(t,"Stream",{enumerable:!0,get:function(){return n(s).default}});var a=r(8901);Object.defineProperty(t,"Client",{enumerable:!0,get:function(){return n(a).default}}),Object.defineProperty(t,"KeyStoreType",{enumerable:!0,get:function(){return a.KeyStoreType}}),Object.defineProperty(t,"Compression",{enumerable:!0,get:function(){return a.Compression}});var l=r(5880);Object.defineProperty(t,"Conversations",{enumerable:!0,get:function(){return l.Conversations}});var u=r(6397);Object.defineProperty(t,"ContentTypeId",{enumerable:!0,get:function(){return u.ContentTypeId}}),Object.defineProperty(t,"ContentTypeFallback",{enumerable:!0,get:function(){return u.ContentTypeFallback}});var c=r(6254);Object.defineProperty(t,"TextCodec",{enumerable:!0,get:function(){return c.TextCodec}}),Object.defineProperty(t,"ContentTypeText",{enumerable:!0,get:function(){return c.ContentTypeText}});var h=r(4196);Object.defineProperty(t,"CompositeCodec",{enumerable:!0,get:function(){return h.CompositeCodec}}),Object.defineProperty(t,"ContentTypeComposite",{enumerable:!0,get:function(){return h.ContentTypeComposite}});var d=r(1962);Object.defineProperty(t,"ApiUrls",{enumerable:!0,get:function(){return d.ApiUrls}}),Object.defineProperty(t,"SortDirection",{enumerable:!0,get:function(){return d.SortDirection}});var f=r(5506);Object.defineProperty(t,"nsToDate",{enumerable:!0,get:function(){return f.nsToDate}}),Object.defineProperty(t,"dateToNs",{enumerable:!0,get:function(){return f.dateToNs}}),Object.defineProperty(t,"fromNanoString",{enumerable:!0,get:function(){return f.fromNanoString}}),Object.defineProperty(t,"toNanoString",{enumerable:!0,get:function(){return f.toNanoString}}),Object.defineProperty(t,"mapPaginatedStream",{enumerable:!0,get:function(){return f.mapPaginatedStream}});},4215:(e,t,r)=>{r(3052);},7261:function(e,t,r){var n=r(8764).Buffer,i=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.storageSigRequestText=void 0;const s=r(9982),a=r(2449),l=r(9099),u=r(9272),c=o(r(7527)),h=r(9210),d="key_bundle";function f(e){return `XMTP : Enable Identity\n${(0, u.bytesToHex)(e)}\n\nFor more info: https://xmtp.org/signatures/`}t.default=class{constructor(e,t){this.signer=e,this.store=t;}getStorageAddress(e){return i(this,void 0,void 0,(function*(){let t=yield this.signer.getAddress();return t=s.utils.getAddress(t),`${t}/${e}`}))}loadPrivateKeyBundle(){return i(this,void 0,void 0,(function*(){const e=yield this.store.get(yield this.getStorageAddress(d));if(!e)return null;const[t,r]=yield this.fromEncryptedBytes(this.signer,Uint8Array.from(e));return r&&(yield this.storePrivateKeyBundle(t)),t}))}storePrivateKeyBundle(e){return i(this,void 0,void 0,(function*(){const t=yield this.getStorageAddress(d),r=yield this.toEncryptedBytes(e,this.signer);"function"==typeof this.store.setAuthenticator&&this.store.setAuthenticator(new l.Authenticator(e.identityKey)),yield this.store.set(t,n.from(r));}))}toEncryptedBytes(e,t){return i(this,void 0,void 0,(function*(){const r=e.encode(),n=(0, u.getRandomValues)(new Uint8Array(32)),i=f(n),o=yield t.getAddress();let l=yield t.signMessage(i),c=s.utils.verifyMessage(i,l);if(c!==o&&(l=yield t.signMessage(i),console.log("invalid signature, retrying"),c=s.utils.verifyMessage(i,l),c!==o))throw new Error("invalid signature");const d=(0, u.hexToBytes)(l),p=yield (0, a.encrypt)(r,d);return h.privateKey.EncryptedPrivateKeyBundle.encode({v1:{walletPreKey:n,ciphertext:p}}).finish()}))}fromEncryptedBytes(e,t){var r;return i(this,void 0,void 0,(function*(){const[n,i]=function(e){try{const t=h.privateKey.EncryptedPrivateKeyBundle.decode(e);if(t.v1)return [t.v1,!1]}catch(t){return [h.privateKey.EncryptedPrivateKeyBundleV1.decode(e),!0]}throw new Error("unrecognized encrypted private key bundle version")}(t);if(!n.walletPreKey)throw new Error("missing wallet pre-key");if(!(null===(r=n.ciphertext)||void 0===r?void 0:r.aes256GcmHkdfSha256))throw new Error("missing bundle ciphertext");const o=(0, u.hexToBytes)(yield e.signMessage(f(n.walletPreKey))),s=new c.default(n.ciphertext),l=yield (0, a.decrypt)(s,o),[d,p]=function(e){try{return [(0,a.decodePrivateKeyBundle)(e),!1]}catch(t){const r=h.privateKey.PrivateKeyBundleV1.decode(e);return [new a.PrivateKeyBundleV1(r),!0]}}(l);return [d,i||p]}))}},t.storageSigRequestText=f;},9185:function(e,t,r){var n=r(8764).Buffer,i=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},o=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,i){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r});}),t);}(n,i,(t=e[r](t)).done,t.value);}))};}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(9210),a=r(5161),l=s.fetcher.b64Decode;t.default=class{constructor(e){this.client=e;}get(e){var t,r;return i(this,void 0,void 0,(function*(){try{for(var i,a=o(this.client.queryIterator({contentTopics:[this.buildTopic(e)]},{pageSize:10,direction:s.messageApi.SortDirection.SORT_DIRECTION_DESCENDING}));!(i=yield a.next()).done;){const e=i.value;if(e.message)try{const t=l(e.message.toString());return n.from(t)}catch(e){console.log(e);}}}catch(e){t={error:e};}finally{try{i&&!i.done&&(r=a.return)&&(yield r.call(a));}finally{if(t)throw t.error}}return null}))}set(e,t){return i(this,void 0,void 0,(function*(){const r=Uint8Array.from(t);yield this.client.publish([{contentTopic:this.buildTopic(e),message:r}]);}))}setAuthenticator(e){this.client.setAuthenticator(e);}buildTopic(e){return (0, a.buildUserPrivateStoreTopic)(e)}};},8173:function(e,t,r){var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))};Object.defineProperty(t,"__esModule",{value:!0});const i=r(741);t.default=class{constructor(e){this.value=e;}loadPrivateKeyBundle(){return n(this,void 0,void 0,(function*(){return (0, i.decodePrivateKeyBundle)(this.value)}))}storePrivateKeyBundle(){return n(this,void 0,void 0,(function*(){throw new Error("Store is not possible with StaticStore")}))}};},9535:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.StaticKeyStore=t.PrivateTopicStore=t.storageSigRequestText=t.EncryptedKeyStore=void 0;var i=r(7261);Object.defineProperty(t,"EncryptedKeyStore",{enumerable:!0,get:function(){return n(i).default}}),Object.defineProperty(t,"storageSigRequestText",{enumerable:!0,get:function(){return i.storageSigRequestText}});var o=r(9185);Object.defineProperty(t,"PrivateTopicStore",{enumerable:!0,get:function(){return n(o).default}});var s=r(8173);Object.defineProperty(t,"StaticKeyStore",{enumerable:!0,get:function(){return n(s).default}});},8206:function(e,t){var r=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e));}catch(e){o(e);}}function a(e){try{l(n.throw(e));}catch(e){o(e);}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(s,a);}l((n=n.apply(e,t||[])).next());}))},n=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,i){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r});}),t);}(n,i,(t=e[r](t)).done,t.value);}))};}},i=this&&this.__await||function(e){return this instanceof i?(this.v=e,this):new i(e)},o=this&&this.__asyncGenerator||function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,o=r.apply(e,t||[]),s=[];return n={},a("next"),a("throw"),a("return"),n[Symbol.asyncIterator]=function(){return this},n;function a(e){o[e]&&(n[e]=function(t){return new Promise((function(r,n){s.push([e,t,r,n])>1||l(e,t);}))});}function l(e,t){try{(r=o[e](t)).value instanceof i?Promise.resolve(r.value.v).then(u,c):h(s[0][2],r);}catch(e){h(s[0][3],e);}var r;}function u(e){l("next",e);}function c(e){l("throw",e);}function h(e,t){e(t),s.shift(),s.length&&l(s[0][0],s[0][1]);}};Object.defineProperty(t,"__esModule",{value:!0}),t.mapPaginatedStream=t.retry=t.promiseWithTimeout=t.sleep=void 0,t.sleep=e=>new Promise((t=>setTimeout(t,e))),t.promiseWithTimeout=(e,t,r)=>{let n;const i=new Promise(((t,i)=>{n=setTimeout((()=>i(new Error(r))),e);}));return Promise.race([t(),i]).then((e=>(clearTimeout(n),e)))};const s=e=>!!e;t.retry=function e(n,i,o,a,l=s,u=1){return r(this,void 0,void 0,(function*(){const r="number"==typeof u?u:1;try{return yield n(...i)}catch(s){if(!l(s)||r>o)throw s;return yield (0, t.sleep)(a),e(n,i,o,a,l,r+1)}}))},t.mapPaginatedStream=function(e,t){return o(this,arguments,(function*(){var r,o;try{for(var s,a=n(e);!(s=yield i(a.next())).done;){const e=s.value,r=yield i(Promise.allSettled(e.map(t))),n=[];for(const e of r)"fulfilled"===e.status?n.push(e.value):console.warn("Failed to process envelope due to reason: ",e.reason);yield yield i(n);}}catch(e){r={error:e};}finally{try{s&&!s.done&&(o=a.return)&&(yield i(o.call(a)));}finally{if(r)throw r.error}}}))};},6908:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fromNanoString=t.toNanoString=t.nsToDate=t.dateToNs=void 0;const i=n(r(1583));function o(e){return i.default.fromNumber(e.valueOf()).multiply(1e6)}function s(e){return new Date(e.divide(1e6).toNumber())}t.dateToNs=o,t.nsToDate=s,t.toNanoString=e=>e&&o(e).toString(),t.fromNanoString=e=>{if(e)return s(i.default.fromString(e))};},5506:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}});}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r];}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r);};Object.defineProperty(t,"__esModule",{value:!0}),i(r(5161),t),i(r(8206),t),i(r(6908),t);},5161:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.buildUserPrivateStoreTopic=t.buildUserInviteTopic=t.buildUserIntroTopic=t.buildUserContactTopic=t.buildDirectMessageTopicV2=t.buildDirectMessageTopic=t.buildContentTopic=void 0;const n=r(9982);t.buildContentTopic=e=>`/xmtp/0/${e}/proto`,t.buildDirectMessageTopic=(e,r)=>{const i=[n.utils.getAddress(e),n.utils.getAddress(r)];return i.sort(),(0, t.buildContentTopic)(`dm-${i.join("-")}`)},t.buildDirectMessageTopicV2=e=>(0, t.buildContentTopic)(`m-${e}`),t.buildUserContactTopic=e=>(0, t.buildContentTopic)(`contact-${n.utils.getAddress(e)}`),t.buildUserIntroTopic=e=>(0, t.buildContentTopic)(`intro-${n.utils.getAddress(e)}`),t.buildUserInviteTopic=e=>(0, t.buildContentTopic)(`invite-${n.utils.getAddress(e)}`),t.buildUserPrivateStoreTopic=e=>(0, t.buildContentTopic)(`privatestore-${e}`);},9159:()=>{},6601:()=>{},2114:()=>{},1583:(e,t)=>{var r,n=function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports;}catch(e){}function r(e,t,r){this.low=0|e,this.high=0|t,this.unsigned=!!r;}function n(e){return !0===(e&&e.__isLong__)}function i(e){var t=Math.clz32(e&-e);return e?31-t:t}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=n;var o={},s={};function a(e,t){var r,n,i;return t?(i=0<=(e>>>=0)&&e<256)&&(n=s[e])?n:(r=u(e,0,!0),i&&(s[e]=r),r):(i=-128<=(e|=0)&&e<128)&&(n=o[e])?n:(r=u(e,e<0?-1:0,!1),i&&(o[e]=r),r)}function l(e,t){if(isNaN(e))return t?v:g;if(t){if(e<0)return v;if(e>=p)return E}else {if(e<=-m)return k;if(e+1>=m)return S}return e<0?l(-e,t).neg():u(e%f|0,e/f|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=a,r.fromNumber=l,r.fromBits=u;var c=Math.pow;function h(e,t,r){if(0===e.length)throw Error("empty string");if("number"==typeof t?(r=t,t=!1):t=!!t,"NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return t?v:g;if((r=r||10)<2||36<r)throw RangeError("radix");var n;if((n=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===n)return h(e.substring(1),t,r).neg();for(var i=l(c(r,8)),o=g,s=0;s<e.length;s+=8){var a=Math.min(8,e.length-s),u=parseInt(e.substring(s,s+a),r);if(a<8){var d=l(c(r,a));o=o.mul(d).add(l(u));}else o=(o=o.mul(i)).add(l(u));}return o.unsigned=t,o}function d(e,t){return "number"==typeof e?l(e,t):"string"==typeof e?h(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=d;var f=4294967296,p=f*f,m=p/2,y=a(1<<24),g=a(0);r.ZERO=g;var v=a(0,!0);r.UZERO=v;var b=a(1);r.ONE=b;var w=a(1,!0);r.UONE=w;var _=a(-1);r.NEG_ONE=_;var S=u(-1,2147483647,!1);r.MAX_VALUE=S;var E=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=E;var k=u(0,-2147483648,!1);r.MIN_VALUE=k;var A=r.prototype;A.toInt=function(){return this.unsigned?this.low>>>0:this.low},A.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},A.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return "0";if(this.isNegative()){if(this.eq(k)){var t=l(e),r=this.div(t),n=r.mul(t).sub(this);return r.toString(e)+n.toInt().toString(e)}return "-"+this.neg().toString(e)}for(var i=l(c(e,6),this.unsigned),o=this,s="";;){var a=o.div(i),u=(o.sub(a.mul(i)).toInt()>>>0).toString(e);if((o=a).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s;}},A.getHighBits=function(){return this.high},A.getHighBitsUnsigned=function(){return this.high>>>0},A.getLowBits=function(){return this.low},A.getLowBitsUnsigned=function(){return this.low>>>0},A.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},A.isZero=function(){return 0===this.high&&0===this.low},A.eqz=A.isZero,A.isNegative=function(){return !this.unsigned&&this.high<0},A.isPositive=function(){return this.unsigned||this.high>=0},A.isOdd=function(){return 1==(1&this.low)},A.isEven=function(){return 0==(1&this.low)},A.equals=function(e){return n(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},A.eq=A.equals,A.notEquals=function(e){return !this.eq(e)},A.neq=A.notEquals,A.ne=A.notEquals,A.lessThan=function(e){return this.comp(e)<0},A.lt=A.lessThan,A.lessThanOrEqual=function(e){return this.comp(e)<=0},A.lte=A.lessThanOrEqual,A.le=A.lessThanOrEqual,A.greaterThan=function(e){return this.comp(e)>0},A.gt=A.greaterThan,A.greaterThanOrEqual=function(e){return this.comp(e)>=0},A.gte=A.greaterThanOrEqual,A.ge=A.greaterThanOrEqual,A.compare=function(e){if(n(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},A.comp=A.compare,A.negate=function(){return !this.unsigned&&this.eq(k)?k:this.not().add(b)},A.neg=A.negate,A.add=function(e){n(e)||(e=d(e));var t=this.high>>>16,r=65535&this.high,i=this.low>>>16,o=65535&this.low,s=e.high>>>16,a=65535&e.high,l=e.low>>>16,c=0,h=0,f=0,p=0;return f+=(p+=o+(65535&e.low))>>>16,h+=(f+=i+l)>>>16,c+=(h+=r+a)>>>16,c+=t+s,u((f&=65535)<<16|(p&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},A.subtract=function(e){return n(e)||(e=d(e)),this.add(e.neg())},A.sub=A.subtract,A.multiply=function(e){if(this.isZero())return this;if(n(e)||(e=d(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return this.unsigned?v:g;if(this.eq(k))return e.isOdd()?k:g;if(e.eq(k))return this.isOdd()?k:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(y)&&e.lt(y))return l(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,i=65535&this.high,o=this.low>>>16,s=65535&this.low,a=e.high>>>16,c=65535&e.high,h=e.low>>>16,f=65535&e.low,p=0,m=0,b=0,w=0;return b+=(w+=s*f)>>>16,m+=(b+=o*f)>>>16,b&=65535,m+=(b+=s*h)>>>16,p+=(m+=i*f)>>>16,m&=65535,p+=(m+=o*h)>>>16,m&=65535,p+=(m+=s*c)>>>16,p+=r*f+i*h+o*c+s*a,u((b&=65535)<<16|(w&=65535),(p&=65535)<<16|(m&=65535),this.unsigned)},A.mul=A.multiply,A.divide=function(e){if(n(e)||(e=d(e)),e.isZero())throw Error("division by zero");var r,i,o;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?v:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return v;if(e.gt(this.shru(1)))return w;o=v;}else {if(this.eq(k))return e.eq(b)||e.eq(_)?k:e.eq(k)?b:(r=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:_:(i=this.sub(e.mul(r)),o=r.add(i.div(e)));if(e.eq(k))return this.unsigned?v:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=g;}for(i=this;i.gte(e);){r=Math.max(1,Math.floor(i.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(r)/Math.LN2),a=s<=48?1:c(2,s-48),h=l(r),f=h.mul(e);f.isNegative()||f.gt(i);)f=(h=l(r-=a,this.unsigned)).mul(e);h.isZero()&&(h=b),o=o.add(h),i=i.sub(f);}return o},A.div=A.divide,A.modulo=function(e){return n(e)||(e=d(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},A.mod=A.modulo,A.rem=A.modulo,A.not=function(){return u(~this.low,~this.high,this.unsigned)},A.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32},A.clz=A.countLeadingZeros,A.countTrailingZeros=function(){return this.low?i(this.low):i(this.high)+32},A.ctz=A.countTrailingZeros,A.and=function(e){return n(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},A.or=function(e){return n(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},A.xor=function(e){return n(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},A.shiftLeft=function(e){return n(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},A.shl=A.shiftLeft,A.shiftRight=function(e){return n(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},A.shr=A.shiftRight,A.shiftRightUnsigned=function(e){return n(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):u(32===e?this.high:this.high>>>e-32,0,this.unsigned)},A.shru=A.shiftRightUnsigned,A.shr_u=A.shiftRightUnsigned,A.rotateLeft=function(e){var t;return n(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?u(this.high,this.low,this.unsigned):e<32?(t=32-e,u(this.low<<e|this.high>>>t,this.high<<e|this.low>>>t,this.unsigned)):(t=32-(e-=32),u(this.high<<e|this.low>>>t,this.low<<e|this.high>>>t,this.unsigned))},A.rotl=A.rotateLeft,A.rotateRight=function(e){var t;return n(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?u(this.high,this.low,this.unsigned):e<32?(t=32-e,u(this.high<<t|this.low>>>e,this.low<<t|this.high>>>e,this.unsigned)):(t=32-(e-=32),u(this.low<<t|this.high>>>e,this.high<<t|this.low>>>e,this.unsigned))},A.rotr=A.rotateRight,A.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},A.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},A.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},A.toBytesLE=function(){var e=this.high,t=this.low;return [255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},A.toBytesBE=function(){var e=this.high,t=this.low;return [e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};var P=r;return e.default=P,"default"in e?e.default:e}({});void 0===(r=function(){return n}.apply(t,[]))||(e.exports=r);},4147:e=>{e.exports=JSON.parse('{"name":"@relaycc/xmtp-js","version":"0.1.8","description":"XMTP client SDK for interacting with XMTP networks.","main":"dist/cjs/src/index.js","module":"dist/esm/src/index.js","umd:main":"dist/umd/index.js","browser":"dist/umd/index.js","types":"dist/types/src/index.d.ts","scripts":{"dev":"node tools/cleanup cjs && tsc -p config/tsconfig.cjs.json --watch","build":"npm run build:cjs && npm run build:esm && npm run build:umd && npm run build:types","build:cjs":"node tools/cleanup cjs && tsc -p config/tsconfig.cjs.json","build:esm":"node tools/cleanup esm && tsc -p config/tsconfig.esm.json","build:umd":"node tools/cleanup umd && webpack --config config/webpack.config.js","build:types":"node tools/cleanup types && tsc -p config/tsconfig.types.json","build:docs":"rm -rf docs && mkdir -p tmp && cp README.md tmp/ && sed -i.bak \'/badge.svg/d\' tmp/README.md && typedoc --excludePrivate --readme tmp/README.md src/index.ts","clean":"node tools/cleanup && npm run clean:proto","clean:proto":"rm -rf src/proto/*.ts","package":"npm pack","patch":"npm version patch -m \'patch: Bump version to %s\'","pub":"rm -rf dist/ && npm run build && npm publish","prepublish":"npm run build","test":"npm run test:node","test:node":"jest --no-cache --env=\'node\' --forceExit --testTimeout=30000","test:jsdom":"jest --no-cache --env=\'./jest.jsdom.env.js\' --forceExit --testTimeout=30000","test:cov":"jest --coverage --no-cache --runInBand","lint":"prettier --check . && eslint .","autolint":"prettier --write . && eslint --fix .","semantic-release":"semantic-release"},"publishConfig":{"access":"public"},"files":["dist"],"keywords":["xmtp","messaging","web3","sdk","js","javascript","node","nodejs"],"author":"XMTP Labs <eng@xmtp.com>","license":"MIT","homepage":"https://github.com/xmtp/xmtp-js","repository":{"type":"git","url":"https:git@github.com:xmtp/xmtp-js.git"},"bugs":{"url":"https://github.com/xmtp/xmtp-js/issues"},"release":{"branches":["main",{"name":"beta","prerelease":true}]},"dependencies":{"@noble/secp256k1":"^1.5.2","@stardazed/streams-polyfill":"^2.4.0","buffer":"^6.0.3","@xmtp/proto":"^3.9.0","async-mutex":"^0.4.0","ethers":"^5.5.3","long":"^5.2.0"},"devDependencies":{"@commitlint/cli":"^16.1.0","@commitlint/config-conventional":"^16.0.0","@types/bl":"^5.0.2","@types/callback-to-async-iterator":"^1.1.4","@types/jest":"^27.0.1","@typescript-eslint/eslint-plugin":"^5.38.0","@typescript-eslint/parser":"^5.38.0","dd-trace":"^2.12.2","eslint":"^8.0.1","eslint-config-prettier":"^8.3.0","eslint-config-standard":"^17.0.0","eslint-plugin-import":"^2.26.0","eslint-plugin-jsdoc":"^37.9.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^4.0.0","eslint-plugin-promise":"^6.0.1","husky":"^7.0.4","jest":"^27.2.0","prettier":"^2.4.0","semantic-release":"^19.0.2","ts-jest":"^27.0.5","ts-loader":"^9.2.5","typedoc":"^0.22.11","typescript":"^4.4.3","webpack":"^5.52.1","webpack-cli":"^4.8.0"}}');}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__webpack_require__),r.loaded=!0,r.exports}__webpack_require__.amdO={},__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]});},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0});},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var __webpack_exports__=__webpack_require__(4432);return __webpack_exports__})()}));
    }(umd));

    const version$h = "logger/5.7.0";

    let _permanentCensorErrors = false;
    let _censorErrors = false;
    const LogLevels = { debug: 1, "default": 2, info: 2, warning: 3, error: 4, off: 5 };
    let _logLevel = LogLevels["default"];
    let _globalLogger = null;
    function _checkNormalize() {
        try {
            const missing = [];
            // Make sure all forms of normalization are supported
            ["NFD", "NFC", "NFKD", "NFKC"].forEach((form) => {
                try {
                    if ("test".normalize(form) !== "test") {
                        throw new Error("bad normalize");
                    }
                    ;
                }
                catch (error) {
                    missing.push(form);
                }
            });
            if (missing.length) {
                throw new Error("missing " + missing.join(", "));
            }
            if (String.fromCharCode(0xe9).normalize("NFD") !== String.fromCharCode(0x65, 0x0301)) {
                throw new Error("broken implementation");
            }
        }
        catch (error) {
            return error.message;
        }
        return null;
    }
    const _normalizeError = _checkNormalize();
    var LogLevel;
    (function (LogLevel) {
        LogLevel["DEBUG"] = "DEBUG";
        LogLevel["INFO"] = "INFO";
        LogLevel["WARNING"] = "WARNING";
        LogLevel["ERROR"] = "ERROR";
        LogLevel["OFF"] = "OFF";
    })(LogLevel || (LogLevel = {}));
    var ErrorCode;
    (function (ErrorCode) {
        ///////////////////
        // Generic Errors
        // Unknown Error
        ErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
        // Not Implemented
        ErrorCode["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
        // Unsupported Operation
        //   - operation
        ErrorCode["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
        // Network Error (i.e. Ethereum Network, such as an invalid chain ID)
        //   - event ("noNetwork" is not re-thrown in provider.ready; otherwise thrown)
        ErrorCode["NETWORK_ERROR"] = "NETWORK_ERROR";
        // Some sort of bad response from the server
        ErrorCode["SERVER_ERROR"] = "SERVER_ERROR";
        // Timeout
        ErrorCode["TIMEOUT"] = "TIMEOUT";
        ///////////////////
        // Operational  Errors
        // Buffer Overrun
        ErrorCode["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
        // Numeric Fault
        //   - operation: the operation being executed
        //   - fault: the reason this faulted
        ErrorCode["NUMERIC_FAULT"] = "NUMERIC_FAULT";
        ///////////////////
        // Argument Errors
        // Missing new operator to an object
        //  - name: The name of the class
        ErrorCode["MISSING_NEW"] = "MISSING_NEW";
        // Invalid argument (e.g. value is incompatible with type) to a function:
        //   - argument: The argument name that was invalid
        //   - value: The value of the argument
        ErrorCode["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
        // Missing argument to a function:
        //   - count: The number of arguments received
        //   - expectedCount: The number of arguments expected
        ErrorCode["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
        // Too many arguments
        //   - count: The number of arguments received
        //   - expectedCount: The number of arguments expected
        ErrorCode["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
        ///////////////////
        // Blockchain Errors
        // Call exception
        //  - transaction: the transaction
        //  - address?: the contract address
        //  - args?: The arguments passed into the function
        //  - method?: The Solidity method signature
        //  - errorSignature?: The EIP848 error signature
        //  - errorArgs?: The EIP848 error parameters
        //  - reason: The reason (only for EIP848 "Error(string)")
        ErrorCode["CALL_EXCEPTION"] = "CALL_EXCEPTION";
        // Insufficient funds (< value + gasLimit * gasPrice)
        //   - transaction: the transaction attempted
        ErrorCode["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
        // Nonce has already been used
        //   - transaction: the transaction attempted
        ErrorCode["NONCE_EXPIRED"] = "NONCE_EXPIRED";
        // The replacement fee for the transaction is too low
        //   - transaction: the transaction attempted
        ErrorCode["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
        // The gas limit could not be estimated
        //   - transaction: the transaction passed to estimateGas
        ErrorCode["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
        // The transaction was replaced by one with a higher gas price
        //   - reason: "cancelled", "replaced" or "repriced"
        //   - cancelled: true if reason == "cancelled" or reason == "replaced")
        //   - hash: original transaction hash
        //   - replacement: the full TransactionsResponse for the replacement
        //   - receipt: the receipt of the replacement
        ErrorCode["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
        ///////////////////
        // Interaction Errors
        // The user rejected the action, such as signing a message or sending
        // a transaction
        ErrorCode["ACTION_REJECTED"] = "ACTION_REJECTED";
    })(ErrorCode || (ErrorCode = {}));
    const HEX = "0123456789abcdef";
    class Logger {
        constructor(version) {
            Object.defineProperty(this, "version", {
                enumerable: true,
                value: version,
                writable: false
            });
        }
        _log(logLevel, args) {
            const level = logLevel.toLowerCase();
            if (LogLevels[level] == null) {
                this.throwArgumentError("invalid log level name", "logLevel", logLevel);
            }
            if (_logLevel > LogLevels[level]) {
                return;
            }
            console.log.apply(console, args);
        }
        debug(...args) {
            this._log(Logger.levels.DEBUG, args);
        }
        info(...args) {
            this._log(Logger.levels.INFO, args);
        }
        warn(...args) {
            this._log(Logger.levels.WARNING, args);
        }
        makeError(message, code, params) {
            // Errors are being censored
            if (_censorErrors) {
                return this.makeError("censored error", code, {});
            }
            if (!code) {
                code = Logger.errors.UNKNOWN_ERROR;
            }
            if (!params) {
                params = {};
            }
            const messageDetails = [];
            Object.keys(params).forEach((key) => {
                const value = params[key];
                try {
                    if (value instanceof Uint8Array) {
                        let hex = "";
                        for (let i = 0; i < value.length; i++) {
                            hex += HEX[value[i] >> 4];
                            hex += HEX[value[i] & 0x0f];
                        }
                        messageDetails.push(key + "=Uint8Array(0x" + hex + ")");
                    }
                    else {
                        messageDetails.push(key + "=" + JSON.stringify(value));
                    }
                }
                catch (error) {
                    messageDetails.push(key + "=" + JSON.stringify(params[key].toString()));
                }
            });
            messageDetails.push(`code=${code}`);
            messageDetails.push(`version=${this.version}`);
            const reason = message;
            let url = "";
            switch (code) {
                case ErrorCode.NUMERIC_FAULT: {
                    url = "NUMERIC_FAULT";
                    const fault = message;
                    switch (fault) {
                        case "overflow":
                        case "underflow":
                        case "division-by-zero":
                            url += "-" + fault;
                            break;
                        case "negative-power":
                        case "negative-width":
                            url += "-unsupported";
                            break;
                        case "unbound-bitwise-result":
                            url += "-unbound-result";
                            break;
                    }
                    break;
                }
                case ErrorCode.CALL_EXCEPTION:
                case ErrorCode.INSUFFICIENT_FUNDS:
                case ErrorCode.MISSING_NEW:
                case ErrorCode.NONCE_EXPIRED:
                case ErrorCode.REPLACEMENT_UNDERPRICED:
                case ErrorCode.TRANSACTION_REPLACED:
                case ErrorCode.UNPREDICTABLE_GAS_LIMIT:
                    url = code;
                    break;
            }
            if (url) {
                message += " [ See: https:/\/links.ethers.org/v5-errors-" + url + " ]";
            }
            if (messageDetails.length) {
                message += " (" + messageDetails.join(", ") + ")";
            }
            // @TODO: Any??
            const error = new Error(message);
            error.reason = reason;
            error.code = code;
            Object.keys(params).forEach(function (key) {
                error[key] = params[key];
            });
            return error;
        }
        throwError(message, code, params) {
            throw this.makeError(message, code, params);
        }
        throwArgumentError(message, name, value) {
            return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {
                argument: name,
                value: value
            });
        }
        assert(condition, message, code, params) {
            if (!!condition) {
                return;
            }
            this.throwError(message, code, params);
        }
        assertArgument(condition, message, name, value) {
            if (!!condition) {
                return;
            }
            this.throwArgumentError(message, name, value);
        }
        checkNormalize(message) {
            if (_normalizeError) {
                this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "String.prototype.normalize", form: _normalizeError
                });
            }
        }
        checkSafeUint53(value, message) {
            if (typeof (value) !== "number") {
                return;
            }
            if (message == null) {
                message = "value not safe";
            }
            if (value < 0 || value >= 0x1fffffffffffff) {
                this.throwError(message, Logger.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "out-of-safe-range",
                    value: value
                });
            }
            if (value % 1) {
                this.throwError(message, Logger.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "non-integer",
                    value: value
                });
            }
        }
        checkArgumentCount(count, expectedCount, message) {
            if (message) {
                message = ": " + message;
            }
            else {
                message = "";
            }
            if (count < expectedCount) {
                this.throwError("missing argument" + message, Logger.errors.MISSING_ARGUMENT, {
                    count: count,
                    expectedCount: expectedCount
                });
            }
            if (count > expectedCount) {
                this.throwError("too many arguments" + message, Logger.errors.UNEXPECTED_ARGUMENT, {
                    count: count,
                    expectedCount: expectedCount
                });
            }
        }
        checkNew(target, kind) {
            if (target === Object || target == null) {
                this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
            }
        }
        checkAbstract(target, kind) {
            if (target === kind) {
                this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: "new" });
            }
            else if (target === Object || target == null) {
                this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
            }
        }
        static globalLogger() {
            if (!_globalLogger) {
                _globalLogger = new Logger(version$h);
            }
            return _globalLogger;
        }
        static setCensorship(censorship, permanent) {
            if (!censorship && permanent) {
                this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "setCensorship"
                });
            }
            if (_permanentCensorErrors) {
                if (!censorship) {
                    return;
                }
                this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "setCensorship"
                });
            }
            _censorErrors = !!censorship;
            _permanentCensorErrors = !!permanent;
        }
        static setLogLevel(logLevel) {
            const level = LogLevels[logLevel.toLowerCase()];
            if (level == null) {
                Logger.globalLogger().warn("invalid log level - " + logLevel);
                return;
            }
            _logLevel = level;
        }
        static from(version) {
            return new Logger(version);
        }
    }
    Logger.errors = ErrorCode;
    Logger.levels = LogLevel;

    const version$g = "bytes/5.7.0";

    const logger$h = new Logger(version$g);
    ///////////////////////////////
    function isHexable(value) {
        return !!(value.toHexString);
    }
    function addSlice(array) {
        if (array.slice) {
            return array;
        }
        array.slice = function () {
            const args = Array.prototype.slice.call(arguments);
            return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
        };
        return array;
    }
    function isBytesLike(value) {
        return ((isHexString(value) && !(value.length % 2)) || isBytes(value));
    }
    function isInteger(value) {
        return (typeof (value) === "number" && value == value && (value % 1) === 0);
    }
    function isBytes(value) {
        if (value == null) {
            return false;
        }
        if (value.constructor === Uint8Array) {
            return true;
        }
        if (typeof (value) === "string") {
            return false;
        }
        if (!isInteger(value.length) || value.length < 0) {
            return false;
        }
        for (let i = 0; i < value.length; i++) {
            const v = value[i];
            if (!isInteger(v) || v < 0 || v >= 256) {
                return false;
            }
        }
        return true;
    }
    function arrayify(value, options) {
        if (!options) {
            options = {};
        }
        if (typeof (value) === "number") {
            logger$h.checkSafeUint53(value, "invalid arrayify value");
            const result = [];
            while (value) {
                result.unshift(value & 0xff);
                value = parseInt(String(value / 256));
            }
            if (result.length === 0) {
                result.push(0);
            }
            return addSlice(new Uint8Array(result));
        }
        if (options.allowMissingPrefix && typeof (value) === "string" && value.substring(0, 2) !== "0x") {
            value = "0x" + value;
        }
        if (isHexable(value)) {
            value = value.toHexString();
        }
        if (isHexString(value)) {
            let hex = value.substring(2);
            if (hex.length % 2) {
                if (options.hexPad === "left") {
                    hex = "0" + hex;
                }
                else if (options.hexPad === "right") {
                    hex += "0";
                }
                else {
                    logger$h.throwArgumentError("hex data is odd-length", "value", value);
                }
            }
            const result = [];
            for (let i = 0; i < hex.length; i += 2) {
                result.push(parseInt(hex.substring(i, i + 2), 16));
            }
            return addSlice(new Uint8Array(result));
        }
        if (isBytes(value)) {
            return addSlice(new Uint8Array(value));
        }
        return logger$h.throwArgumentError("invalid arrayify value", "value", value);
    }
    function concat(items) {
        const objects = items.map(item => arrayify(item));
        const length = objects.reduce((accum, item) => (accum + item.length), 0);
        const result = new Uint8Array(length);
        objects.reduce((offset, object) => {
            result.set(object, offset);
            return offset + object.length;
        }, 0);
        return addSlice(result);
    }
    function stripZeros(value) {
        let result = arrayify(value);
        if (result.length === 0) {
            return result;
        }
        // Find the first non-zero entry
        let start = 0;
        while (start < result.length && result[start] === 0) {
            start++;
        }
        // If we started with zeros, strip them
        if (start) {
            result = result.slice(start);
        }
        return result;
    }
    function zeroPad(value, length) {
        value = arrayify(value);
        if (value.length > length) {
            logger$h.throwArgumentError("value out of range", "value", arguments[0]);
        }
        const result = new Uint8Array(length);
        result.set(value, length - value.length);
        return addSlice(result);
    }
    function isHexString(value, length) {
        if (typeof (value) !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
            return false;
        }
        if (length && value.length !== 2 + 2 * length) {
            return false;
        }
        return true;
    }
    const HexCharacters = "0123456789abcdef";
    function hexlify(value, options) {
        if (!options) {
            options = {};
        }
        if (typeof (value) === "number") {
            logger$h.checkSafeUint53(value, "invalid hexlify value");
            let hex = "";
            while (value) {
                hex = HexCharacters[value & 0xf] + hex;
                value = Math.floor(value / 16);
            }
            if (hex.length) {
                if (hex.length % 2) {
                    hex = "0" + hex;
                }
                return "0x" + hex;
            }
            return "0x00";
        }
        if (typeof (value) === "bigint") {
            value = value.toString(16);
            if (value.length % 2) {
                return ("0x0" + value);
            }
            return "0x" + value;
        }
        if (options.allowMissingPrefix && typeof (value) === "string" && value.substring(0, 2) !== "0x") {
            value = "0x" + value;
        }
        if (isHexable(value)) {
            return value.toHexString();
        }
        if (isHexString(value)) {
            if (value.length % 2) {
                if (options.hexPad === "left") {
                    value = "0x0" + value.substring(2);
                }
                else if (options.hexPad === "right") {
                    value += "0";
                }
                else {
                    logger$h.throwArgumentError("hex data is odd-length", "value", value);
                }
            }
            return value.toLowerCase();
        }
        if (isBytes(value)) {
            let result = "0x";
            for (let i = 0; i < value.length; i++) {
                let v = value[i];
                result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];
            }
            return result;
        }
        return logger$h.throwArgumentError("invalid hexlify value", "value", value);
    }
    /*
    function unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {
        if (typeof(value) === "string" && value.length % 2 && value.substring(0, 2) === "0x") {
            return "0x0" + value.substring(2);
        }
        return value;
    }
    */
    function hexDataLength(data) {
        if (typeof (data) !== "string") {
            data = hexlify(data);
        }
        else if (!isHexString(data) || (data.length % 2)) {
            return null;
        }
        return (data.length - 2) / 2;
    }
    function hexDataSlice(data, offset, endOffset) {
        if (typeof (data) !== "string") {
            data = hexlify(data);
        }
        else if (!isHexString(data) || (data.length % 2)) {
            logger$h.throwArgumentError("invalid hexData", "value", data);
        }
        offset = 2 + 2 * offset;
        if (endOffset != null) {
            return "0x" + data.substring(offset, 2 + 2 * endOffset);
        }
        return "0x" + data.substring(offset);
    }
    function hexConcat(items) {
        let result = "0x";
        items.forEach((item) => {
            result += hexlify(item).substring(2);
        });
        return result;
    }
    function hexZeroPad(value, length) {
        if (typeof (value) !== "string") {
            value = hexlify(value);
        }
        else if (!isHexString(value)) {
            logger$h.throwArgumentError("invalid hex string", "value", value);
        }
        if (value.length > 2 * length + 2) {
            logger$h.throwArgumentError("value out of range", "value", arguments[1]);
        }
        while (value.length < 2 * length + 2) {
            value = "0x0" + value.substring(2);
        }
        return value;
    }
    function splitSignature(signature) {
        const result = {
            r: "0x",
            s: "0x",
            _vs: "0x",
            recoveryParam: 0,
            v: 0,
            yParityAndS: "0x",
            compact: "0x"
        };
        if (isBytesLike(signature)) {
            let bytes = arrayify(signature);
            // Get the r, s and v
            if (bytes.length === 64) {
                // EIP-2098; pull the v from the top bit of s and clear it
                result.v = 27 + (bytes[32] >> 7);
                bytes[32] &= 0x7f;
                result.r = hexlify(bytes.slice(0, 32));
                result.s = hexlify(bytes.slice(32, 64));
            }
            else if (bytes.length === 65) {
                result.r = hexlify(bytes.slice(0, 32));
                result.s = hexlify(bytes.slice(32, 64));
                result.v = bytes[64];
            }
            else {
                logger$h.throwArgumentError("invalid signature string", "signature", signature);
            }
            // Allow a recid to be used as the v
            if (result.v < 27) {
                if (result.v === 0 || result.v === 1) {
                    result.v += 27;
                }
                else {
                    logger$h.throwArgumentError("signature invalid v byte", "signature", signature);
                }
            }
            // Compute recoveryParam from v
            result.recoveryParam = 1 - (result.v % 2);
            // Compute _vs from recoveryParam and s
            if (result.recoveryParam) {
                bytes[32] |= 0x80;
            }
            result._vs = hexlify(bytes.slice(32, 64));
        }
        else {
            result.r = signature.r;
            result.s = signature.s;
            result.v = signature.v;
            result.recoveryParam = signature.recoveryParam;
            result._vs = signature._vs;
            // If the _vs is available, use it to populate missing s, v and recoveryParam
            // and verify non-missing s, v and recoveryParam
            if (result._vs != null) {
                const vs = zeroPad(arrayify(result._vs), 32);
                result._vs = hexlify(vs);
                // Set or check the recid
                const recoveryParam = ((vs[0] >= 128) ? 1 : 0);
                if (result.recoveryParam == null) {
                    result.recoveryParam = recoveryParam;
                }
                else if (result.recoveryParam !== recoveryParam) {
                    logger$h.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature);
                }
                // Set or check the s
                vs[0] &= 0x7f;
                const s = hexlify(vs);
                if (result.s == null) {
                    result.s = s;
                }
                else if (result.s !== s) {
                    logger$h.throwArgumentError("signature v mismatch _vs", "signature", signature);
                }
            }
            // Use recid and v to populate each other
            if (result.recoveryParam == null) {
                if (result.v == null) {
                    logger$h.throwArgumentError("signature missing v and recoveryParam", "signature", signature);
                }
                else if (result.v === 0 || result.v === 1) {
                    result.recoveryParam = result.v;
                }
                else {
                    result.recoveryParam = 1 - (result.v % 2);
                }
            }
            else {
                if (result.v == null) {
                    result.v = 27 + result.recoveryParam;
                }
                else {
                    const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));
                    if (result.recoveryParam !== recId) {
                        logger$h.throwArgumentError("signature recoveryParam mismatch v", "signature", signature);
                    }
                }
            }
            if (result.r == null || !isHexString(result.r)) {
                logger$h.throwArgumentError("signature missing or invalid r", "signature", signature);
            }
            else {
                result.r = hexZeroPad(result.r, 32);
            }
            if (result.s == null || !isHexString(result.s)) {
                logger$h.throwArgumentError("signature missing or invalid s", "signature", signature);
            }
            else {
                result.s = hexZeroPad(result.s, 32);
            }
            const vs = arrayify(result.s);
            if (vs[0] >= 128) {
                logger$h.throwArgumentError("signature s out of range", "signature", signature);
            }
            if (result.recoveryParam) {
                vs[0] |= 0x80;
            }
            const _vs = hexlify(vs);
            if (result._vs) {
                if (!isHexString(result._vs)) {
                    logger$h.throwArgumentError("signature invalid _vs", "signature", signature);
                }
                result._vs = hexZeroPad(result._vs, 32);
            }
            // Set or check the _vs
            if (result._vs == null) {
                result._vs = _vs;
            }
            else if (result._vs !== _vs) {
                logger$h.throwArgumentError("signature _vs mismatch v and s", "signature", signature);
            }
        }
        result.yParityAndS = result._vs;
        result.compact = result.r + result.yParityAndS.substring(2);
        return result;
    }
    function joinSignature(signature) {
        signature = splitSignature(signature);
        return hexlify(concat([
            signature.r,
            signature.s,
            (signature.recoveryParam ? "0x1c" : "0x1b")
        ]));
    }

    var bn = {exports: {}};

    (function (module) {
    (function (module, exports) {

      // Utils
      function assert (val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
      }

      // Could use `inherits` module, but don't want to move from single file
      // architecture yet.
      function inherits (ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function () {};
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }

      // BN

      function BN (number, base, endian) {
        if (BN.isBN(number)) {
          return number;
        }

        this.negative = 0;
        this.words = null;
        this.length = 0;

        // Reduction context
        this.red = null;

        if (number !== null) {
          if (base === 'le' || base === 'be') {
            endian = base;
            base = 10;
          }

          this._init(number || 0, base || 10, endian || 'be');
        }
      }
      if (typeof module === 'object') {
        module.exports = BN;
      } else {
        exports.BN = BN;
      }

      BN.BN = BN;
      BN.wordSize = 26;

      var Buffer;
      try {
        if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
          Buffer = window.Buffer;
        } else {
          Buffer = require('buffer').Buffer;
        }
      } catch (e) {
      }

      BN.isBN = function isBN (num) {
        if (num instanceof BN) {
          return true;
        }

        return num !== null && typeof num === 'object' &&
          num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
      };

      BN.max = function max (left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
      };

      BN.min = function min (left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
      };

      BN.prototype._init = function init (number, base, endian) {
        if (typeof number === 'number') {
          return this._initNumber(number, base, endian);
        }

        if (typeof number === 'object') {
          return this._initArray(number, base, endian);
        }

        if (base === 'hex') {
          base = 16;
        }
        assert(base === (base | 0) && base >= 2 && base <= 36);

        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
          start++;
          this.negative = 1;
        }

        if (start < number.length) {
          if (base === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base, start);
            if (endian === 'le') {
              this._initArray(this.toArray(), base, endian);
            }
          }
        }
      };

      BN.prototype._initNumber = function _initNumber (number, base, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 0x4000000) {
          this.words = [number & 0x3ffffff];
          this.length = 1;
        } else if (number < 0x10000000000000) {
          this.words = [
            number & 0x3ffffff,
            (number / 0x4000000) & 0x3ffffff
          ];
          this.length = 2;
        } else {
          assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
          this.words = [
            number & 0x3ffffff,
            (number / 0x4000000) & 0x3ffffff,
            1
          ];
          this.length = 3;
        }

        if (endian !== 'le') return;

        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
      };

      BN.prototype._initArray = function _initArray (number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }

        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }

        var j, w;
        var off = 0;
        if (endian === 'be') {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
            this.words[j] |= (w << off) & 0x3ffffff;
            this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === 'le') {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
            this.words[j] |= (w << off) & 0x3ffffff;
            this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this._strip();
      };

      function parseHex4Bits (string, index) {
        var c = string.charCodeAt(index);
        // '0' - '9'
        if (c >= 48 && c <= 57) {
          return c - 48;
        // 'A' - 'F'
        } else if (c >= 65 && c <= 70) {
          return c - 55;
        // 'a' - 'f'
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          assert(false, 'Invalid character in ' + string);
        }
      }

      function parseHexByte (string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }

      BN.prototype._parseHex = function _parseHex (number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }

        // 24-bits chunks
        var off = 0;
        var j = 0;

        var w;
        if (endian === 'be') {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 0x3ffffff;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 0x3ffffff;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }

        this._strip();
      };

      function parseBase (str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;

          r *= mul;

          // 'a'
          if (c >= 49) {
            b = c - 49 + 0xa;

          // 'A'
          } else if (c >= 17) {
            b = c - 17 + 0xa;

          // '0' - '9'
          } else {
            b = c;
          }
          assert(c >= 0 && b < mul, 'Invalid character');
          r += b;
        }
        return r;
      }

      BN.prototype._parseBase = function _parseBase (number, base, start) {
        // Initialize as zero
        this.words = [0];
        this.length = 1;

        // Find length of limb in base
        for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
          limbLen++;
        }
        limbLen--;
        limbPow = (limbPow / base) | 0;

        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;

        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base);

          this.imuln(limbPow);
          if (this.words[0] + word < 0x4000000) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }

        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base);

          for (i = 0; i < mod; i++) {
            pow *= base;
          }

          this.imuln(pow);
          if (this.words[0] + word < 0x4000000) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }

        this._strip();
      };

      BN.prototype.copy = function copy (dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };

      function move (dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
      }

      BN.prototype._move = function _move (dest) {
        move(dest, this);
      };

      BN.prototype.clone = function clone () {
        var r = new BN(null);
        this.copy(r);
        return r;
      };

      BN.prototype._expand = function _expand (size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };

      // Remove leading `0` from `this`
      BN.prototype._strip = function strip () {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };

      BN.prototype._normSign = function _normSign () {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };

      // Check Symbol.for because not everywhere where Symbol defined
      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
      if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
        try {
          BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
        } catch (e) {
          BN.prototype.inspect = inspect;
        }
      } else {
        BN.prototype.inspect = inspect;
      }

      function inspect () {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
      }

      /*

      var zeros = [];
      var groupSizes = [];
      var groupBases = [];

      var s = '';
      var i = -1;
      while (++i < BN.wordSize) {
        zeros[i] = s;
        s += '0';
      }
      groupSizes[0] = 0;
      groupSizes[1] = 0;
      groupBases[0] = 0;
      groupBases[1] = 0;
      var base = 2 - 1;
      while (++base < 36 + 1) {
        var groupSize = 0;
        var groupBase = 1;
        while (groupBase < (1 << BN.wordSize) / base) {
          groupBase *= base;
          groupSize += 1;
        }
        groupSizes[base] = groupSize;
        groupBases[base] = groupBase;
      }

      */

      var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
      ];

      var groupSizes = [
        0, 0,
        25, 16, 12, 11, 10, 9, 8,
        8, 7, 7, 7, 7, 6, 6,
        6, 6, 6, 6, 6, 5, 5,
        5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5
      ];

      var groupBases = [
        0, 0,
        33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
        43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
        16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
        6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
        24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
      ];

      BN.prototype.toString = function toString (base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;

        var out;
        if (base === 16 || base === 'hex') {
          out = '';
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = (((w << off) | carry) & 0xffffff).toString(16);
            carry = (w >>> (24 - off)) & 0xffffff;
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding !== 0) {
            out = '0' + out;
          }
          if (this.negative !== 0) {
            out = '-' + out;
          }
          return out;
        }

        if (base === (base | 0) && base >= 2 && base <= 36) {
          // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
          var groupSize = groupSizes[base];
          // var groupBase = Math.pow(base, groupSize);
          var groupBase = groupBases[base];
          out = '';
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modrn(groupBase).toString(base);
            c = c.idivn(groupBase);

            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = '0' + out;
          }
          while (out.length % padding !== 0) {
            out = '0' + out;
          }
          if (this.negative !== 0) {
            out = '-' + out;
          }
          return out;
        }

        assert(false, 'Base should be between 2 and 36');
      };

      BN.prototype.toNumber = function toNumber () {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 0x4000000;
        } else if (this.length === 3 && this.words[2] === 0x01) {
          // NOTE: at this stage it is known that the top bit is set
          ret += 0x10000000000000 + (this.words[1] * 0x4000000);
        } else if (this.length > 2) {
          assert(false, 'Number can only safely store up to 53 bits');
        }
        return (this.negative !== 0) ? -ret : ret;
      };

      BN.prototype.toJSON = function toJSON () {
        return this.toString(16, 2);
      };

      if (Buffer) {
        BN.prototype.toBuffer = function toBuffer (endian, length) {
          return this.toArrayLike(Buffer, endian, length);
        };
      }

      BN.prototype.toArray = function toArray (endian, length) {
        return this.toArrayLike(Array, endian, length);
      };

      var allocate = function allocate (ArrayType, size) {
        if (ArrayType.allocUnsafe) {
          return ArrayType.allocUnsafe(size);
        }
        return new ArrayType(size);
      };

      BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
        this._strip();

        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');

        var res = allocate(ArrayType, reqLength);
        var postfix = endian === 'le' ? 'LE' : 'BE';
        this['_toArrayLike' + postfix](res, byteLength);
        return res;
      };

      BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
        var position = 0;
        var carry = 0;

        for (var i = 0, shift = 0; i < this.length; i++) {
          var word = (this.words[i] << shift) | carry;

          res[position++] = word & 0xff;
          if (position < res.length) {
            res[position++] = (word >> 8) & 0xff;
          }
          if (position < res.length) {
            res[position++] = (word >> 16) & 0xff;
          }

          if (shift === 6) {
            if (position < res.length) {
              res[position++] = (word >> 24) & 0xff;
            }
            carry = 0;
            shift = 0;
          } else {
            carry = word >>> 24;
            shift += 2;
          }
        }

        if (position < res.length) {
          res[position++] = carry;

          while (position < res.length) {
            res[position++] = 0;
          }
        }
      };

      BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
        var position = res.length - 1;
        var carry = 0;

        for (var i = 0, shift = 0; i < this.length; i++) {
          var word = (this.words[i] << shift) | carry;

          res[position--] = word & 0xff;
          if (position >= 0) {
            res[position--] = (word >> 8) & 0xff;
          }
          if (position >= 0) {
            res[position--] = (word >> 16) & 0xff;
          }

          if (shift === 6) {
            if (position >= 0) {
              res[position--] = (word >> 24) & 0xff;
            }
            carry = 0;
            shift = 0;
          } else {
            carry = word >>> 24;
            shift += 2;
          }
        }

        if (position >= 0) {
          res[position--] = carry;

          while (position >= 0) {
            res[position--] = 0;
          }
        }
      };

      if (Math.clz32) {
        BN.prototype._countBits = function _countBits (w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN.prototype._countBits = function _countBits (w) {
          var t = w;
          var r = 0;
          if (t >= 0x1000) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 0x40) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 0x8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 0x02) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }

      BN.prototype._zeroBits = function _zeroBits (w) {
        // Short-cut
        if (w === 0) return 26;

        var t = w;
        var r = 0;
        if ((t & 0x1fff) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 0x7f) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 0xf) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 0x3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 0x1) === 0) {
          r++;
        }
        return r;
      };

      // Return number of used bits in a BN
      BN.prototype.bitLength = function bitLength () {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };

      function toBitArray (num) {
        var w = new Array(num.bitLength());

        for (var bit = 0; bit < w.length; bit++) {
          var off = (bit / 26) | 0;
          var wbit = bit % 26;

          w[bit] = (num.words[off] >>> wbit) & 0x01;
        }

        return w;
      }

      // Number of trailing zero bits
      BN.prototype.zeroBits = function zeroBits () {
        if (this.isZero()) return 0;

        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26) break;
        }
        return r;
      };

      BN.prototype.byteLength = function byteLength () {
        return Math.ceil(this.bitLength() / 8);
      };

      BN.prototype.toTwos = function toTwos (width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };

      BN.prototype.fromTwos = function fromTwos (width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };

      BN.prototype.isNeg = function isNeg () {
        return this.negative !== 0;
      };

      // Return negative clone of `this`
      BN.prototype.neg = function neg () {
        return this.clone().ineg();
      };

      BN.prototype.ineg = function ineg () {
        if (!this.isZero()) {
          this.negative ^= 1;
        }

        return this;
      };

      // Or `num` with `this` in-place
      BN.prototype.iuor = function iuor (num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }

        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }

        return this._strip();
      };

      BN.prototype.ior = function ior (num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
      };

      // Or `num` with `this`
      BN.prototype.or = function or (num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
      };

      BN.prototype.uor = function uor (num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
      };

      // And `num` with `this` in-place
      BN.prototype.iuand = function iuand (num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }

        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }

        this.length = b.length;

        return this._strip();
      };

      BN.prototype.iand = function iand (num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
      };

      // And `num` with `this`
      BN.prototype.and = function and (num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
      };

      BN.prototype.uand = function uand (num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
      };

      // Xor `num` with `this` in-place
      BN.prototype.iuxor = function iuxor (num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }

        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }

        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }

        this.length = a.length;

        return this._strip();
      };

      BN.prototype.ixor = function ixor (num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };

      // Xor `num` with `this`
      BN.prototype.xor = function xor (num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
      };

      BN.prototype.uxor = function uxor (num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };

      // Not ``this`` with ``width`` bitwidth
      BN.prototype.inotn = function inotn (width) {
        assert(typeof width === 'number' && width >= 0);

        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;

        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);

        if (bitsLeft > 0) {
          bytesNeeded--;
        }

        // Handle complete words
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 0x3ffffff;
        }

        // Handle the residue
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
        }

        // And remove leading zeroes
        return this._strip();
      };

      BN.prototype.notn = function notn (width) {
        return this.clone().inotn(width);
      };

      // Set `bit` of `this`
      BN.prototype.setn = function setn (bit, val) {
        assert(typeof bit === 'number' && bit >= 0);

        var off = (bit / 26) | 0;
        var wbit = bit % 26;

        this._expand(off + 1);

        if (val) {
          this.words[off] = this.words[off] | (1 << wbit);
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }

        return this._strip();
      };

      // Add `num` to `this` in-place
      BN.prototype.iadd = function iadd (num) {
        var r;

        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();

        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }

        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }

        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 0x3ffffff;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 0x3ffffff;
          carry = r >>> 26;
        }

        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        // Copy the rest of the words
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }

        return this;
      };

      // Add `num` to `this`
      BN.prototype.add = function add (num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }

        if (this.length > num.length) return this.clone().iadd(num);

        return num.clone().iadd(this);
      };

      // Subtract `num` from `this` in-place
      BN.prototype.isub = function isub (num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();

        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }

        // At this point both numbers are positive
        var cmp = this.cmp(num);

        // Optimization - zeroify
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }

        // a > b
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }

        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 0x3ffffff;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 0x3ffffff;
        }

        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }

        this.length = Math.max(this.length, i);

        if (a !== this) {
          this.negative = 1;
        }

        return this._strip();
      };

      // Subtract `num` from `this`
      BN.prototype.sub = function sub (num) {
        return this.clone().isub(num);
      };

      function smallMulTo (self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = (self.length + num.length) | 0;
        out.length = len;
        len = (len - 1) | 0;

        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        var carry = (r / 0x4000000) | 0;
        out.words[0] = lo;

        for (var k = 1; k < len; k++) {
          // Sum all words with the same `i + j = k` and accumulate `ncarry`,
          // note that ncarry could be >= 0x3ffffff
          var ncarry = carry >>> 26;
          var rword = carry & 0x3ffffff;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
            var i = (k - j) | 0;
            a = self.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += (r / 0x4000000) | 0;
            rword = r & 0x3ffffff;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }

        return out._strip();
      }

      // TODO(indutny): it may be reasonable to omit it for users who don't need
      // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
      // multiplication (like elliptic secp256k1).
      var comb10MulTo = function comb10MulTo (self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 0x1fff;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 0x1fff;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 0x1fff;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 0x1fff;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 0x1fff;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 0x1fff;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 0x1fff;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 0x1fff;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 0x1fff;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 0x1fff;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 0x1fff;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 0x1fff;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 0x1fff;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 0x1fff;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 0x1fff;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 0x1fff;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 0x1fff;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 0x1fff;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 0x1fff;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 0x1fff;
        var bh9 = b9 >>> 13;

        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = (mid + Math.imul(ah0, bl0)) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
        w0 &= 0x3ffffff;
        /* k = 1 */
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = (mid + Math.imul(ah1, bl0)) | 0;
        hi = Math.imul(ah1, bh0);
        lo = (lo + Math.imul(al0, bl1)) | 0;
        mid = (mid + Math.imul(al0, bh1)) | 0;
        mid = (mid + Math.imul(ah0, bl1)) | 0;
        hi = (hi + Math.imul(ah0, bh1)) | 0;
        var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
        w1 &= 0x3ffffff;
        /* k = 2 */
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = (mid + Math.imul(ah2, bl0)) | 0;
        hi = Math.imul(ah2, bh0);
        lo = (lo + Math.imul(al1, bl1)) | 0;
        mid = (mid + Math.imul(al1, bh1)) | 0;
        mid = (mid + Math.imul(ah1, bl1)) | 0;
        hi = (hi + Math.imul(ah1, bh1)) | 0;
        lo = (lo + Math.imul(al0, bl2)) | 0;
        mid = (mid + Math.imul(al0, bh2)) | 0;
        mid = (mid + Math.imul(ah0, bl2)) | 0;
        hi = (hi + Math.imul(ah0, bh2)) | 0;
        var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
        w2 &= 0x3ffffff;
        /* k = 3 */
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = (mid + Math.imul(ah3, bl0)) | 0;
        hi = Math.imul(ah3, bh0);
        lo = (lo + Math.imul(al2, bl1)) | 0;
        mid = (mid + Math.imul(al2, bh1)) | 0;
        mid = (mid + Math.imul(ah2, bl1)) | 0;
        hi = (hi + Math.imul(ah2, bh1)) | 0;
        lo = (lo + Math.imul(al1, bl2)) | 0;
        mid = (mid + Math.imul(al1, bh2)) | 0;
        mid = (mid + Math.imul(ah1, bl2)) | 0;
        hi = (hi + Math.imul(ah1, bh2)) | 0;
        lo = (lo + Math.imul(al0, bl3)) | 0;
        mid = (mid + Math.imul(al0, bh3)) | 0;
        mid = (mid + Math.imul(ah0, bl3)) | 0;
        hi = (hi + Math.imul(ah0, bh3)) | 0;
        var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
        w3 &= 0x3ffffff;
        /* k = 4 */
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = (mid + Math.imul(ah4, bl0)) | 0;
        hi = Math.imul(ah4, bh0);
        lo = (lo + Math.imul(al3, bl1)) | 0;
        mid = (mid + Math.imul(al3, bh1)) | 0;
        mid = (mid + Math.imul(ah3, bl1)) | 0;
        hi = (hi + Math.imul(ah3, bh1)) | 0;
        lo = (lo + Math.imul(al2, bl2)) | 0;
        mid = (mid + Math.imul(al2, bh2)) | 0;
        mid = (mid + Math.imul(ah2, bl2)) | 0;
        hi = (hi + Math.imul(ah2, bh2)) | 0;
        lo = (lo + Math.imul(al1, bl3)) | 0;
        mid = (mid + Math.imul(al1, bh3)) | 0;
        mid = (mid + Math.imul(ah1, bl3)) | 0;
        hi = (hi + Math.imul(ah1, bh3)) | 0;
        lo = (lo + Math.imul(al0, bl4)) | 0;
        mid = (mid + Math.imul(al0, bh4)) | 0;
        mid = (mid + Math.imul(ah0, bl4)) | 0;
        hi = (hi + Math.imul(ah0, bh4)) | 0;
        var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
        w4 &= 0x3ffffff;
        /* k = 5 */
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = (mid + Math.imul(ah5, bl0)) | 0;
        hi = Math.imul(ah5, bh0);
        lo = (lo + Math.imul(al4, bl1)) | 0;
        mid = (mid + Math.imul(al4, bh1)) | 0;
        mid = (mid + Math.imul(ah4, bl1)) | 0;
        hi = (hi + Math.imul(ah4, bh1)) | 0;
        lo = (lo + Math.imul(al3, bl2)) | 0;
        mid = (mid + Math.imul(al3, bh2)) | 0;
        mid = (mid + Math.imul(ah3, bl2)) | 0;
        hi = (hi + Math.imul(ah3, bh2)) | 0;
        lo = (lo + Math.imul(al2, bl3)) | 0;
        mid = (mid + Math.imul(al2, bh3)) | 0;
        mid = (mid + Math.imul(ah2, bl3)) | 0;
        hi = (hi + Math.imul(ah2, bh3)) | 0;
        lo = (lo + Math.imul(al1, bl4)) | 0;
        mid = (mid + Math.imul(al1, bh4)) | 0;
        mid = (mid + Math.imul(ah1, bl4)) | 0;
        hi = (hi + Math.imul(ah1, bh4)) | 0;
        lo = (lo + Math.imul(al0, bl5)) | 0;
        mid = (mid + Math.imul(al0, bh5)) | 0;
        mid = (mid + Math.imul(ah0, bl5)) | 0;
        hi = (hi + Math.imul(ah0, bh5)) | 0;
        var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
        w5 &= 0x3ffffff;
        /* k = 6 */
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = (mid + Math.imul(ah6, bl0)) | 0;
        hi = Math.imul(ah6, bh0);
        lo = (lo + Math.imul(al5, bl1)) | 0;
        mid = (mid + Math.imul(al5, bh1)) | 0;
        mid = (mid + Math.imul(ah5, bl1)) | 0;
        hi = (hi + Math.imul(ah5, bh1)) | 0;
        lo = (lo + Math.imul(al4, bl2)) | 0;
        mid = (mid + Math.imul(al4, bh2)) | 0;
        mid = (mid + Math.imul(ah4, bl2)) | 0;
        hi = (hi + Math.imul(ah4, bh2)) | 0;
        lo = (lo + Math.imul(al3, bl3)) | 0;
        mid = (mid + Math.imul(al3, bh3)) | 0;
        mid = (mid + Math.imul(ah3, bl3)) | 0;
        hi = (hi + Math.imul(ah3, bh3)) | 0;
        lo = (lo + Math.imul(al2, bl4)) | 0;
        mid = (mid + Math.imul(al2, bh4)) | 0;
        mid = (mid + Math.imul(ah2, bl4)) | 0;
        hi = (hi + Math.imul(ah2, bh4)) | 0;
        lo = (lo + Math.imul(al1, bl5)) | 0;
        mid = (mid + Math.imul(al1, bh5)) | 0;
        mid = (mid + Math.imul(ah1, bl5)) | 0;
        hi = (hi + Math.imul(ah1, bh5)) | 0;
        lo = (lo + Math.imul(al0, bl6)) | 0;
        mid = (mid + Math.imul(al0, bh6)) | 0;
        mid = (mid + Math.imul(ah0, bl6)) | 0;
        hi = (hi + Math.imul(ah0, bh6)) | 0;
        var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
        w6 &= 0x3ffffff;
        /* k = 7 */
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = (mid + Math.imul(ah7, bl0)) | 0;
        hi = Math.imul(ah7, bh0);
        lo = (lo + Math.imul(al6, bl1)) | 0;
        mid = (mid + Math.imul(al6, bh1)) | 0;
        mid = (mid + Math.imul(ah6, bl1)) | 0;
        hi = (hi + Math.imul(ah6, bh1)) | 0;
        lo = (lo + Math.imul(al5, bl2)) | 0;
        mid = (mid + Math.imul(al5, bh2)) | 0;
        mid = (mid + Math.imul(ah5, bl2)) | 0;
        hi = (hi + Math.imul(ah5, bh2)) | 0;
        lo = (lo + Math.imul(al4, bl3)) | 0;
        mid = (mid + Math.imul(al4, bh3)) | 0;
        mid = (mid + Math.imul(ah4, bl3)) | 0;
        hi = (hi + Math.imul(ah4, bh3)) | 0;
        lo = (lo + Math.imul(al3, bl4)) | 0;
        mid = (mid + Math.imul(al3, bh4)) | 0;
        mid = (mid + Math.imul(ah3, bl4)) | 0;
        hi = (hi + Math.imul(ah3, bh4)) | 0;
        lo = (lo + Math.imul(al2, bl5)) | 0;
        mid = (mid + Math.imul(al2, bh5)) | 0;
        mid = (mid + Math.imul(ah2, bl5)) | 0;
        hi = (hi + Math.imul(ah2, bh5)) | 0;
        lo = (lo + Math.imul(al1, bl6)) | 0;
        mid = (mid + Math.imul(al1, bh6)) | 0;
        mid = (mid + Math.imul(ah1, bl6)) | 0;
        hi = (hi + Math.imul(ah1, bh6)) | 0;
        lo = (lo + Math.imul(al0, bl7)) | 0;
        mid = (mid + Math.imul(al0, bh7)) | 0;
        mid = (mid + Math.imul(ah0, bl7)) | 0;
        hi = (hi + Math.imul(ah0, bh7)) | 0;
        var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
        w7 &= 0x3ffffff;
        /* k = 8 */
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = (mid + Math.imul(ah8, bl0)) | 0;
        hi = Math.imul(ah8, bh0);
        lo = (lo + Math.imul(al7, bl1)) | 0;
        mid = (mid + Math.imul(al7, bh1)) | 0;
        mid = (mid + Math.imul(ah7, bl1)) | 0;
        hi = (hi + Math.imul(ah7, bh1)) | 0;
        lo = (lo + Math.imul(al6, bl2)) | 0;
        mid = (mid + Math.imul(al6, bh2)) | 0;
        mid = (mid + Math.imul(ah6, bl2)) | 0;
        hi = (hi + Math.imul(ah6, bh2)) | 0;
        lo = (lo + Math.imul(al5, bl3)) | 0;
        mid = (mid + Math.imul(al5, bh3)) | 0;
        mid = (mid + Math.imul(ah5, bl3)) | 0;
        hi = (hi + Math.imul(ah5, bh3)) | 0;
        lo = (lo + Math.imul(al4, bl4)) | 0;
        mid = (mid + Math.imul(al4, bh4)) | 0;
        mid = (mid + Math.imul(ah4, bl4)) | 0;
        hi = (hi + Math.imul(ah4, bh4)) | 0;
        lo = (lo + Math.imul(al3, bl5)) | 0;
        mid = (mid + Math.imul(al3, bh5)) | 0;
        mid = (mid + Math.imul(ah3, bl5)) | 0;
        hi = (hi + Math.imul(ah3, bh5)) | 0;
        lo = (lo + Math.imul(al2, bl6)) | 0;
        mid = (mid + Math.imul(al2, bh6)) | 0;
        mid = (mid + Math.imul(ah2, bl6)) | 0;
        hi = (hi + Math.imul(ah2, bh6)) | 0;
        lo = (lo + Math.imul(al1, bl7)) | 0;
        mid = (mid + Math.imul(al1, bh7)) | 0;
        mid = (mid + Math.imul(ah1, bl7)) | 0;
        hi = (hi + Math.imul(ah1, bh7)) | 0;
        lo = (lo + Math.imul(al0, bl8)) | 0;
        mid = (mid + Math.imul(al0, bh8)) | 0;
        mid = (mid + Math.imul(ah0, bl8)) | 0;
        hi = (hi + Math.imul(ah0, bh8)) | 0;
        var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
        w8 &= 0x3ffffff;
        /* k = 9 */
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = (mid + Math.imul(ah9, bl0)) | 0;
        hi = Math.imul(ah9, bh0);
        lo = (lo + Math.imul(al8, bl1)) | 0;
        mid = (mid + Math.imul(al8, bh1)) | 0;
        mid = (mid + Math.imul(ah8, bl1)) | 0;
        hi = (hi + Math.imul(ah8, bh1)) | 0;
        lo = (lo + Math.imul(al7, bl2)) | 0;
        mid = (mid + Math.imul(al7, bh2)) | 0;
        mid = (mid + Math.imul(ah7, bl2)) | 0;
        hi = (hi + Math.imul(ah7, bh2)) | 0;
        lo = (lo + Math.imul(al6, bl3)) | 0;
        mid = (mid + Math.imul(al6, bh3)) | 0;
        mid = (mid + Math.imul(ah6, bl3)) | 0;
        hi = (hi + Math.imul(ah6, bh3)) | 0;
        lo = (lo + Math.imul(al5, bl4)) | 0;
        mid = (mid + Math.imul(al5, bh4)) | 0;
        mid = (mid + Math.imul(ah5, bl4)) | 0;
        hi = (hi + Math.imul(ah5, bh4)) | 0;
        lo = (lo + Math.imul(al4, bl5)) | 0;
        mid = (mid + Math.imul(al4, bh5)) | 0;
        mid = (mid + Math.imul(ah4, bl5)) | 0;
        hi = (hi + Math.imul(ah4, bh5)) | 0;
        lo = (lo + Math.imul(al3, bl6)) | 0;
        mid = (mid + Math.imul(al3, bh6)) | 0;
        mid = (mid + Math.imul(ah3, bl6)) | 0;
        hi = (hi + Math.imul(ah3, bh6)) | 0;
        lo = (lo + Math.imul(al2, bl7)) | 0;
        mid = (mid + Math.imul(al2, bh7)) | 0;
        mid = (mid + Math.imul(ah2, bl7)) | 0;
        hi = (hi + Math.imul(ah2, bh7)) | 0;
        lo = (lo + Math.imul(al1, bl8)) | 0;
        mid = (mid + Math.imul(al1, bh8)) | 0;
        mid = (mid + Math.imul(ah1, bl8)) | 0;
        hi = (hi + Math.imul(ah1, bh8)) | 0;
        lo = (lo + Math.imul(al0, bl9)) | 0;
        mid = (mid + Math.imul(al0, bh9)) | 0;
        mid = (mid + Math.imul(ah0, bl9)) | 0;
        hi = (hi + Math.imul(ah0, bh9)) | 0;
        var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
        w9 &= 0x3ffffff;
        /* k = 10 */
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = (mid + Math.imul(ah9, bl1)) | 0;
        hi = Math.imul(ah9, bh1);
        lo = (lo + Math.imul(al8, bl2)) | 0;
        mid = (mid + Math.imul(al8, bh2)) | 0;
        mid = (mid + Math.imul(ah8, bl2)) | 0;
        hi = (hi + Math.imul(ah8, bh2)) | 0;
        lo = (lo + Math.imul(al7, bl3)) | 0;
        mid = (mid + Math.imul(al7, bh3)) | 0;
        mid = (mid + Math.imul(ah7, bl3)) | 0;
        hi = (hi + Math.imul(ah7, bh3)) | 0;
        lo = (lo + Math.imul(al6, bl4)) | 0;
        mid = (mid + Math.imul(al6, bh4)) | 0;
        mid = (mid + Math.imul(ah6, bl4)) | 0;
        hi = (hi + Math.imul(ah6, bh4)) | 0;
        lo = (lo + Math.imul(al5, bl5)) | 0;
        mid = (mid + Math.imul(al5, bh5)) | 0;
        mid = (mid + Math.imul(ah5, bl5)) | 0;
        hi = (hi + Math.imul(ah5, bh5)) | 0;
        lo = (lo + Math.imul(al4, bl6)) | 0;
        mid = (mid + Math.imul(al4, bh6)) | 0;
        mid = (mid + Math.imul(ah4, bl6)) | 0;
        hi = (hi + Math.imul(ah4, bh6)) | 0;
        lo = (lo + Math.imul(al3, bl7)) | 0;
        mid = (mid + Math.imul(al3, bh7)) | 0;
        mid = (mid + Math.imul(ah3, bl7)) | 0;
        hi = (hi + Math.imul(ah3, bh7)) | 0;
        lo = (lo + Math.imul(al2, bl8)) | 0;
        mid = (mid + Math.imul(al2, bh8)) | 0;
        mid = (mid + Math.imul(ah2, bl8)) | 0;
        hi = (hi + Math.imul(ah2, bh8)) | 0;
        lo = (lo + Math.imul(al1, bl9)) | 0;
        mid = (mid + Math.imul(al1, bh9)) | 0;
        mid = (mid + Math.imul(ah1, bl9)) | 0;
        hi = (hi + Math.imul(ah1, bh9)) | 0;
        var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
        w10 &= 0x3ffffff;
        /* k = 11 */
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = (mid + Math.imul(ah9, bl2)) | 0;
        hi = Math.imul(ah9, bh2);
        lo = (lo + Math.imul(al8, bl3)) | 0;
        mid = (mid + Math.imul(al8, bh3)) | 0;
        mid = (mid + Math.imul(ah8, bl3)) | 0;
        hi = (hi + Math.imul(ah8, bh3)) | 0;
        lo = (lo + Math.imul(al7, bl4)) | 0;
        mid = (mid + Math.imul(al7, bh4)) | 0;
        mid = (mid + Math.imul(ah7, bl4)) | 0;
        hi = (hi + Math.imul(ah7, bh4)) | 0;
        lo = (lo + Math.imul(al6, bl5)) | 0;
        mid = (mid + Math.imul(al6, bh5)) | 0;
        mid = (mid + Math.imul(ah6, bl5)) | 0;
        hi = (hi + Math.imul(ah6, bh5)) | 0;
        lo = (lo + Math.imul(al5, bl6)) | 0;
        mid = (mid + Math.imul(al5, bh6)) | 0;
        mid = (mid + Math.imul(ah5, bl6)) | 0;
        hi = (hi + Math.imul(ah5, bh6)) | 0;
        lo = (lo + Math.imul(al4, bl7)) | 0;
        mid = (mid + Math.imul(al4, bh7)) | 0;
        mid = (mid + Math.imul(ah4, bl7)) | 0;
        hi = (hi + Math.imul(ah4, bh7)) | 0;
        lo = (lo + Math.imul(al3, bl8)) | 0;
        mid = (mid + Math.imul(al3, bh8)) | 0;
        mid = (mid + Math.imul(ah3, bl8)) | 0;
        hi = (hi + Math.imul(ah3, bh8)) | 0;
        lo = (lo + Math.imul(al2, bl9)) | 0;
        mid = (mid + Math.imul(al2, bh9)) | 0;
        mid = (mid + Math.imul(ah2, bl9)) | 0;
        hi = (hi + Math.imul(ah2, bh9)) | 0;
        var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
        w11 &= 0x3ffffff;
        /* k = 12 */
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = (mid + Math.imul(ah9, bl3)) | 0;
        hi = Math.imul(ah9, bh3);
        lo = (lo + Math.imul(al8, bl4)) | 0;
        mid = (mid + Math.imul(al8, bh4)) | 0;
        mid = (mid + Math.imul(ah8, bl4)) | 0;
        hi = (hi + Math.imul(ah8, bh4)) | 0;
        lo = (lo + Math.imul(al7, bl5)) | 0;
        mid = (mid + Math.imul(al7, bh5)) | 0;
        mid = (mid + Math.imul(ah7, bl5)) | 0;
        hi = (hi + Math.imul(ah7, bh5)) | 0;
        lo = (lo + Math.imul(al6, bl6)) | 0;
        mid = (mid + Math.imul(al6, bh6)) | 0;
        mid = (mid + Math.imul(ah6, bl6)) | 0;
        hi = (hi + Math.imul(ah6, bh6)) | 0;
        lo = (lo + Math.imul(al5, bl7)) | 0;
        mid = (mid + Math.imul(al5, bh7)) | 0;
        mid = (mid + Math.imul(ah5, bl7)) | 0;
        hi = (hi + Math.imul(ah5, bh7)) | 0;
        lo = (lo + Math.imul(al4, bl8)) | 0;
        mid = (mid + Math.imul(al4, bh8)) | 0;
        mid = (mid + Math.imul(ah4, bl8)) | 0;
        hi = (hi + Math.imul(ah4, bh8)) | 0;
        lo = (lo + Math.imul(al3, bl9)) | 0;
        mid = (mid + Math.imul(al3, bh9)) | 0;
        mid = (mid + Math.imul(ah3, bl9)) | 0;
        hi = (hi + Math.imul(ah3, bh9)) | 0;
        var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
        w12 &= 0x3ffffff;
        /* k = 13 */
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = (mid + Math.imul(ah9, bl4)) | 0;
        hi = Math.imul(ah9, bh4);
        lo = (lo + Math.imul(al8, bl5)) | 0;
        mid = (mid + Math.imul(al8, bh5)) | 0;
        mid = (mid + Math.imul(ah8, bl5)) | 0;
        hi = (hi + Math.imul(ah8, bh5)) | 0;
        lo = (lo + Math.imul(al7, bl6)) | 0;
        mid = (mid + Math.imul(al7, bh6)) | 0;
        mid = (mid + Math.imul(ah7, bl6)) | 0;
        hi = (hi + Math.imul(ah7, bh6)) | 0;
        lo = (lo + Math.imul(al6, bl7)) | 0;
        mid = (mid + Math.imul(al6, bh7)) | 0;
        mid = (mid + Math.imul(ah6, bl7)) | 0;
        hi = (hi + Math.imul(ah6, bh7)) | 0;
        lo = (lo + Math.imul(al5, bl8)) | 0;
        mid = (mid + Math.imul(al5, bh8)) | 0;
        mid = (mid + Math.imul(ah5, bl8)) | 0;
        hi = (hi + Math.imul(ah5, bh8)) | 0;
        lo = (lo + Math.imul(al4, bl9)) | 0;
        mid = (mid + Math.imul(al4, bh9)) | 0;
        mid = (mid + Math.imul(ah4, bl9)) | 0;
        hi = (hi + Math.imul(ah4, bh9)) | 0;
        var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
        w13 &= 0x3ffffff;
        /* k = 14 */
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = (mid + Math.imul(ah9, bl5)) | 0;
        hi = Math.imul(ah9, bh5);
        lo = (lo + Math.imul(al8, bl6)) | 0;
        mid = (mid + Math.imul(al8, bh6)) | 0;
        mid = (mid + Math.imul(ah8, bl6)) | 0;
        hi = (hi + Math.imul(ah8, bh6)) | 0;
        lo = (lo + Math.imul(al7, bl7)) | 0;
        mid = (mid + Math.imul(al7, bh7)) | 0;
        mid = (mid + Math.imul(ah7, bl7)) | 0;
        hi = (hi + Math.imul(ah7, bh7)) | 0;
        lo = (lo + Math.imul(al6, bl8)) | 0;
        mid = (mid + Math.imul(al6, bh8)) | 0;
        mid = (mid + Math.imul(ah6, bl8)) | 0;
        hi = (hi + Math.imul(ah6, bh8)) | 0;
        lo = (lo + Math.imul(al5, bl9)) | 0;
        mid = (mid + Math.imul(al5, bh9)) | 0;
        mid = (mid + Math.imul(ah5, bl9)) | 0;
        hi = (hi + Math.imul(ah5, bh9)) | 0;
        var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
        w14 &= 0x3ffffff;
        /* k = 15 */
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = (mid + Math.imul(ah9, bl6)) | 0;
        hi = Math.imul(ah9, bh6);
        lo = (lo + Math.imul(al8, bl7)) | 0;
        mid = (mid + Math.imul(al8, bh7)) | 0;
        mid = (mid + Math.imul(ah8, bl7)) | 0;
        hi = (hi + Math.imul(ah8, bh7)) | 0;
        lo = (lo + Math.imul(al7, bl8)) | 0;
        mid = (mid + Math.imul(al7, bh8)) | 0;
        mid = (mid + Math.imul(ah7, bl8)) | 0;
        hi = (hi + Math.imul(ah7, bh8)) | 0;
        lo = (lo + Math.imul(al6, bl9)) | 0;
        mid = (mid + Math.imul(al6, bh9)) | 0;
        mid = (mid + Math.imul(ah6, bl9)) | 0;
        hi = (hi + Math.imul(ah6, bh9)) | 0;
        var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
        w15 &= 0x3ffffff;
        /* k = 16 */
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = (mid + Math.imul(ah9, bl7)) | 0;
        hi = Math.imul(ah9, bh7);
        lo = (lo + Math.imul(al8, bl8)) | 0;
        mid = (mid + Math.imul(al8, bh8)) | 0;
        mid = (mid + Math.imul(ah8, bl8)) | 0;
        hi = (hi + Math.imul(ah8, bh8)) | 0;
        lo = (lo + Math.imul(al7, bl9)) | 0;
        mid = (mid + Math.imul(al7, bh9)) | 0;
        mid = (mid + Math.imul(ah7, bl9)) | 0;
        hi = (hi + Math.imul(ah7, bh9)) | 0;
        var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
        w16 &= 0x3ffffff;
        /* k = 17 */
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = (mid + Math.imul(ah9, bl8)) | 0;
        hi = Math.imul(ah9, bh8);
        lo = (lo + Math.imul(al8, bl9)) | 0;
        mid = (mid + Math.imul(al8, bh9)) | 0;
        mid = (mid + Math.imul(ah8, bl9)) | 0;
        hi = (hi + Math.imul(ah8, bh9)) | 0;
        var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
        w17 &= 0x3ffffff;
        /* k = 18 */
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = (mid + Math.imul(ah9, bl9)) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
        c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
        w18 &= 0x3ffffff;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };

      // Polyfill comb
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }

      function bigMulTo (self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;

        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          // Sum all words with the same `i + j = k` and accumulate `ncarry`,
          // note that ncarry could be >= 0x3ffffff
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 0x3ffffff;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;

            var lo = r & 0x3ffffff;
            ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
            lo = (lo + rword) | 0;
            rword = lo & 0x3ffffff;
            ncarry = (ncarry + (lo >>> 26)) | 0;

            hncarry += ncarry >>> 26;
            ncarry &= 0x3ffffff;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }

        return out._strip();
      }

      function jumboMulTo (self, num, out) {
        // Temporary disable, see https://github.com/indutny/bn.js/issues/211
        // var fftm = new FFTM();
        // return fftm.mulp(self, num, out);
        return bigMulTo(self, num, out);
      }

      BN.prototype.mulTo = function mulTo (num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }

        return res;
      };

      // Multiply `this` by `num`
      BN.prototype.mul = function mul (num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };

      // Multiply employing FFT
      BN.prototype.mulf = function mulf (num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };

      // In-place Multiplication
      BN.prototype.imul = function imul (num) {
        return this.clone().mulTo(num, this);
      };

      BN.prototype.imuln = function imuln (num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;

        assert(typeof num === 'number');
        assert(num < 0x4000000);

        // Carry
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
          carry >>= 26;
          carry += (w / 0x4000000) | 0;
          // NOTE: lo is 27bit maximum
          carry += lo >>> 26;
          this.words[i] = lo & 0x3ffffff;
        }

        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }

        return isNegNum ? this.ineg() : this;
      };

      BN.prototype.muln = function muln (num) {
        return this.clone().imuln(num);
      };

      // `this` * `this`
      BN.prototype.sqr = function sqr () {
        return this.mul(this);
      };

      // `this` * `this` in-place
      BN.prototype.isqr = function isqr () {
        return this.imul(this.clone());
      };

      // Math.pow(`this`, `num`)
      BN.prototype.pow = function pow (num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);

        // Skip leading zeroes
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0) break;
        }

        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0) continue;

            res = res.mul(q);
          }
        }

        return res;
      };

      // Shift-left in-place
      BN.prototype.iushln = function iushln (bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
        var i;

        if (r !== 0) {
          var carry = 0;

          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = ((this.words[i] | 0) - newCarry) << r;
            this.words[i] = c | carry;
            carry = newCarry >>> (26 - r);
          }

          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }

        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }

          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }

          this.length += s;
        }

        return this._strip();
      };

      BN.prototype.ishln = function ishln (bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
      };

      // Shift-right in-place
      // NOTE: `hint` is a lowest bit before trailing zeroes
      // NOTE: if `extended` is present - it will be filled with destroyed bits
      BN.prototype.iushrn = function iushrn (bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) {
          h = (hint - (hint % 26)) / 26;
        } else {
          h = 0;
        }

        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
        var maskedWords = extended;

        h -= s;
        h = Math.max(0, h);

        // Extended mode, copy masked part
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }

        if (s === 0) ; else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }

        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = (carry << (26 - r)) | (word >>> r);
          carry = word & mask;
        }

        // Push carried bits as a mask
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }

        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }

        return this._strip();
      };

      BN.prototype.ishrn = function ishrn (bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };

      // Shift-left
      BN.prototype.shln = function shln (bits) {
        return this.clone().ishln(bits);
      };

      BN.prototype.ushln = function ushln (bits) {
        return this.clone().iushln(bits);
      };

      // Shift-right
      BN.prototype.shrn = function shrn (bits) {
        return this.clone().ishrn(bits);
      };

      BN.prototype.ushrn = function ushrn (bits) {
        return this.clone().iushrn(bits);
      };

      // Test if n bit is set
      BN.prototype.testn = function testn (bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;

        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;

        // Check bit and return
        var w = this.words[s];

        return !!(w & q);
      };

      // Return only lowers bits of number (in-place)
      BN.prototype.imaskn = function imaskn (bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;

        assert(this.negative === 0, 'imaskn works only with positive numbers');

        if (this.length <= s) {
          return this;
        }

        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);

        if (r !== 0) {
          var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
          this.words[this.length - 1] &= mask;
        }

        return this._strip();
      };

      // Return only lowers bits of number
      BN.prototype.maskn = function maskn (bits) {
        return this.clone().imaskn(bits);
      };

      // Add plain number `num` to `this`
      BN.prototype.iaddn = function iaddn (num) {
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        if (num < 0) return this.isubn(-num);

        // Possible sign change
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) <= num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }

          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }

        // Add without checks
        return this._iaddn(num);
      };

      BN.prototype._iaddn = function _iaddn (num) {
        this.words[0] += num;

        // Carry
        for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
          this.words[i] -= 0x4000000;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);

        return this;
      };

      // Subtract plain number `num` from `this`
      BN.prototype.isubn = function isubn (num) {
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        if (num < 0) return this.iaddn(-num);

        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }

        this.words[0] -= num;

        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          // Carry
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 0x4000000;
            this.words[i + 1] -= 1;
          }
        }

        return this._strip();
      };

      BN.prototype.addn = function addn (num) {
        return this.clone().iaddn(num);
      };

      BN.prototype.subn = function subn (num) {
        return this.clone().isubn(num);
      };

      BN.prototype.iabs = function iabs () {
        this.negative = 0;

        return this;
      };

      BN.prototype.abs = function abs () {
        return this.clone().iabs();
      };

      BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
        var len = num.length + shift;
        var i;

        this._expand(len);

        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul;
          w -= right & 0x3ffffff;
          carry = (w >> 26) - ((right / 0x4000000) | 0);
          this.words[i + shift] = w & 0x3ffffff;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 0x3ffffff;
        }

        if (carry === 0) return this._strip();

        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 0x3ffffff;
        }
        this.negative = 1;

        return this._strip();
      };

      BN.prototype._wordDiv = function _wordDiv (num, mode) {
        var shift = this.length - num.length;

        var a = this.clone();
        var b = num;

        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }

        // Initialize quotient
        var m = a.length - b.length;
        var q;

        if (mode !== 'mod') {
          q = new BN(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }

        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }

        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 0x4000000 +
            (a.words[b.length + j - 1] | 0);

          // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
          // (0x7ffffff)
          qj = Math.min((qj / bhi) | 0, 0x3ffffff);

          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q._strip();
        }
        a._strip();

        // Denormalize
        if (mode !== 'div' && shift !== 0) {
          a.iushrn(shift);
        }

        return {
          div: q || null,
          mod: a
        };
      };

      // NOTE: 1) `mode` can be set to `mod` to request mod only,
      //       to `div` to request div only, or be absent to
      //       request both div & mod
      //       2) `positive` is true if unsigned mod is requested
      BN.prototype.divmod = function divmod (num, mode, positive) {
        assert(!num.isZero());

        if (this.isZero()) {
          return {
            div: new BN(0),
            mod: new BN(0)
          };
        }

        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);

          if (mode !== 'mod') {
            div = res.div.neg();
          }

          if (mode !== 'div') {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }

          return {
            div: div,
            mod: mod
          };
        }

        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);

          if (mode !== 'mod') {
            div = res.div.neg();
          }

          return {
            div: div,
            mod: res.mod
          };
        }

        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);

          if (mode !== 'div') {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }

          return {
            div: res.div,
            mod: mod
          };
        }

        // Both numbers are positive at this point

        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN(0),
            mod: this
          };
        }

        // Very short reduction
        if (num.length === 1) {
          if (mode === 'div') {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }

          if (mode === 'mod') {
            return {
              div: null,
              mod: new BN(this.modrn(num.words[0]))
            };
          }

          return {
            div: this.divn(num.words[0]),
            mod: new BN(this.modrn(num.words[0]))
          };
        }

        return this._wordDiv(num, mode);
      };

      // Find `this` / `num`
      BN.prototype.div = function div (num) {
        return this.divmod(num, 'div', false).div;
      };

      // Find `this` % `num`
      BN.prototype.mod = function mod (num) {
        return this.divmod(num, 'mod', false).mod;
      };

      BN.prototype.umod = function umod (num) {
        return this.divmod(num, 'mod', true).mod;
      };

      // Find Round(`this` / `num`)
      BN.prototype.divRound = function divRound (num) {
        var dm = this.divmod(num);

        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;

        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);

        // Round down
        if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };

      BN.prototype.modrn = function modrn (num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;

        assert(num <= 0x3ffffff);
        var p = (1 << 26) % num;

        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }

        return isNegNum ? -acc : acc;
      };

      // WARNING: DEPRECATED
      BN.prototype.modn = function modn (num) {
        return this.modrn(num);
      };

      // In-place division by number
      BN.prototype.idivn = function idivn (num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;

        assert(num <= 0x3ffffff);

        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 0x4000000;
          this.words[i] = (w / num) | 0;
          carry = w % num;
        }

        this._strip();
        return isNegNum ? this.ineg() : this;
      };

      BN.prototype.divn = function divn (num) {
        return this.clone().idivn(num);
      };

      BN.prototype.egcd = function egcd (p) {
        assert(p.negative === 0);
        assert(!p.isZero());

        var x = this;
        var y = p.clone();

        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }

        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);

        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);

        var g = 0;

        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }

        var yp = y.clone();
        var xp = x.clone();

        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }

              A.iushrn(1);
              B.iushrn(1);
            }
          }

          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }

              C.iushrn(1);
              D.iushrn(1);
            }
          }

          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }

        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };

      // This is reduced incarnation of the binary EEA
      // above, designated to invert members of the
      // _prime_ fields F(p) at a maximal speed
      BN.prototype._invmp = function _invmp (p) {
        assert(p.negative === 0);
        assert(!p.isZero());

        var a = this;
        var b = p.clone();

        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }

        var x1 = new BN(1);
        var x2 = new BN(0);

        var delta = b.clone();

        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }

              x1.iushrn(1);
            }
          }

          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }

              x2.iushrn(1);
            }
          }

          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }

        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }

        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }

        return res;
      };

      BN.prototype.gcd = function gcd (num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();

        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;

        // Remove common factor of two
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }

        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }

          var r = a.cmp(b);
          if (r < 0) {
            // Swap `a` and `b` to make `a` always bigger than `b`
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }

          a.isub(b);
        } while (true);

        return b.iushln(shift);
      };

      // Invert number in the field F(num)
      BN.prototype.invm = function invm (num) {
        return this.egcd(num).a.umod(num);
      };

      BN.prototype.isEven = function isEven () {
        return (this.words[0] & 1) === 0;
      };

      BN.prototype.isOdd = function isOdd () {
        return (this.words[0] & 1) === 1;
      };

      // And first word and num
      BN.prototype.andln = function andln (num) {
        return this.words[0] & num;
      };

      // Increment at the bit position in-line
      BN.prototype.bincn = function bincn (bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;

        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }

        // Add bit and propagate, if needed
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 0x3ffffff;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };

      BN.prototype.isZero = function isZero () {
        return this.length === 1 && this.words[0] === 0;
      };

      BN.prototype.cmpn = function cmpn (num) {
        var negative = num < 0;

        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;

        this._strip();

        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }

          assert(num <= 0x3ffffff, 'Number is too big');

          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
      };

      // Compare two numbers and return:
      // 1 - if `this` > `num`
      // 0 - if `this` == `num`
      // -1 - if `this` < `num`
      BN.prototype.cmp = function cmp (num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;

        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
      };

      // Unsigned comparison
      BN.prototype.ucmp = function ucmp (num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;

        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;

          if (a === b) continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };

      BN.prototype.gtn = function gtn (num) {
        return this.cmpn(num) === 1;
      };

      BN.prototype.gt = function gt (num) {
        return this.cmp(num) === 1;
      };

      BN.prototype.gten = function gten (num) {
        return this.cmpn(num) >= 0;
      };

      BN.prototype.gte = function gte (num) {
        return this.cmp(num) >= 0;
      };

      BN.prototype.ltn = function ltn (num) {
        return this.cmpn(num) === -1;
      };

      BN.prototype.lt = function lt (num) {
        return this.cmp(num) === -1;
      };

      BN.prototype.lten = function lten (num) {
        return this.cmpn(num) <= 0;
      };

      BN.prototype.lte = function lte (num) {
        return this.cmp(num) <= 0;
      };

      BN.prototype.eqn = function eqn (num) {
        return this.cmpn(num) === 0;
      };

      BN.prototype.eq = function eq (num) {
        return this.cmp(num) === 0;
      };

      //
      // A reduce context, could be using montgomery or something better, depending
      // on the `m` itself.
      //
      BN.red = function red (num) {
        return new Red(num);
      };

      BN.prototype.toRed = function toRed (ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
      };

      BN.prototype.fromRed = function fromRed () {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
      };

      BN.prototype._forceRed = function _forceRed (ctx) {
        this.red = ctx;
        return this;
      };

      BN.prototype.forceRed = function forceRed (ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
      };

      BN.prototype.redAdd = function redAdd (num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
      };

      BN.prototype.redIAdd = function redIAdd (num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
      };

      BN.prototype.redSub = function redSub (num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
      };

      BN.prototype.redISub = function redISub (num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
      };

      BN.prototype.redShl = function redShl (num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
      };

      BN.prototype.redMul = function redMul (num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };

      BN.prototype.redIMul = function redIMul (num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };

      BN.prototype.redSqr = function redSqr () {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
      };

      BN.prototype.redISqr = function redISqr () {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
      };

      // Square root over p
      BN.prototype.redSqrt = function redSqrt () {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
      };

      BN.prototype.redInvm = function redInvm () {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
      };

      // Return negative clone of `this` % `red modulo`
      BN.prototype.redNeg = function redNeg () {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
      };

      BN.prototype.redPow = function redPow (num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
      };

      // Prime numbers with efficient reduction
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };

      // Pseudo-Mersenne prime
      function MPrime (name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);

        this.tmp = this._tmp();
      }

      MPrime.prototype._tmp = function _tmp () {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };

      MPrime.prototype.ireduce = function ireduce (num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;

        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);

        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== undefined) {
            // r is a BN v4 instance
            r.strip();
          } else {
            // r is a BN v5 instance
            r._strip();
          }
        }

        return r;
      };

      MPrime.prototype.split = function split (input, out) {
        input.iushrn(this.n, 0, out);
      };

      MPrime.prototype.imulK = function imulK (num) {
        return num.imul(this.k);
      };

      function K256 () {
        MPrime.call(
          this,
          'k256',
          'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
      }
      inherits(K256, MPrime);

      K256.prototype.split = function split (input, output) {
        // 256 = 9 * 26 + 22
        var mask = 0x3fffff;

        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;

        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }

        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;

        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };

      K256.prototype.imulK = function imulK (num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;

        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 0x3d1;
          num.words[i] = lo & 0x3ffffff;
          lo = w * 0x40 + ((lo / 0x4000000) | 0);
        }

        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };

      function P224 () {
        MPrime.call(
          this,
          'p224',
          'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
      }
      inherits(P224, MPrime);

      function P192 () {
        MPrime.call(
          this,
          'p192',
          'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
      }
      inherits(P192, MPrime);

      function P25519 () {
        // 2 ^ 255 - 19
        MPrime.call(
          this,
          '25519',
          '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
      }
      inherits(P25519, MPrime);

      P25519.prototype.imulK = function imulK (num) {
        // K = 0x13
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 0x13 + carry;
          var lo = hi & 0x3ffffff;
          hi >>>= 26;

          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };

      // Exported mostly for testing purposes, use plain name instead
      BN._prime = function prime (name) {
        // Cached version of prime
        if (primes[name]) return primes[name];

        var prime;
        if (name === 'k256') {
          prime = new K256();
        } else if (name === 'p224') {
          prime = new P224();
        } else if (name === 'p192') {
          prime = new P192();
        } else if (name === 'p25519') {
          prime = new P25519();
        } else {
          throw new Error('Unknown prime ' + name);
        }
        primes[name] = prime;

        return prime;
      };

      //
      // Base reduction engine
      //
      function Red (m) {
        if (typeof m === 'string') {
          var prime = BN._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert(m.gtn(1), 'modulus must be greater than 1');
          this.m = m;
          this.prime = null;
        }
      }

      Red.prototype._verify1 = function _verify1 (a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
      };

      Red.prototype._verify2 = function _verify2 (a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red,
          'red works only with red numbers');
      };

      Red.prototype.imod = function imod (a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);

        move(a, a.umod(this.m)._forceRed(this));
        return a;
      };

      Red.prototype.neg = function neg (a) {
        if (a.isZero()) {
          return a.clone();
        }

        return this.m.sub(a)._forceRed(this);
      };

      Red.prototype.add = function add (a, b) {
        this._verify2(a, b);

        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };

      Red.prototype.iadd = function iadd (a, b) {
        this._verify2(a, b);

        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };

      Red.prototype.sub = function sub (a, b) {
        this._verify2(a, b);

        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };

      Red.prototype.isub = function isub (a, b) {
        this._verify2(a, b);

        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };

      Red.prototype.shl = function shl (a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };

      Red.prototype.imul = function imul (a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };

      Red.prototype.mul = function mul (a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };

      Red.prototype.isqr = function isqr (a) {
        return this.imul(a, a.clone());
      };

      Red.prototype.sqr = function sqr (a) {
        return this.mul(a, a);
      };

      Red.prototype.sqrt = function sqrt (a) {
        if (a.isZero()) return a.clone();

        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);

        // Fast case
        if (mod3 === 3) {
          var pow = this.m.add(new BN(1)).iushrn(2);
          return this.pow(a, pow);
        }

        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert(!q.isZero());

        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();

        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);

        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }

        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert(i < m);
          var b = this.pow(c, new BN(1).iushln(m - i - 1));

          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }

        return r;
      };

      Red.prototype.invm = function invm (a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };

      Red.prototype.pow = function pow (a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();

        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }

        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }

        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = (word >> j) & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }

            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }

            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }

        return res;
      };

      Red.prototype.convertTo = function convertTo (num) {
        var r = num.umod(this.m);

        return r === num ? r.clone() : r;
      };

      Red.prototype.convertFrom = function convertFrom (num) {
        var res = num.clone();
        res.red = null;
        return res;
      };

      //
      // Montgomery method engine
      //

      BN.mont = function mont (num) {
        return new Mont(num);
      };

      function Mont (m) {
        Red.call(this, m);

        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - (this.shift % 26);
        }

        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);

        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);

      Mont.prototype.convertTo = function convertTo (num) {
        return this.imod(num.ushln(this.shift));
      };

      Mont.prototype.convertFrom = function convertFrom (num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };

      Mont.prototype.imul = function imul (a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }

        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;

        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }

        return res._forceRed(this);
      };

      Mont.prototype.mul = function mul (a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }

        return res._forceRed(this);
      };

      Mont.prototype.invm = function invm (a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(module, commonjsGlobal);
    }(bn));

    var BN$1 = bn.exports;

    const version$f = "bignumber/5.7.0";

    var BN = BN$1.BN;
    const logger$g = new Logger(version$f);
    const _constructorGuard$1 = {};
    const MAX_SAFE = 0x1fffffffffffff;
    // Only warn about passing 10 into radix once
    let _warnedToStringRadix = false;
    class BigNumber {
        constructor(constructorGuard, hex) {
            if (constructorGuard !== _constructorGuard$1) {
                logger$g.throwError("cannot call constructor directly; use BigNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new (BigNumber)"
                });
            }
            this._hex = hex;
            this._isBigNumber = true;
            Object.freeze(this);
        }
        fromTwos(value) {
            return toBigNumber(toBN(this).fromTwos(value));
        }
        toTwos(value) {
            return toBigNumber(toBN(this).toTwos(value));
        }
        abs() {
            if (this._hex[0] === "-") {
                return BigNumber.from(this._hex.substring(1));
            }
            return this;
        }
        add(other) {
            return toBigNumber(toBN(this).add(toBN(other)));
        }
        sub(other) {
            return toBigNumber(toBN(this).sub(toBN(other)));
        }
        div(other) {
            const o = BigNumber.from(other);
            if (o.isZero()) {
                throwFault("division-by-zero", "div");
            }
            return toBigNumber(toBN(this).div(toBN(other)));
        }
        mul(other) {
            return toBigNumber(toBN(this).mul(toBN(other)));
        }
        mod(other) {
            const value = toBN(other);
            if (value.isNeg()) {
                throwFault("division-by-zero", "mod");
            }
            return toBigNumber(toBN(this).umod(value));
        }
        pow(other) {
            const value = toBN(other);
            if (value.isNeg()) {
                throwFault("negative-power", "pow");
            }
            return toBigNumber(toBN(this).pow(value));
        }
        and(other) {
            const value = toBN(other);
            if (this.isNegative() || value.isNeg()) {
                throwFault("unbound-bitwise-result", "and");
            }
            return toBigNumber(toBN(this).and(value));
        }
        or(other) {
            const value = toBN(other);
            if (this.isNegative() || value.isNeg()) {
                throwFault("unbound-bitwise-result", "or");
            }
            return toBigNumber(toBN(this).or(value));
        }
        xor(other) {
            const value = toBN(other);
            if (this.isNegative() || value.isNeg()) {
                throwFault("unbound-bitwise-result", "xor");
            }
            return toBigNumber(toBN(this).xor(value));
        }
        mask(value) {
            if (this.isNegative() || value < 0) {
                throwFault("negative-width", "mask");
            }
            return toBigNumber(toBN(this).maskn(value));
        }
        shl(value) {
            if (this.isNegative() || value < 0) {
                throwFault("negative-width", "shl");
            }
            return toBigNumber(toBN(this).shln(value));
        }
        shr(value) {
            if (this.isNegative() || value < 0) {
                throwFault("negative-width", "shr");
            }
            return toBigNumber(toBN(this).shrn(value));
        }
        eq(other) {
            return toBN(this).eq(toBN(other));
        }
        lt(other) {
            return toBN(this).lt(toBN(other));
        }
        lte(other) {
            return toBN(this).lte(toBN(other));
        }
        gt(other) {
            return toBN(this).gt(toBN(other));
        }
        gte(other) {
            return toBN(this).gte(toBN(other));
        }
        isNegative() {
            return (this._hex[0] === "-");
        }
        isZero() {
            return toBN(this).isZero();
        }
        toNumber() {
            try {
                return toBN(this).toNumber();
            }
            catch (error) {
                throwFault("overflow", "toNumber", this.toString());
            }
            return null;
        }
        toBigInt() {
            try {
                return BigInt(this.toString());
            }
            catch (e) { }
            return logger$g.throwError("this platform does not support BigInt", Logger.errors.UNSUPPORTED_OPERATION, {
                value: this.toString()
            });
        }
        toString() {
            // Lots of people expect this, which we do not support, so check (See: #889)
            if (arguments.length > 0) {
                if (arguments[0] === 10) {
                    if (!_warnedToStringRadix) {
                        _warnedToStringRadix = true;
                        logger$g.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
                    }
                }
                else if (arguments[0] === 16) {
                    logger$g.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Logger.errors.UNEXPECTED_ARGUMENT, {});
                }
                else {
                    logger$g.throwError("BigNumber.toString does not accept parameters", Logger.errors.UNEXPECTED_ARGUMENT, {});
                }
            }
            return toBN(this).toString(10);
        }
        toHexString() {
            return this._hex;
        }
        toJSON(key) {
            return { type: "BigNumber", hex: this.toHexString() };
        }
        static from(value) {
            if (value instanceof BigNumber) {
                return value;
            }
            if (typeof (value) === "string") {
                if (value.match(/^-?0x[0-9a-f]+$/i)) {
                    return new BigNumber(_constructorGuard$1, toHex$1(value));
                }
                if (value.match(/^-?[0-9]+$/)) {
                    return new BigNumber(_constructorGuard$1, toHex$1(new BN(value)));
                }
                return logger$g.throwArgumentError("invalid BigNumber string", "value", value);
            }
            if (typeof (value) === "number") {
                if (value % 1) {
                    throwFault("underflow", "BigNumber.from", value);
                }
                if (value >= MAX_SAFE || value <= -MAX_SAFE) {
                    throwFault("overflow", "BigNumber.from", value);
                }
                return BigNumber.from(String(value));
            }
            const anyValue = value;
            if (typeof (anyValue) === "bigint") {
                return BigNumber.from(anyValue.toString());
            }
            if (isBytes(anyValue)) {
                return BigNumber.from(hexlify(anyValue));
            }
            if (anyValue) {
                // Hexable interface (takes priority)
                if (anyValue.toHexString) {
                    const hex = anyValue.toHexString();
                    if (typeof (hex) === "string") {
                        return BigNumber.from(hex);
                    }
                }
                else {
                    // For now, handle legacy JSON-ified values (goes away in v6)
                    let hex = anyValue._hex;
                    // New-form JSON
                    if (hex == null && anyValue.type === "BigNumber") {
                        hex = anyValue.hex;
                    }
                    if (typeof (hex) === "string") {
                        if (isHexString(hex) || (hex[0] === "-" && isHexString(hex.substring(1)))) {
                            return BigNumber.from(hex);
                        }
                    }
                }
            }
            return logger$g.throwArgumentError("invalid BigNumber value", "value", value);
        }
        static isBigNumber(value) {
            return !!(value && value._isBigNumber);
        }
    }
    // Normalize the hex string
    function toHex$1(value) {
        // For BN, call on the hex string
        if (typeof (value) !== "string") {
            return toHex$1(value.toString(16));
        }
        // If negative, prepend the negative sign to the normalized positive value
        if (value[0] === "-") {
            // Strip off the negative sign
            value = value.substring(1);
            // Cannot have multiple negative signs (e.g. "--0x04")
            if (value[0] === "-") {
                logger$g.throwArgumentError("invalid hex", "value", value);
            }
            // Call toHex on the positive component
            value = toHex$1(value);
            // Do not allow "-0x00"
            if (value === "0x00") {
                return value;
            }
            // Negate the value
            return "-" + value;
        }
        // Add a "0x" prefix if missing
        if (value.substring(0, 2) !== "0x") {
            value = "0x" + value;
        }
        // Normalize zero
        if (value === "0x") {
            return "0x00";
        }
        // Make the string even length
        if (value.length % 2) {
            value = "0x0" + value.substring(2);
        }
        // Trim to smallest even-length string
        while (value.length > 4 && value.substring(0, 4) === "0x00") {
            value = "0x" + value.substring(4);
        }
        return value;
    }
    function toBigNumber(value) {
        return BigNumber.from(toHex$1(value));
    }
    function toBN(value) {
        const hex = BigNumber.from(value).toHexString();
        if (hex[0] === "-") {
            return (new BN("-" + hex.substring(3), 16));
        }
        return new BN(hex.substring(2), 16);
    }
    function throwFault(fault, operation, value) {
        const params = { fault: fault, operation: operation };
        if (value != null) {
            params.value = value;
        }
        return logger$g.throwError(fault, Logger.errors.NUMERIC_FAULT, params);
    }
    // value should have no prefix
    function _base36To16(value) {
        return (new BN(value, 36)).toString(16);
    }

    var sha3$1 = {exports: {}};

    /**
     * [js-sha3]{@link https://github.com/emn178/js-sha3}
     *
     * @version 0.8.0
     * @author Chen, Yi-Cyuan [emn178@gmail.com]
     * @copyright Chen, Yi-Cyuan 2015-2018
     * @license MIT
     */

    (function (module) {
    /*jslint bitwise: true */
    (function () {

      var INPUT_ERROR = 'input is invalid type';
      var FINALIZE_ERROR = 'finalize already called';
      var WINDOW = typeof window === 'object';
      var root = WINDOW ? window : {};
      if (root.JS_SHA3_NO_WINDOW) {
        WINDOW = false;
      }
      var WEB_WORKER = !WINDOW && typeof self === 'object';
      var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
      if (NODE_JS) {
        root = commonjsGlobal;
      } else if (WEB_WORKER) {
        root = self;
      }
      var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;
      var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
      var HEX_CHARS = '0123456789abcdef'.split('');
      var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
      var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
      var KECCAK_PADDING = [1, 256, 65536, 16777216];
      var PADDING = [6, 1536, 393216, 100663296];
      var SHIFT = [0, 8, 16, 24];
      var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,
        0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,
        2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,
        2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,
        2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
      var BITS = [224, 256, 384, 512];
      var SHAKE_BITS = [128, 256];
      var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];
      var CSHAKE_BYTEPAD = {
        '128': 168,
        '256': 136
      };

      if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
        Array.isArray = function (obj) {
          return Object.prototype.toString.call(obj) === '[object Array]';
        };
      }

      if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
        ArrayBuffer.isView = function (obj) {
          return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
        };
      }

      var createOutputMethod = function (bits, padding, outputType) {
        return function (message) {
          return new Keccak(bits, padding, bits).update(message)[outputType]();
        };
      };

      var createShakeOutputMethod = function (bits, padding, outputType) {
        return function (message, outputBits) {
          return new Keccak(bits, padding, outputBits).update(message)[outputType]();
        };
      };

      var createCshakeOutputMethod = function (bits, padding, outputType) {
        return function (message, outputBits, n, s) {
          return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();
        };
      };

      var createKmacOutputMethod = function (bits, padding, outputType) {
        return function (key, message, outputBits, s) {
          return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();
        };
      };

      var createOutputMethods = function (method, createMethod, bits, padding) {
        for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
          var type = OUTPUT_TYPES[i];
          method[type] = createMethod(bits, padding, type);
        }
        return method;
      };

      var createMethod = function (bits, padding) {
        var method = createOutputMethod(bits, padding, 'hex');
        method.create = function () {
          return new Keccak(bits, padding, bits);
        };
        method.update = function (message) {
          return method.create().update(message);
        };
        return createOutputMethods(method, createOutputMethod, bits, padding);
      };

      var createShakeMethod = function (bits, padding) {
        var method = createShakeOutputMethod(bits, padding, 'hex');
        method.create = function (outputBits) {
          return new Keccak(bits, padding, outputBits);
        };
        method.update = function (message, outputBits) {
          return method.create(outputBits).update(message);
        };
        return createOutputMethods(method, createShakeOutputMethod, bits, padding);
      };

      var createCshakeMethod = function (bits, padding) {
        var w = CSHAKE_BYTEPAD[bits];
        var method = createCshakeOutputMethod(bits, padding, 'hex');
        method.create = function (outputBits, n, s) {
          if (!n && !s) {
            return methods['shake' + bits].create(outputBits);
          } else {
            return new Keccak(bits, padding, outputBits).bytepad([n, s], w);
          }
        };
        method.update = function (message, outputBits, n, s) {
          return method.create(outputBits, n, s).update(message);
        };
        return createOutputMethods(method, createCshakeOutputMethod, bits, padding);
      };

      var createKmacMethod = function (bits, padding) {
        var w = CSHAKE_BYTEPAD[bits];
        var method = createKmacOutputMethod(bits, padding, 'hex');
        method.create = function (key, outputBits, s) {
          return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);
        };
        method.update = function (key, message, outputBits, s) {
          return method.create(key, outputBits, s).update(message);
        };
        return createOutputMethods(method, createKmacOutputMethod, bits, padding);
      };

      var algorithms = [
        { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },
        { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },
        { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
        { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
        { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
      ];

      var methods = {}, methodNames = [];

      for (var i = 0; i < algorithms.length; ++i) {
        var algorithm = algorithms[i];
        var bits = algorithm.bits;
        for (var j = 0; j < bits.length; ++j) {
          var methodName = algorithm.name + '_' + bits[j];
          methodNames.push(methodName);
          methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
          if (algorithm.name !== 'sha3') {
            var newMethodName = algorithm.name + bits[j];
            methodNames.push(newMethodName);
            methods[newMethodName] = methods[methodName];
          }
        }
      }

      function Keccak(bits, padding, outputBits) {
        this.blocks = [];
        this.s = [];
        this.padding = padding;
        this.outputBits = outputBits;
        this.reset = true;
        this.finalized = false;
        this.block = 0;
        this.start = 0;
        this.blockCount = (1600 - (bits << 1)) >> 5;
        this.byteCount = this.blockCount << 2;
        this.outputBlocks = outputBits >> 5;
        this.extraBytes = (outputBits & 31) >> 3;

        for (var i = 0; i < 50; ++i) {
          this.s[i] = 0;
        }
      }

      Keccak.prototype.update = function (message) {
        if (this.finalized) {
          throw new Error(FINALIZE_ERROR);
        }
        var notString, type = typeof message;
        if (type !== 'string') {
          if (type === 'object') {
            if (message === null) {
              throw new Error(INPUT_ERROR);
            } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
              message = new Uint8Array(message);
            } else if (!Array.isArray(message)) {
              if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
                throw new Error(INPUT_ERROR);
              }
            }
          } else {
            throw new Error(INPUT_ERROR);
          }
          notString = true;
        }
        var blocks = this.blocks, byteCount = this.byteCount, length = message.length,
          blockCount = this.blockCount, index = 0, s = this.s, i, code;

        while (index < length) {
          if (this.reset) {
            this.reset = false;
            blocks[0] = this.block;
            for (i = 1; i < blockCount + 1; ++i) {
              blocks[i] = 0;
            }
          }
          if (notString) {
            for (i = this.start; index < length && i < byteCount; ++index) {
              blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
            }
          } else {
            for (i = this.start; index < length && i < byteCount; ++index) {
              code = message.charCodeAt(index);
              if (code < 0x80) {
                blocks[i >> 2] |= code << SHIFT[i++ & 3];
              } else if (code < 0x800) {
                blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
                blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
              } else if (code < 0xd800 || code >= 0xe000) {
                blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
                blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
                blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
              } else {
                code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
                blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
                blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
                blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
                blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
              }
            }
          }
          this.lastByteIndex = i;
          if (i >= byteCount) {
            this.start = i - byteCount;
            this.block = blocks[blockCount];
            for (i = 0; i < blockCount; ++i) {
              s[i] ^= blocks[i];
            }
            f(s);
            this.reset = true;
          } else {
            this.start = i;
          }
        }
        return this;
      };

      Keccak.prototype.encode = function (x, right) {
        var o = x & 255, n = 1;
        var bytes = [o];
        x = x >> 8;
        o = x & 255;
        while (o > 0) {
          bytes.unshift(o);
          x = x >> 8;
          o = x & 255;
          ++n;
        }
        if (right) {
          bytes.push(n);
        } else {
          bytes.unshift(n);
        }
        this.update(bytes);
        return bytes.length;
      };

      Keccak.prototype.encodeString = function (str) {
        var notString, type = typeof str;
        if (type !== 'string') {
          if (type === 'object') {
            if (str === null) {
              throw new Error(INPUT_ERROR);
            } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
              str = new Uint8Array(str);
            } else if (!Array.isArray(str)) {
              if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
                throw new Error(INPUT_ERROR);
              }
            }
          } else {
            throw new Error(INPUT_ERROR);
          }
          notString = true;
        }
        var bytes = 0, length = str.length;
        if (notString) {
          bytes = length;
        } else {
          for (var i = 0; i < str.length; ++i) {
            var code = str.charCodeAt(i);
            if (code < 0x80) {
              bytes += 1;
            } else if (code < 0x800) {
              bytes += 2;
            } else if (code < 0xd800 || code >= 0xe000) {
              bytes += 3;
            } else {
              code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));
              bytes += 4;
            }
          }
        }
        bytes += this.encode(bytes * 8);
        this.update(str);
        return bytes;
      };

      Keccak.prototype.bytepad = function (strs, w) {
        var bytes = this.encode(w);
        for (var i = 0; i < strs.length; ++i) {
          bytes += this.encodeString(strs[i]);
        }
        var paddingBytes = w - bytes % w;
        var zeros = [];
        zeros.length = paddingBytes;
        this.update(zeros);
        return this;
      };

      Keccak.prototype.finalize = function () {
        if (this.finalized) {
          return;
        }
        this.finalized = true;
        var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
        blocks[i >> 2] |= this.padding[i & 3];
        if (this.lastByteIndex === this.byteCount) {
          blocks[0] = blocks[blockCount];
          for (i = 1; i < blockCount + 1; ++i) {
            blocks[i] = 0;
          }
        }
        blocks[blockCount - 1] |= 0x80000000;
        for (i = 0; i < blockCount; ++i) {
          s[i] ^= blocks[i];
        }
        f(s);
      };

      Keccak.prototype.toString = Keccak.prototype.hex = function () {
        this.finalize();

        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
          extraBytes = this.extraBytes, i = 0, j = 0;
        var hex = '', block;
        while (j < outputBlocks) {
          for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
            block = s[i];
            hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +
              HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +
              HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +
              HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];
          }
          if (j % blockCount === 0) {
            f(s);
            i = 0;
          }
        }
        if (extraBytes) {
          block = s[i];
          hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];
          if (extraBytes > 1) {
            hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];
          }
          if (extraBytes > 2) {
            hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];
          }
        }
        return hex;
      };

      Keccak.prototype.arrayBuffer = function () {
        this.finalize();

        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
          extraBytes = this.extraBytes, i = 0, j = 0;
        var bytes = this.outputBits >> 3;
        var buffer;
        if (extraBytes) {
          buffer = new ArrayBuffer((outputBlocks + 1) << 2);
        } else {
          buffer = new ArrayBuffer(bytes);
        }
        var array = new Uint32Array(buffer);
        while (j < outputBlocks) {
          for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
            array[j] = s[i];
          }
          if (j % blockCount === 0) {
            f(s);
          }
        }
        if (extraBytes) {
          array[i] = s[i];
          buffer = buffer.slice(0, bytes);
        }
        return buffer;
      };

      Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;

      Keccak.prototype.digest = Keccak.prototype.array = function () {
        this.finalize();

        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
          extraBytes = this.extraBytes, i = 0, j = 0;
        var array = [], offset, block;
        while (j < outputBlocks) {
          for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
            offset = j << 2;
            block = s[i];
            array[offset] = block & 0xFF;
            array[offset + 1] = (block >> 8) & 0xFF;
            array[offset + 2] = (block >> 16) & 0xFF;
            array[offset + 3] = (block >> 24) & 0xFF;
          }
          if (j % blockCount === 0) {
            f(s);
          }
        }
        if (extraBytes) {
          offset = j << 2;
          block = s[i];
          array[offset] = block & 0xFF;
          if (extraBytes > 1) {
            array[offset + 1] = (block >> 8) & 0xFF;
          }
          if (extraBytes > 2) {
            array[offset + 2] = (block >> 16) & 0xFF;
          }
        }
        return array;
      };

      function Kmac(bits, padding, outputBits) {
        Keccak.call(this, bits, padding, outputBits);
      }

      Kmac.prototype = new Keccak();

      Kmac.prototype.finalize = function () {
        this.encode(this.outputBits, true);
        return Keccak.prototype.finalize.call(this);
      };

      var f = function (s) {
        var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,
          b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,
          b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,
          b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
        for (n = 0; n < 48; n += 2) {
          c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
          c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
          c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
          c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
          c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
          c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
          c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
          c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
          c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
          c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];

          h = c8 ^ ((c2 << 1) | (c3 >>> 31));
          l = c9 ^ ((c3 << 1) | (c2 >>> 31));
          s[0] ^= h;
          s[1] ^= l;
          s[10] ^= h;
          s[11] ^= l;
          s[20] ^= h;
          s[21] ^= l;
          s[30] ^= h;
          s[31] ^= l;
          s[40] ^= h;
          s[41] ^= l;
          h = c0 ^ ((c4 << 1) | (c5 >>> 31));
          l = c1 ^ ((c5 << 1) | (c4 >>> 31));
          s[2] ^= h;
          s[3] ^= l;
          s[12] ^= h;
          s[13] ^= l;
          s[22] ^= h;
          s[23] ^= l;
          s[32] ^= h;
          s[33] ^= l;
          s[42] ^= h;
          s[43] ^= l;
          h = c2 ^ ((c6 << 1) | (c7 >>> 31));
          l = c3 ^ ((c7 << 1) | (c6 >>> 31));
          s[4] ^= h;
          s[5] ^= l;
          s[14] ^= h;
          s[15] ^= l;
          s[24] ^= h;
          s[25] ^= l;
          s[34] ^= h;
          s[35] ^= l;
          s[44] ^= h;
          s[45] ^= l;
          h = c4 ^ ((c8 << 1) | (c9 >>> 31));
          l = c5 ^ ((c9 << 1) | (c8 >>> 31));
          s[6] ^= h;
          s[7] ^= l;
          s[16] ^= h;
          s[17] ^= l;
          s[26] ^= h;
          s[27] ^= l;
          s[36] ^= h;
          s[37] ^= l;
          s[46] ^= h;
          s[47] ^= l;
          h = c6 ^ ((c0 << 1) | (c1 >>> 31));
          l = c7 ^ ((c1 << 1) | (c0 >>> 31));
          s[8] ^= h;
          s[9] ^= l;
          s[18] ^= h;
          s[19] ^= l;
          s[28] ^= h;
          s[29] ^= l;
          s[38] ^= h;
          s[39] ^= l;
          s[48] ^= h;
          s[49] ^= l;

          b0 = s[0];
          b1 = s[1];
          b32 = (s[11] << 4) | (s[10] >>> 28);
          b33 = (s[10] << 4) | (s[11] >>> 28);
          b14 = (s[20] << 3) | (s[21] >>> 29);
          b15 = (s[21] << 3) | (s[20] >>> 29);
          b46 = (s[31] << 9) | (s[30] >>> 23);
          b47 = (s[30] << 9) | (s[31] >>> 23);
          b28 = (s[40] << 18) | (s[41] >>> 14);
          b29 = (s[41] << 18) | (s[40] >>> 14);
          b20 = (s[2] << 1) | (s[3] >>> 31);
          b21 = (s[3] << 1) | (s[2] >>> 31);
          b2 = (s[13] << 12) | (s[12] >>> 20);
          b3 = (s[12] << 12) | (s[13] >>> 20);
          b34 = (s[22] << 10) | (s[23] >>> 22);
          b35 = (s[23] << 10) | (s[22] >>> 22);
          b16 = (s[33] << 13) | (s[32] >>> 19);
          b17 = (s[32] << 13) | (s[33] >>> 19);
          b48 = (s[42] << 2) | (s[43] >>> 30);
          b49 = (s[43] << 2) | (s[42] >>> 30);
          b40 = (s[5] << 30) | (s[4] >>> 2);
          b41 = (s[4] << 30) | (s[5] >>> 2);
          b22 = (s[14] << 6) | (s[15] >>> 26);
          b23 = (s[15] << 6) | (s[14] >>> 26);
          b4 = (s[25] << 11) | (s[24] >>> 21);
          b5 = (s[24] << 11) | (s[25] >>> 21);
          b36 = (s[34] << 15) | (s[35] >>> 17);
          b37 = (s[35] << 15) | (s[34] >>> 17);
          b18 = (s[45] << 29) | (s[44] >>> 3);
          b19 = (s[44] << 29) | (s[45] >>> 3);
          b10 = (s[6] << 28) | (s[7] >>> 4);
          b11 = (s[7] << 28) | (s[6] >>> 4);
          b42 = (s[17] << 23) | (s[16] >>> 9);
          b43 = (s[16] << 23) | (s[17] >>> 9);
          b24 = (s[26] << 25) | (s[27] >>> 7);
          b25 = (s[27] << 25) | (s[26] >>> 7);
          b6 = (s[36] << 21) | (s[37] >>> 11);
          b7 = (s[37] << 21) | (s[36] >>> 11);
          b38 = (s[47] << 24) | (s[46] >>> 8);
          b39 = (s[46] << 24) | (s[47] >>> 8);
          b30 = (s[8] << 27) | (s[9] >>> 5);
          b31 = (s[9] << 27) | (s[8] >>> 5);
          b12 = (s[18] << 20) | (s[19] >>> 12);
          b13 = (s[19] << 20) | (s[18] >>> 12);
          b44 = (s[29] << 7) | (s[28] >>> 25);
          b45 = (s[28] << 7) | (s[29] >>> 25);
          b26 = (s[38] << 8) | (s[39] >>> 24);
          b27 = (s[39] << 8) | (s[38] >>> 24);
          b8 = (s[48] << 14) | (s[49] >>> 18);
          b9 = (s[49] << 14) | (s[48] >>> 18);

          s[0] = b0 ^ (~b2 & b4);
          s[1] = b1 ^ (~b3 & b5);
          s[10] = b10 ^ (~b12 & b14);
          s[11] = b11 ^ (~b13 & b15);
          s[20] = b20 ^ (~b22 & b24);
          s[21] = b21 ^ (~b23 & b25);
          s[30] = b30 ^ (~b32 & b34);
          s[31] = b31 ^ (~b33 & b35);
          s[40] = b40 ^ (~b42 & b44);
          s[41] = b41 ^ (~b43 & b45);
          s[2] = b2 ^ (~b4 & b6);
          s[3] = b3 ^ (~b5 & b7);
          s[12] = b12 ^ (~b14 & b16);
          s[13] = b13 ^ (~b15 & b17);
          s[22] = b22 ^ (~b24 & b26);
          s[23] = b23 ^ (~b25 & b27);
          s[32] = b32 ^ (~b34 & b36);
          s[33] = b33 ^ (~b35 & b37);
          s[42] = b42 ^ (~b44 & b46);
          s[43] = b43 ^ (~b45 & b47);
          s[4] = b4 ^ (~b6 & b8);
          s[5] = b5 ^ (~b7 & b9);
          s[14] = b14 ^ (~b16 & b18);
          s[15] = b15 ^ (~b17 & b19);
          s[24] = b24 ^ (~b26 & b28);
          s[25] = b25 ^ (~b27 & b29);
          s[34] = b34 ^ (~b36 & b38);
          s[35] = b35 ^ (~b37 & b39);
          s[44] = b44 ^ (~b46 & b48);
          s[45] = b45 ^ (~b47 & b49);
          s[6] = b6 ^ (~b8 & b0);
          s[7] = b7 ^ (~b9 & b1);
          s[16] = b16 ^ (~b18 & b10);
          s[17] = b17 ^ (~b19 & b11);
          s[26] = b26 ^ (~b28 & b20);
          s[27] = b27 ^ (~b29 & b21);
          s[36] = b36 ^ (~b38 & b30);
          s[37] = b37 ^ (~b39 & b31);
          s[46] = b46 ^ (~b48 & b40);
          s[47] = b47 ^ (~b49 & b41);
          s[8] = b8 ^ (~b0 & b2);
          s[9] = b9 ^ (~b1 & b3);
          s[18] = b18 ^ (~b10 & b12);
          s[19] = b19 ^ (~b11 & b13);
          s[28] = b28 ^ (~b20 & b22);
          s[29] = b29 ^ (~b21 & b23);
          s[38] = b38 ^ (~b30 & b32);
          s[39] = b39 ^ (~b31 & b33);
          s[48] = b48 ^ (~b40 & b42);
          s[49] = b49 ^ (~b41 & b43);

          s[0] ^= RC[n];
          s[1] ^= RC[n + 1];
        }
      };

      if (COMMON_JS) {
        module.exports = methods;
      } else {
        for (i = 0; i < methodNames.length; ++i) {
          root[methodNames[i]] = methods[methodNames[i]];
        }
      }
    })();
    }(sha3$1));

    var sha3 = sha3$1.exports;

    function keccak256(data) {
        return '0x' + sha3.keccak_256(arrayify(data));
    }

    const version$e = "rlp/5.7.0";

    const logger$f = new Logger(version$e);
    function arrayifyInteger(value) {
        const result = [];
        while (value) {
            result.unshift(value & 0xff);
            value >>= 8;
        }
        return result;
    }
    function _encode(object) {
        if (Array.isArray(object)) {
            let payload = [];
            object.forEach(function (child) {
                payload = payload.concat(_encode(child));
            });
            if (payload.length <= 55) {
                payload.unshift(0xc0 + payload.length);
                return payload;
            }
            const length = arrayifyInteger(payload.length);
            length.unshift(0xf7 + length.length);
            return length.concat(payload);
        }
        if (!isBytesLike(object)) {
            logger$f.throwArgumentError("RLP object must be BytesLike", "object", object);
        }
        const data = Array.prototype.slice.call(arrayify(object));
        if (data.length === 1 && data[0] <= 0x7f) {
            return data;
        }
        else if (data.length <= 55) {
            data.unshift(0x80 + data.length);
            return data;
        }
        const length = arrayifyInteger(data.length);
        length.unshift(0xb7 + length.length);
        return length.concat(data);
    }
    function encode(object) {
        return hexlify(_encode(object));
    }

    const version$d = "address/5.7.0";

    const logger$e = new Logger(version$d);
    function getChecksumAddress(address) {
        if (!isHexString(address, 20)) {
            logger$e.throwArgumentError("invalid address", "address", address);
        }
        address = address.toLowerCase();
        const chars = address.substring(2).split("");
        const expanded = new Uint8Array(40);
        for (let i = 0; i < 40; i++) {
            expanded[i] = chars[i].charCodeAt(0);
        }
        const hashed = arrayify(keccak256(expanded));
        for (let i = 0; i < 40; i += 2) {
            if ((hashed[i >> 1] >> 4) >= 8) {
                chars[i] = chars[i].toUpperCase();
            }
            if ((hashed[i >> 1] & 0x0f) >= 8) {
                chars[i + 1] = chars[i + 1].toUpperCase();
            }
        }
        return "0x" + chars.join("");
    }
    // Shims for environments that are missing some required constants and functions
    const MAX_SAFE_INTEGER = 0x1fffffffffffff;
    function log10(x) {
        if (Math.log10) {
            return Math.log10(x);
        }
        return Math.log(x) / Math.LN10;
    }
    // See: https://en.wikipedia.org/wiki/International_Bank_Account_Number
    // Create lookup table
    const ibanLookup = {};
    for (let i = 0; i < 10; i++) {
        ibanLookup[String(i)] = String(i);
    }
    for (let i = 0; i < 26; i++) {
        ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);
    }
    // How many decimal digits can we process? (for 64-bit float, this is 15)
    const safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));
    function ibanChecksum(address) {
        address = address.toUpperCase();
        address = address.substring(4) + address.substring(0, 2) + "00";
        let expanded = address.split("").map((c) => { return ibanLookup[c]; }).join("");
        // Javascript can handle integers safely up to 15 (decimal) digits
        while (expanded.length >= safeDigits) {
            let block = expanded.substring(0, safeDigits);
            expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
        }
        let checksum = String(98 - (parseInt(expanded, 10) % 97));
        while (checksum.length < 2) {
            checksum = "0" + checksum;
        }
        return checksum;
    }
    function getAddress(address) {
        let result = null;
        if (typeof (address) !== "string") {
            logger$e.throwArgumentError("invalid address", "address", address);
        }
        if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
            // Missing the 0x prefix
            if (address.substring(0, 2) !== "0x") {
                address = "0x" + address;
            }
            result = getChecksumAddress(address);
            // It is a checksummed address with a bad checksum
            if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
                logger$e.throwArgumentError("bad address checksum", "address", address);
            }
            // Maybe ICAP? (we only support direct mode)
        }
        else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
            // It is an ICAP address with a bad checksum
            if (address.substring(2, 4) !== ibanChecksum(address)) {
                logger$e.throwArgumentError("bad icap checksum", "address", address);
            }
            result = _base36To16(address.substring(4));
            while (result.length < 40) {
                result = "0" + result;
            }
            result = getChecksumAddress("0x" + result);
        }
        else {
            logger$e.throwArgumentError("invalid address", "address", address);
        }
        return result;
    }

    const version$c = "properties/5.7.0";

    var __awaiter$5 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    const logger$d = new Logger(version$c);
    function defineReadOnly(object, name, value) {
        Object.defineProperty(object, name, {
            enumerable: true,
            value: value,
            writable: false,
        });
    }
    function resolveProperties(object) {
        return __awaiter$5(this, void 0, void 0, function* () {
            const promises = Object.keys(object).map((key) => {
                const value = object[key];
                return Promise.resolve(value).then((v) => ({ key: key, value: v }));
            });
            const results = yield Promise.all(promises);
            return results.reduce((accum, result) => {
                accum[(result.key)] = result.value;
                return accum;
            }, {});
        });
    }
    function checkProperties(object, properties) {
        if (!object || typeof (object) !== "object") {
            logger$d.throwArgumentError("invalid object", "object", object);
        }
        Object.keys(object).forEach((key) => {
            if (!properties[key]) {
                logger$d.throwArgumentError("invalid object key - " + key, "transaction:" + key, object);
            }
        });
    }
    function shallowCopy(object) {
        const result = {};
        for (const key in object) {
            result[key] = object[key];
        }
        return result;
    }
    const opaque = { bigint: true, boolean: true, "function": true, number: true, string: true };
    function _isFrozen(object) {
        // Opaque objects are not mutable, so safe to copy by assignment
        if (object === undefined || object === null || opaque[typeof (object)]) {
            return true;
        }
        if (Array.isArray(object) || typeof (object) === "object") {
            if (!Object.isFrozen(object)) {
                return false;
            }
            const keys = Object.keys(object);
            for (let i = 0; i < keys.length; i++) {
                let value = null;
                try {
                    value = object[keys[i]];
                }
                catch (error) {
                    // If accessing a value triggers an error, it is a getter
                    // designed to do so (e.g. Result) and is therefore "frozen"
                    continue;
                }
                if (!_isFrozen(value)) {
                    return false;
                }
            }
            return true;
        }
        return logger$d.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, "object", object);
    }
    // Returns a new copy of object, such that no properties may be replaced.
    // New properties may be added only to objects.
    function _deepCopy(object) {
        if (_isFrozen(object)) {
            return object;
        }
        // Arrays are mutable, so we need to create a copy
        if (Array.isArray(object)) {
            return Object.freeze(object.map((item) => deepCopy(item)));
        }
        if (typeof (object) === "object") {
            const result = {};
            for (const key in object) {
                const value = object[key];
                if (value === undefined) {
                    continue;
                }
                defineReadOnly(result, key, deepCopy(value));
            }
            return result;
        }
        return logger$d.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, "object", object);
    }
    function deepCopy(object) {
        return _deepCopy(object);
    }
    class Description {
        constructor(info) {
            for (const key in info) {
                this[key] = deepCopy(info[key]);
            }
        }
    }

    const version$b = "abstract-provider/5.7.0";

    var __awaiter$4 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    const logger$c = new Logger(version$b);
    ///////////////////////////////
    // Exported Abstracts
    class Provider {
        constructor() {
            logger$c.checkAbstract(new.target, Provider);
            defineReadOnly(this, "_isProvider", true);
        }
        getFeeData() {
            return __awaiter$4(this, void 0, void 0, function* () {
                const { block, gasPrice } = yield resolveProperties({
                    block: this.getBlock("latest"),
                    gasPrice: this.getGasPrice().catch((error) => {
                        // @TODO: Why is this now failing on Calaveras?
                        //console.log(error);
                        return null;
                    })
                });
                let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;
                if (block && block.baseFeePerGas) {
                    // We may want to compute this more accurately in the future,
                    // using the formula "check if the base fee is correct".
                    // See: https://eips.ethereum.org/EIPS/eip-1559
                    lastBaseFeePerGas = block.baseFeePerGas;
                    maxPriorityFeePerGas = BigNumber.from("1500000000");
                    maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);
                }
                return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };
            });
        }
        // Alias for "on"
        addListener(eventName, listener) {
            return this.on(eventName, listener);
        }
        // Alias for "off"
        removeListener(eventName, listener) {
            return this.off(eventName, listener);
        }
        static isProvider(value) {
            return !!(value && value._isProvider);
        }
    }

    const version$a = "abstract-signer/5.7.0";

    var __awaiter$3 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    const logger$b = new Logger(version$a);
    const allowedTransactionKeys$1 = [
        "accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"
    ];
    const forwardErrors = [
        Logger.errors.INSUFFICIENT_FUNDS,
        Logger.errors.NONCE_EXPIRED,
        Logger.errors.REPLACEMENT_UNDERPRICED,
    ];
    class Signer {
        ///////////////////
        // Sub-classes MUST call super
        constructor() {
            logger$b.checkAbstract(new.target, Signer);
            defineReadOnly(this, "_isSigner", true);
        }
        ///////////////////
        // Sub-classes MAY override these
        getBalance(blockTag) {
            return __awaiter$3(this, void 0, void 0, function* () {
                this._checkProvider("getBalance");
                return yield this.provider.getBalance(this.getAddress(), blockTag);
            });
        }
        getTransactionCount(blockTag) {
            return __awaiter$3(this, void 0, void 0, function* () {
                this._checkProvider("getTransactionCount");
                return yield this.provider.getTransactionCount(this.getAddress(), blockTag);
            });
        }
        // Populates "from" if unspecified, and estimates the gas for the transaction
        estimateGas(transaction) {
            return __awaiter$3(this, void 0, void 0, function* () {
                this._checkProvider("estimateGas");
                const tx = yield resolveProperties(this.checkTransaction(transaction));
                return yield this.provider.estimateGas(tx);
            });
        }
        // Populates "from" if unspecified, and calls with the transaction
        call(transaction, blockTag) {
            return __awaiter$3(this, void 0, void 0, function* () {
                this._checkProvider("call");
                const tx = yield resolveProperties(this.checkTransaction(transaction));
                return yield this.provider.call(tx, blockTag);
            });
        }
        // Populates all fields in a transaction, signs it and sends it to the network
        sendTransaction(transaction) {
            return __awaiter$3(this, void 0, void 0, function* () {
                this._checkProvider("sendTransaction");
                const tx = yield this.populateTransaction(transaction);
                const signedTx = yield this.signTransaction(tx);
                return yield this.provider.sendTransaction(signedTx);
            });
        }
        getChainId() {
            return __awaiter$3(this, void 0, void 0, function* () {
                this._checkProvider("getChainId");
                const network = yield this.provider.getNetwork();
                return network.chainId;
            });
        }
        getGasPrice() {
            return __awaiter$3(this, void 0, void 0, function* () {
                this._checkProvider("getGasPrice");
                return yield this.provider.getGasPrice();
            });
        }
        getFeeData() {
            return __awaiter$3(this, void 0, void 0, function* () {
                this._checkProvider("getFeeData");
                return yield this.provider.getFeeData();
            });
        }
        resolveName(name) {
            return __awaiter$3(this, void 0, void 0, function* () {
                this._checkProvider("resolveName");
                return yield this.provider.resolveName(name);
            });
        }
        // Checks a transaction does not contain invalid keys and if
        // no "from" is provided, populates it.
        // - does NOT require a provider
        // - adds "from" is not present
        // - returns a COPY (safe to mutate the result)
        // By default called from: (overriding these prevents it)
        //   - call
        //   - estimateGas
        //   - populateTransaction (and therefor sendTransaction)
        checkTransaction(transaction) {
            for (const key in transaction) {
                if (allowedTransactionKeys$1.indexOf(key) === -1) {
                    logger$b.throwArgumentError("invalid transaction key: " + key, "transaction", transaction);
                }
            }
            const tx = shallowCopy(transaction);
            if (tx.from == null) {
                tx.from = this.getAddress();
            }
            else {
                // Make sure any provided address matches this signer
                tx.from = Promise.all([
                    Promise.resolve(tx.from),
                    this.getAddress()
                ]).then((result) => {
                    if (result[0].toLowerCase() !== result[1].toLowerCase()) {
                        logger$b.throwArgumentError("from address mismatch", "transaction", transaction);
                    }
                    return result[0];
                });
            }
            return tx;
        }
        // Populates ALL keys for a transaction and checks that "from" matches
        // this Signer. Should be used by sendTransaction but NOT by signTransaction.
        // By default called from: (overriding these prevents it)
        //   - sendTransaction
        //
        // Notes:
        //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas
        populateTransaction(transaction) {
            return __awaiter$3(this, void 0, void 0, function* () {
                const tx = yield resolveProperties(this.checkTransaction(transaction));
                if (tx.to != null) {
                    tx.to = Promise.resolve(tx.to).then((to) => __awaiter$3(this, void 0, void 0, function* () {
                        if (to == null) {
                            return null;
                        }
                        const address = yield this.resolveName(to);
                        if (address == null) {
                            logger$b.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                        }
                        return address;
                    }));
                    // Prevent this error from causing an UnhandledPromiseException
                    tx.to.catch((error) => { });
                }
                // Do not allow mixing pre-eip-1559 and eip-1559 properties
                const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);
                if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {
                    logger$b.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction);
                }
                else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {
                    logger$b.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction);
                }
                if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {
                    // Fully-formed EIP-1559 transaction (skip getFeeData)
                    tx.type = 2;
                }
                else if (tx.type === 0 || tx.type === 1) {
                    // Explicit Legacy or EIP-2930 transaction
                    // Populate missing gasPrice
                    if (tx.gasPrice == null) {
                        tx.gasPrice = this.getGasPrice();
                    }
                }
                else {
                    // We need to get fee data to determine things
                    const feeData = yield this.getFeeData();
                    if (tx.type == null) {
                        // We need to auto-detect the intended type of this transaction...
                        if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {
                            // The network supports EIP-1559!
                            // Upgrade transaction from null to eip-1559
                            tx.type = 2;
                            if (tx.gasPrice != null) {
                                // Using legacy gasPrice property on an eip-1559 network,
                                // so use gasPrice as both fee properties
                                const gasPrice = tx.gasPrice;
                                delete tx.gasPrice;
                                tx.maxFeePerGas = gasPrice;
                                tx.maxPriorityFeePerGas = gasPrice;
                            }
                            else {
                                // Populate missing fee data
                                if (tx.maxFeePerGas == null) {
                                    tx.maxFeePerGas = feeData.maxFeePerGas;
                                }
                                if (tx.maxPriorityFeePerGas == null) {
                                    tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                                }
                            }
                        }
                        else if (feeData.gasPrice != null) {
                            // Network doesn't support EIP-1559...
                            // ...but they are trying to use EIP-1559 properties
                            if (hasEip1559) {
                                logger$b.throwError("network does not support EIP-1559", Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: "populateTransaction"
                                });
                            }
                            // Populate missing fee data
                            if (tx.gasPrice == null) {
                                tx.gasPrice = feeData.gasPrice;
                            }
                            // Explicitly set untyped transaction to legacy
                            tx.type = 0;
                        }
                        else {
                            // getFeeData has failed us.
                            logger$b.throwError("failed to get consistent fee data", Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "signer.getFeeData"
                            });
                        }
                    }
                    else if (tx.type === 2) {
                        // Explicitly using EIP-1559
                        // Populate missing fee data
                        if (tx.maxFeePerGas == null) {
                            tx.maxFeePerGas = feeData.maxFeePerGas;
                        }
                        if (tx.maxPriorityFeePerGas == null) {
                            tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                        }
                    }
                }
                if (tx.nonce == null) {
                    tx.nonce = this.getTransactionCount("pending");
                }
                if (tx.gasLimit == null) {
                    tx.gasLimit = this.estimateGas(tx).catch((error) => {
                        if (forwardErrors.indexOf(error.code) >= 0) {
                            throw error;
                        }
                        return logger$b.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                            error: error,
                            tx: tx
                        });
                    });
                }
                if (tx.chainId == null) {
                    tx.chainId = this.getChainId();
                }
                else {
                    tx.chainId = Promise.all([
                        Promise.resolve(tx.chainId),
                        this.getChainId()
                    ]).then((results) => {
                        if (results[1] !== 0 && results[0] !== results[1]) {
                            logger$b.throwArgumentError("chainId address mismatch", "transaction", transaction);
                        }
                        return results[0];
                    });
                }
                return yield resolveProperties(tx);
            });
        }
        ///////////////////
        // Sub-classes SHOULD leave these alone
        _checkProvider(operation) {
            if (!this.provider) {
                logger$b.throwError("missing provider", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: (operation || "_checkProvider")
                });
            }
        }
        static isSigner(value) {
            return !!(value && value._isSigner);
        }
    }

    const version$9 = "strings/5.7.0";

    const logger$a = new Logger(version$9);
    ///////////////////////////////
    var UnicodeNormalizationForm;
    (function (UnicodeNormalizationForm) {
        UnicodeNormalizationForm["current"] = "";
        UnicodeNormalizationForm["NFC"] = "NFC";
        UnicodeNormalizationForm["NFD"] = "NFD";
        UnicodeNormalizationForm["NFKC"] = "NFKC";
        UnicodeNormalizationForm["NFKD"] = "NFKD";
    })(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));
    var Utf8ErrorReason;
    (function (Utf8ErrorReason) {
        // A continuation byte was present where there was nothing to continue
        // - offset = the index the codepoint began in
        Utf8ErrorReason["UNEXPECTED_CONTINUE"] = "unexpected continuation byte";
        // An invalid (non-continuation) byte to start a UTF-8 codepoint was found
        // - offset = the index the codepoint began in
        Utf8ErrorReason["BAD_PREFIX"] = "bad codepoint prefix";
        // The string is too short to process the expected codepoint
        // - offset = the index the codepoint began in
        Utf8ErrorReason["OVERRUN"] = "string overrun";
        // A missing continuation byte was expected but not found
        // - offset = the index the continuation byte was expected at
        Utf8ErrorReason["MISSING_CONTINUE"] = "missing continuation byte";
        // The computed code point is outside the range for UTF-8
        // - offset       = start of this codepoint
        // - badCodepoint = the computed codepoint; outside the UTF-8 range
        Utf8ErrorReason["OUT_OF_RANGE"] = "out of UTF-8 range";
        // UTF-8 strings may not contain UTF-16 surrogate pairs
        // - offset       = start of this codepoint
        // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range
        Utf8ErrorReason["UTF16_SURROGATE"] = "UTF-16 surrogate";
        // The string is an overlong representation
        // - offset       = start of this codepoint
        // - badCodepoint = the computed codepoint; already bounds checked
        Utf8ErrorReason["OVERLONG"] = "overlong representation";
    })(Utf8ErrorReason || (Utf8ErrorReason = {}));
    function errorFunc(reason, offset, bytes, output, badCodepoint) {
        return logger$a.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes);
    }
    function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
        // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes
        if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {
            let i = 0;
            for (let o = offset + 1; o < bytes.length; o++) {
                if (bytes[o] >> 6 !== 0x02) {
                    break;
                }
                i++;
            }
            return i;
        }
        // This byte runs us past the end of the string, so just jump to the end
        // (but the first byte was read already read and therefore skipped)
        if (reason === Utf8ErrorReason.OVERRUN) {
            return bytes.length - offset - 1;
        }
        // Nothing to skip
        return 0;
    }
    function replaceFunc(reason, offset, bytes, output, badCodepoint) {
        // Overlong representations are otherwise "valid" code points; just non-deistingtished
        if (reason === Utf8ErrorReason.OVERLONG) {
            output.push(badCodepoint);
            return 0;
        }
        // Put the replacement character into the output
        output.push(0xfffd);
        // Otherwise, process as if ignoring errors
        return ignoreFunc(reason, offset, bytes);
    }
    // Common error handing strategies
    Object.freeze({
        error: errorFunc,
        ignore: ignoreFunc,
        replace: replaceFunc
    });
    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array
    function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {
        if (form != UnicodeNormalizationForm.current) {
            logger$a.checkNormalize();
            str = str.normalize(form);
        }
        let result = [];
        for (let i = 0; i < str.length; i++) {
            const c = str.charCodeAt(i);
            if (c < 0x80) {
                result.push(c);
            }
            else if (c < 0x800) {
                result.push((c >> 6) | 0xc0);
                result.push((c & 0x3f) | 0x80);
            }
            else if ((c & 0xfc00) == 0xd800) {
                i++;
                const c2 = str.charCodeAt(i);
                if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {
                    throw new Error("invalid utf-8 string");
                }
                // Surrogate Pair
                const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);
                result.push((pair >> 18) | 0xf0);
                result.push(((pair >> 12) & 0x3f) | 0x80);
                result.push(((pair >> 6) & 0x3f) | 0x80);
                result.push((pair & 0x3f) | 0x80);
            }
            else {
                result.push((c >> 12) | 0xe0);
                result.push(((c >> 6) & 0x3f) | 0x80);
                result.push((c & 0x3f) | 0x80);
            }
        }
        return arrayify(result);
    }

    function id(text) {
        return keccak256(toUtf8Bytes(text));
    }

    const version$8 = "hash/5.7.0";

    const messagePrefix = "\x19Ethereum Signed Message:\n";
    function hashMessage(message) {
        if (typeof (message) === "string") {
            message = toUtf8Bytes(message);
        }
        return keccak256(concat([
            toUtf8Bytes(messagePrefix),
            toUtf8Bytes(String(message.length)),
            message
        ]));
    }

    var __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    const logger$9 = new Logger(version$8);
    const padding = new Uint8Array(32);
    padding.fill(0);
    const NegativeOne = BigNumber.from(-1);
    const Zero = BigNumber.from(0);
    const One = BigNumber.from(1);
    const MaxUint256 = BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
    function hexPadRight(value) {
        const bytes = arrayify(value);
        const padOffset = bytes.length % 32;
        if (padOffset) {
            return hexConcat([bytes, padding.slice(padOffset)]);
        }
        return hexlify(bytes);
    }
    const hexTrue = hexZeroPad(One.toHexString(), 32);
    const hexFalse = hexZeroPad(Zero.toHexString(), 32);
    const domainFieldTypes = {
        name: "string",
        version: "string",
        chainId: "uint256",
        verifyingContract: "address",
        salt: "bytes32"
    };
    const domainFieldNames = [
        "name", "version", "chainId", "verifyingContract", "salt"
    ];
    function checkString(key) {
        return function (value) {
            if (typeof (value) !== "string") {
                logger$9.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);
            }
            return value;
        };
    }
    const domainChecks = {
        name: checkString("name"),
        version: checkString("version"),
        chainId: function (value) {
            try {
                return BigNumber.from(value).toString();
            }
            catch (error) { }
            return logger$9.throwArgumentError(`invalid domain value for "chainId"`, "domain.chainId", value);
        },
        verifyingContract: function (value) {
            try {
                return getAddress(value).toLowerCase();
            }
            catch (error) { }
            return logger$9.throwArgumentError(`invalid domain value "verifyingContract"`, "domain.verifyingContract", value);
        },
        salt: function (value) {
            try {
                const bytes = arrayify(value);
                if (bytes.length !== 32) {
                    throw new Error("bad length");
                }
                return hexlify(bytes);
            }
            catch (error) { }
            return logger$9.throwArgumentError(`invalid domain value "salt"`, "domain.salt", value);
        }
    };
    function getBaseEncoder(type) {
        // intXX and uintXX
        {
            const match = type.match(/^(u?)int(\d*)$/);
            if (match) {
                const signed = (match[1] === "");
                const width = parseInt(match[2] || "256");
                if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {
                    logger$9.throwArgumentError("invalid numeric width", "type", type);
                }
                const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);
                const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;
                return function (value) {
                    const v = BigNumber.from(value);
                    if (v.lt(boundsLower) || v.gt(boundsUpper)) {
                        logger$9.throwArgumentError(`value out-of-bounds for ${type}`, "value", value);
                    }
                    return hexZeroPad(v.toTwos(256).toHexString(), 32);
                };
            }
        }
        // bytesXX
        {
            const match = type.match(/^bytes(\d+)$/);
            if (match) {
                const width = parseInt(match[1]);
                if (width === 0 || width > 32 || match[1] !== String(width)) {
                    logger$9.throwArgumentError("invalid bytes width", "type", type);
                }
                return function (value) {
                    const bytes = arrayify(value);
                    if (bytes.length !== width) {
                        logger$9.throwArgumentError(`invalid length for ${type}`, "value", value);
                    }
                    return hexPadRight(value);
                };
            }
        }
        switch (type) {
            case "address": return function (value) {
                return hexZeroPad(getAddress(value), 32);
            };
            case "bool": return function (value) {
                return ((!value) ? hexFalse : hexTrue);
            };
            case "bytes": return function (value) {
                return keccak256(value);
            };
            case "string": return function (value) {
                return id(value);
            };
        }
        return null;
    }
    function encodeType(name, fields) {
        return `${name}(${fields.map(({ name, type }) => (type + " " + name)).join(",")})`;
    }
    class TypedDataEncoder {
        constructor(types) {
            defineReadOnly(this, "types", Object.freeze(deepCopy(types)));
            defineReadOnly(this, "_encoderCache", {});
            defineReadOnly(this, "_types", {});
            // Link struct types to their direct child structs
            const links = {};
            // Link structs to structs which contain them as a child
            const parents = {};
            // Link all subtypes within a given struct
            const subtypes = {};
            Object.keys(types).forEach((type) => {
                links[type] = {};
                parents[type] = [];
                subtypes[type] = {};
            });
            for (const name in types) {
                const uniqueNames = {};
                types[name].forEach((field) => {
                    // Check each field has a unique name
                    if (uniqueNames[field.name]) {
                        logger$9.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, "types", types);
                    }
                    uniqueNames[field.name] = true;
                    // Get the base type (drop any array specifiers)
                    const baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                    if (baseType === name) {
                        logger$9.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, "types", types);
                    }
                    // Is this a base encoding type?
                    const encoder = getBaseEncoder(baseType);
                    if (encoder) {
                        return;
                    }
                    if (!parents[baseType]) {
                        logger$9.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, "types", types);
                    }
                    // Add linkage
                    parents[baseType].push(name);
                    links[name][baseType] = true;
                });
            }
            // Deduce the primary type
            const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));
            if (primaryTypes.length === 0) {
                logger$9.throwArgumentError("missing primary type", "types", types);
            }
            else if (primaryTypes.length > 1) {
                logger$9.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(", ")}`, "types", types);
            }
            defineReadOnly(this, "primaryType", primaryTypes[0]);
            // Check for circular type references
            function checkCircular(type, found) {
                if (found[type]) {
                    logger$9.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, "types", types);
                }
                found[type] = true;
                Object.keys(links[type]).forEach((child) => {
                    if (!parents[child]) {
                        return;
                    }
                    // Recursively check children
                    checkCircular(child, found);
                    // Mark all ancestors as having this decendant
                    Object.keys(found).forEach((subtype) => {
                        subtypes[subtype][child] = true;
                    });
                });
                delete found[type];
            }
            checkCircular(this.primaryType, {});
            // Compute each fully describe type
            for (const name in subtypes) {
                const st = Object.keys(subtypes[name]);
                st.sort();
                this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join("");
            }
        }
        getEncoder(type) {
            let encoder = this._encoderCache[type];
            if (!encoder) {
                encoder = this._encoderCache[type] = this._getEncoder(type);
            }
            return encoder;
        }
        _getEncoder(type) {
            // Basic encoder type (address, bool, uint256, etc)
            {
                const encoder = getBaseEncoder(type);
                if (encoder) {
                    return encoder;
                }
            }
            // Array
            const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
            if (match) {
                const subtype = match[1];
                const subEncoder = this.getEncoder(subtype);
                const length = parseInt(match[3]);
                return (value) => {
                    if (length >= 0 && value.length !== length) {
                        logger$9.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
                    }
                    let result = value.map(subEncoder);
                    if (this._types[subtype]) {
                        result = result.map(keccak256);
                    }
                    return keccak256(hexConcat(result));
                };
            }
            // Struct
            const fields = this.types[type];
            if (fields) {
                const encodedType = id(this._types[type]);
                return (value) => {
                    const values = fields.map(({ name, type }) => {
                        const result = this.getEncoder(type)(value[name]);
                        if (this._types[type]) {
                            return keccak256(result);
                        }
                        return result;
                    });
                    values.unshift(encodedType);
                    return hexConcat(values);
                };
            }
            return logger$9.throwArgumentError(`unknown type: ${type}`, "type", type);
        }
        encodeType(name) {
            const result = this._types[name];
            if (!result) {
                logger$9.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, "name", name);
            }
            return result;
        }
        encodeData(type, value) {
            return this.getEncoder(type)(value);
        }
        hashStruct(name, value) {
            return keccak256(this.encodeData(name, value));
        }
        encode(value) {
            return this.encodeData(this.primaryType, value);
        }
        hash(value) {
            return this.hashStruct(this.primaryType, value);
        }
        _visit(type, value, callback) {
            // Basic encoder type (address, bool, uint256, etc)
            {
                const encoder = getBaseEncoder(type);
                if (encoder) {
                    return callback(type, value);
                }
            }
            // Array
            const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
            if (match) {
                const subtype = match[1];
                const length = parseInt(match[3]);
                if (length >= 0 && value.length !== length) {
                    logger$9.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
                }
                return value.map((v) => this._visit(subtype, v, callback));
            }
            // Struct
            const fields = this.types[type];
            if (fields) {
                return fields.reduce((accum, { name, type }) => {
                    accum[name] = this._visit(type, value[name], callback);
                    return accum;
                }, {});
            }
            return logger$9.throwArgumentError(`unknown type: ${type}`, "type", type);
        }
        visit(value, callback) {
            return this._visit(this.primaryType, value, callback);
        }
        static from(types) {
            return new TypedDataEncoder(types);
        }
        static getPrimaryType(types) {
            return TypedDataEncoder.from(types).primaryType;
        }
        static hashStruct(name, types, value) {
            return TypedDataEncoder.from(types).hashStruct(name, value);
        }
        static hashDomain(domain) {
            const domainFields = [];
            for (const name in domain) {
                const type = domainFieldTypes[name];
                if (!type) {
                    logger$9.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, "domain", domain);
                }
                domainFields.push({ name, type });
            }
            domainFields.sort((a, b) => {
                return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);
            });
            return TypedDataEncoder.hashStruct("EIP712Domain", { EIP712Domain: domainFields }, domain);
        }
        static encode(domain, types, value) {
            return hexConcat([
                "0x1901",
                TypedDataEncoder.hashDomain(domain),
                TypedDataEncoder.from(types).hash(value)
            ]);
        }
        static hash(domain, types, value) {
            return keccak256(TypedDataEncoder.encode(domain, types, value));
        }
        // Replaces all address types with ENS names with their looked up address
        static resolveNames(domain, types, value, resolveName) {
            return __awaiter$2(this, void 0, void 0, function* () {
                // Make a copy to isolate it from the object passed in
                domain = shallowCopy(domain);
                // Look up all ENS names
                const ensCache = {};
                // Do we need to look up the domain's verifyingContract?
                if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {
                    ensCache[domain.verifyingContract] = "0x";
                }
                // We are going to use the encoder to visit all the base values
                const encoder = TypedDataEncoder.from(types);
                // Get a list of all the addresses
                encoder.visit(value, (type, value) => {
                    if (type === "address" && !isHexString(value, 20)) {
                        ensCache[value] = "0x";
                    }
                    return value;
                });
                // Lookup each name
                for (const name in ensCache) {
                    ensCache[name] = yield resolveName(name);
                }
                // Replace the domain verifyingContract if needed
                if (domain.verifyingContract && ensCache[domain.verifyingContract]) {
                    domain.verifyingContract = ensCache[domain.verifyingContract];
                }
                // Replace all ENS names with their address
                value = encoder.visit(value, (type, value) => {
                    if (type === "address" && ensCache[value]) {
                        return ensCache[value];
                    }
                    return value;
                });
                return { domain, value };
            });
        }
        static getPayload(domain, types, value) {
            // Validate the domain fields
            TypedDataEncoder.hashDomain(domain);
            // Derive the EIP712Domain Struct reference type
            const domainValues = {};
            const domainTypes = [];
            domainFieldNames.forEach((name) => {
                const value = domain[name];
                if (value == null) {
                    return;
                }
                domainValues[name] = domainChecks[name](value);
                domainTypes.push({ name, type: domainFieldTypes[name] });
            });
            const encoder = TypedDataEncoder.from(types);
            const typesWithDomain = shallowCopy(types);
            if (typesWithDomain.EIP712Domain) {
                logger$9.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
            }
            else {
                typesWithDomain.EIP712Domain = domainTypes;
            }
            // Validate the data structures and types
            encoder.encode(value);
            return {
                types: typesWithDomain,
                domain: domainValues,
                primaryType: encoder.primaryType,
                message: encoder.visit(value, (type, value) => {
                    // bytes
                    if (type.match(/^bytes(\d*)/)) {
                        return hexlify(arrayify(value));
                    }
                    // uint or int
                    if (type.match(/^u?int/)) {
                        return BigNumber.from(value).toString();
                    }
                    switch (type) {
                        case "address":
                            return value.toLowerCase();
                        case "bool":
                            return !!value;
                        case "string":
                            if (typeof (value) !== "string") {
                                logger$9.throwArgumentError(`invalid string`, "value", value);
                            }
                            return value;
                    }
                    return logger$9.throwArgumentError("unsupported type", "type", type);
                })
            };
        }
    }

    /**
     * var basex = require("base-x");
     *
     * This implementation is heavily based on base-x. The main reason to
     * deviate was to prevent the dependency of Buffer.
     *
     * Contributors:
     *
     * base-x encoding
     * Forked from https://github.com/cryptocoinjs/bs58
     * Originally written by Mike Hearn for BitcoinJ
     * Copyright (c) 2011 Google Inc
     * Ported to JavaScript by Stefan Thomas
     * Merged Buffer refactorings from base58-native by Stephen Pair
     * Copyright (c) 2013 BitPay Inc
     *
     * The MIT License (MIT)
     *
     * Copyright base-x contributors (c) 2016
     *
     * Permission is hereby granted, free of charge, to any person obtaining a
     * copy of this software and associated documentation files (the "Software"),
     * to deal in the Software without restriction, including without limitation
     * the rights to use, copy, modify, merge, publish, distribute, sublicense,
     * and/or sell copies of the Software, and to permit persons to whom the
     * Software is furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.

     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
     * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
     * IN THE SOFTWARE.
     *
     */
    class BaseX {
        constructor(alphabet) {
            defineReadOnly(this, "alphabet", alphabet);
            defineReadOnly(this, "base", alphabet.length);
            defineReadOnly(this, "_alphabetMap", {});
            defineReadOnly(this, "_leader", alphabet.charAt(0));
            // pre-compute lookup table
            for (let i = 0; i < alphabet.length; i++) {
                this._alphabetMap[alphabet.charAt(i)] = i;
            }
        }
        encode(value) {
            let source = arrayify(value);
            if (source.length === 0) {
                return "";
            }
            let digits = [0];
            for (let i = 0; i < source.length; ++i) {
                let carry = source[i];
                for (let j = 0; j < digits.length; ++j) {
                    carry += digits[j] << 8;
                    digits[j] = carry % this.base;
                    carry = (carry / this.base) | 0;
                }
                while (carry > 0) {
                    digits.push(carry % this.base);
                    carry = (carry / this.base) | 0;
                }
            }
            let string = "";
            // deal with leading zeros
            for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {
                string += this._leader;
            }
            // convert digits to a string
            for (let q = digits.length - 1; q >= 0; --q) {
                string += this.alphabet[digits[q]];
            }
            return string;
        }
        decode(value) {
            if (typeof (value) !== "string") {
                throw new TypeError("Expected String");
            }
            let bytes = [];
            if (value.length === 0) {
                return new Uint8Array(bytes);
            }
            bytes.push(0);
            for (let i = 0; i < value.length; i++) {
                let byte = this._alphabetMap[value[i]];
                if (byte === undefined) {
                    throw new Error("Non-base" + this.base + " character");
                }
                let carry = byte;
                for (let j = 0; j < bytes.length; ++j) {
                    carry += bytes[j] * this.base;
                    bytes[j] = carry & 0xff;
                    carry >>= 8;
                }
                while (carry > 0) {
                    bytes.push(carry & 0xff);
                    carry >>= 8;
                }
            }
            // deal with leading zeros
            for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {
                bytes.push(0);
            }
            return arrayify(new Uint8Array(bytes.reverse()));
        }
    }
    new BaseX("abcdefghijklmnopqrstuvwxyz234567");
    const Base58 = new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");
    //console.log(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj"))
    //console.log(Base58.encode(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj")))

    var hash$1 = {};

    var utils$9 = {};

    var minimalisticAssert$1 = assert$b;

    function assert$b(val, msg) {
      if (!val)
        throw new Error(msg || 'Assertion failed');
    }

    assert$b.equal = function assertEqual(l, r, msg) {
      if (l != r)
        throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
    };

    var inherits$1 = {exports: {}};

    var inherits_browser$1 = {exports: {}};

    if (typeof Object.create === 'function') {
      // implementation from standard node.js 'util' module
      inherits_browser$1.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      // old school shim for old browsers
      inherits_browser$1.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function () {};
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }

    try {
      var util$6 = require('util');
      /* istanbul ignore next */
      if (typeof util$6.inherits !== 'function') throw '';
      inherits$1.exports = util$6.inherits;
    } catch (e) {
      /* istanbul ignore next */
      inherits$1.exports = inherits_browser$1.exports;
    }

    var assert$a = minimalisticAssert$1;
    var inherits = inherits$1.exports;

    utils$9.inherits = inherits;

    function isSurrogatePair(msg, i) {
      if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
        return false;
      }
      if (i < 0 || i + 1 >= msg.length) {
        return false;
      }
      return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
    }

    function toArray(msg, enc) {
      if (Array.isArray(msg))
        return msg.slice();
      if (!msg)
        return [];
      var res = [];
      if (typeof msg === 'string') {
        if (!enc) {
          // Inspired by stringToUtf8ByteArray() in closure-library by Google
          // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
          // Apache License 2.0
          // https://github.com/google/closure-library/blob/master/LICENSE
          var p = 0;
          for (var i = 0; i < msg.length; i++) {
            var c = msg.charCodeAt(i);
            if (c < 128) {
              res[p++] = c;
            } else if (c < 2048) {
              res[p++] = (c >> 6) | 192;
              res[p++] = (c & 63) | 128;
            } else if (isSurrogatePair(msg, i)) {
              c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
              res[p++] = (c >> 18) | 240;
              res[p++] = ((c >> 12) & 63) | 128;
              res[p++] = ((c >> 6) & 63) | 128;
              res[p++] = (c & 63) | 128;
            } else {
              res[p++] = (c >> 12) | 224;
              res[p++] = ((c >> 6) & 63) | 128;
              res[p++] = (c & 63) | 128;
            }
          }
        } else if (enc === 'hex') {
          msg = msg.replace(/[^a-z0-9]+/ig, '');
          if (msg.length % 2 !== 0)
            msg = '0' + msg;
          for (i = 0; i < msg.length; i += 2)
            res.push(parseInt(msg[i] + msg[i + 1], 16));
        }
      } else {
        for (i = 0; i < msg.length; i++)
          res[i] = msg[i] | 0;
      }
      return res;
    }
    utils$9.toArray = toArray;

    function toHex(msg) {
      var res = '';
      for (var i = 0; i < msg.length; i++)
        res += zero2(msg[i].toString(16));
      return res;
    }
    utils$9.toHex = toHex;

    function htonl(w) {
      var res = (w >>> 24) |
                ((w >>> 8) & 0xff00) |
                ((w << 8) & 0xff0000) |
                ((w & 0xff) << 24);
      return res >>> 0;
    }
    utils$9.htonl = htonl;

    function toHex32(msg, endian) {
      var res = '';
      for (var i = 0; i < msg.length; i++) {
        var w = msg[i];
        if (endian === 'little')
          w = htonl(w);
        res += zero8(w.toString(16));
      }
      return res;
    }
    utils$9.toHex32 = toHex32;

    function zero2(word) {
      if (word.length === 1)
        return '0' + word;
      else
        return word;
    }
    utils$9.zero2 = zero2;

    function zero8(word) {
      if (word.length === 7)
        return '0' + word;
      else if (word.length === 6)
        return '00' + word;
      else if (word.length === 5)
        return '000' + word;
      else if (word.length === 4)
        return '0000' + word;
      else if (word.length === 3)
        return '00000' + word;
      else if (word.length === 2)
        return '000000' + word;
      else if (word.length === 1)
        return '0000000' + word;
      else
        return word;
    }
    utils$9.zero8 = zero8;

    function join32(msg, start, end, endian) {
      var len = end - start;
      assert$a(len % 4 === 0);
      var res = new Array(len / 4);
      for (var i = 0, k = start; i < res.length; i++, k += 4) {
        var w;
        if (endian === 'big')
          w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
        else
          w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
        res[i] = w >>> 0;
      }
      return res;
    }
    utils$9.join32 = join32;

    function split32(msg, endian) {
      var res = new Array(msg.length * 4);
      for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
        var m = msg[i];
        if (endian === 'big') {
          res[k] = m >>> 24;
          res[k + 1] = (m >>> 16) & 0xff;
          res[k + 2] = (m >>> 8) & 0xff;
          res[k + 3] = m & 0xff;
        } else {
          res[k + 3] = m >>> 24;
          res[k + 2] = (m >>> 16) & 0xff;
          res[k + 1] = (m >>> 8) & 0xff;
          res[k] = m & 0xff;
        }
      }
      return res;
    }
    utils$9.split32 = split32;

    function rotr32$1(w, b) {
      return (w >>> b) | (w << (32 - b));
    }
    utils$9.rotr32 = rotr32$1;

    function rotl32$2(w, b) {
      return (w << b) | (w >>> (32 - b));
    }
    utils$9.rotl32 = rotl32$2;

    function sum32$3(a, b) {
      return (a + b) >>> 0;
    }
    utils$9.sum32 = sum32$3;

    function sum32_3$1(a, b, c) {
      return (a + b + c) >>> 0;
    }
    utils$9.sum32_3 = sum32_3$1;

    function sum32_4$2(a, b, c, d) {
      return (a + b + c + d) >>> 0;
    }
    utils$9.sum32_4 = sum32_4$2;

    function sum32_5$2(a, b, c, d, e) {
      return (a + b + c + d + e) >>> 0;
    }
    utils$9.sum32_5 = sum32_5$2;

    function sum64$1(buf, pos, ah, al) {
      var bh = buf[pos];
      var bl = buf[pos + 1];

      var lo = (al + bl) >>> 0;
      var hi = (lo < al ? 1 : 0) + ah + bh;
      buf[pos] = hi >>> 0;
      buf[pos + 1] = lo;
    }
    utils$9.sum64 = sum64$1;

    function sum64_hi$1(ah, al, bh, bl) {
      var lo = (al + bl) >>> 0;
      var hi = (lo < al ? 1 : 0) + ah + bh;
      return hi >>> 0;
    }
    utils$9.sum64_hi = sum64_hi$1;

    function sum64_lo$1(ah, al, bh, bl) {
      var lo = al + bl;
      return lo >>> 0;
    }
    utils$9.sum64_lo = sum64_lo$1;

    function sum64_4_hi$1(ah, al, bh, bl, ch, cl, dh, dl) {
      var carry = 0;
      var lo = al;
      lo = (lo + bl) >>> 0;
      carry += lo < al ? 1 : 0;
      lo = (lo + cl) >>> 0;
      carry += lo < cl ? 1 : 0;
      lo = (lo + dl) >>> 0;
      carry += lo < dl ? 1 : 0;

      var hi = ah + bh + ch + dh + carry;
      return hi >>> 0;
    }
    utils$9.sum64_4_hi = sum64_4_hi$1;

    function sum64_4_lo$1(ah, al, bh, bl, ch, cl, dh, dl) {
      var lo = al + bl + cl + dl;
      return lo >>> 0;
    }
    utils$9.sum64_4_lo = sum64_4_lo$1;

    function sum64_5_hi$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
      var carry = 0;
      var lo = al;
      lo = (lo + bl) >>> 0;
      carry += lo < al ? 1 : 0;
      lo = (lo + cl) >>> 0;
      carry += lo < cl ? 1 : 0;
      lo = (lo + dl) >>> 0;
      carry += lo < dl ? 1 : 0;
      lo = (lo + el) >>> 0;
      carry += lo < el ? 1 : 0;

      var hi = ah + bh + ch + dh + eh + carry;
      return hi >>> 0;
    }
    utils$9.sum64_5_hi = sum64_5_hi$1;

    function sum64_5_lo$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
      var lo = al + bl + cl + dl + el;

      return lo >>> 0;
    }
    utils$9.sum64_5_lo = sum64_5_lo$1;

    function rotr64_hi$1(ah, al, num) {
      var r = (al << (32 - num)) | (ah >>> num);
      return r >>> 0;
    }
    utils$9.rotr64_hi = rotr64_hi$1;

    function rotr64_lo$1(ah, al, num) {
      var r = (ah << (32 - num)) | (al >>> num);
      return r >>> 0;
    }
    utils$9.rotr64_lo = rotr64_lo$1;

    function shr64_hi$1(ah, al, num) {
      return ah >>> num;
    }
    utils$9.shr64_hi = shr64_hi$1;

    function shr64_lo$1(ah, al, num) {
      var r = (ah << (32 - num)) | (al >>> num);
      return r >>> 0;
    }
    utils$9.shr64_lo = shr64_lo$1;

    var common$5 = {};

    var utils$8 = utils$9;
    var assert$9 = minimalisticAssert$1;

    function BlockHash$4() {
      this.pending = null;
      this.pendingTotal = 0;
      this.blockSize = this.constructor.blockSize;
      this.outSize = this.constructor.outSize;
      this.hmacStrength = this.constructor.hmacStrength;
      this.padLength = this.constructor.padLength / 8;
      this.endian = 'big';

      this._delta8 = this.blockSize / 8;
      this._delta32 = this.blockSize / 32;
    }
    common$5.BlockHash = BlockHash$4;

    BlockHash$4.prototype.update = function update(msg, enc) {
      // Convert message to array, pad it, and join into 32bit blocks
      msg = utils$8.toArray(msg, enc);
      if (!this.pending)
        this.pending = msg;
      else
        this.pending = this.pending.concat(msg);
      this.pendingTotal += msg.length;

      // Enough data, try updating
      if (this.pending.length >= this._delta8) {
        msg = this.pending;

        // Process pending data in blocks
        var r = msg.length % this._delta8;
        this.pending = msg.slice(msg.length - r, msg.length);
        if (this.pending.length === 0)
          this.pending = null;

        msg = utils$8.join32(msg, 0, msg.length - r, this.endian);
        for (var i = 0; i < msg.length; i += this._delta32)
          this._update(msg, i, i + this._delta32);
      }

      return this;
    };

    BlockHash$4.prototype.digest = function digest(enc) {
      this.update(this._pad());
      assert$9(this.pending === null);

      return this._digest(enc);
    };

    BlockHash$4.prototype._pad = function pad() {
      var len = this.pendingTotal;
      var bytes = this._delta8;
      var k = bytes - ((len + this.padLength) % bytes);
      var res = new Array(k + this.padLength);
      res[0] = 0x80;
      for (var i = 1; i < k; i++)
        res[i] = 0;

      // Append length
      len <<= 3;
      if (this.endian === 'big') {
        for (var t = 8; t < this.padLength; t++)
          res[i++] = 0;

        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = (len >>> 24) & 0xff;
        res[i++] = (len >>> 16) & 0xff;
        res[i++] = (len >>> 8) & 0xff;
        res[i++] = len & 0xff;
      } else {
        res[i++] = len & 0xff;
        res[i++] = (len >>> 8) & 0xff;
        res[i++] = (len >>> 16) & 0xff;
        res[i++] = (len >>> 24) & 0xff;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;

        for (t = 8; t < this.padLength; t++)
          res[i++] = 0;
      }

      return res;
    };

    var sha = {};

    var common$4 = {};

    var utils$7 = utils$9;
    var rotr32 = utils$7.rotr32;

    function ft_1$1(s, x, y, z) {
      if (s === 0)
        return ch32$1(x, y, z);
      if (s === 1 || s === 3)
        return p32(x, y, z);
      if (s === 2)
        return maj32$1(x, y, z);
    }
    common$4.ft_1 = ft_1$1;

    function ch32$1(x, y, z) {
      return (x & y) ^ ((~x) & z);
    }
    common$4.ch32 = ch32$1;

    function maj32$1(x, y, z) {
      return (x & y) ^ (x & z) ^ (y & z);
    }
    common$4.maj32 = maj32$1;

    function p32(x, y, z) {
      return x ^ y ^ z;
    }
    common$4.p32 = p32;

    function s0_256$1(x) {
      return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
    }
    common$4.s0_256 = s0_256$1;

    function s1_256$1(x) {
      return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
    }
    common$4.s1_256 = s1_256$1;

    function g0_256$1(x) {
      return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
    }
    common$4.g0_256 = g0_256$1;

    function g1_256$1(x) {
      return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
    }
    common$4.g1_256 = g1_256$1;

    var utils$6 = utils$9;
    var common$3 = common$5;
    var shaCommon$1 = common$4;

    var rotl32$1 = utils$6.rotl32;
    var sum32$2 = utils$6.sum32;
    var sum32_5$1 = utils$6.sum32_5;
    var ft_1 = shaCommon$1.ft_1;
    var BlockHash$3 = common$3.BlockHash;

    var sha1_K = [
      0x5A827999, 0x6ED9EBA1,
      0x8F1BBCDC, 0xCA62C1D6
    ];

    function SHA1() {
      if (!(this instanceof SHA1))
        return new SHA1();

      BlockHash$3.call(this);
      this.h = [
        0x67452301, 0xefcdab89, 0x98badcfe,
        0x10325476, 0xc3d2e1f0 ];
      this.W = new Array(80);
    }

    utils$6.inherits(SHA1, BlockHash$3);
    var _1 = SHA1;

    SHA1.blockSize = 512;
    SHA1.outSize = 160;
    SHA1.hmacStrength = 80;
    SHA1.padLength = 64;

    SHA1.prototype._update = function _update(msg, start) {
      var W = this.W;

      for (var i = 0; i < 16; i++)
        W[i] = msg[start + i];

      for(; i < W.length; i++)
        W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

      var a = this.h[0];
      var b = this.h[1];
      var c = this.h[2];
      var d = this.h[3];
      var e = this.h[4];

      for (i = 0; i < W.length; i++) {
        var s = ~~(i / 20);
        var t = sum32_5$1(rotl32$1(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
        e = d;
        d = c;
        c = rotl32$1(b, 30);
        b = a;
        a = t;
      }

      this.h[0] = sum32$2(this.h[0], a);
      this.h[1] = sum32$2(this.h[1], b);
      this.h[2] = sum32$2(this.h[2], c);
      this.h[3] = sum32$2(this.h[3], d);
      this.h[4] = sum32$2(this.h[4], e);
    };

    SHA1.prototype._digest = function digest(enc) {
      if (enc === 'hex')
        return utils$6.toHex32(this.h, 'big');
      else
        return utils$6.split32(this.h, 'big');
    };

    var utils$5 = utils$9;
    var common$2 = common$5;
    var shaCommon = common$4;
    var assert$8 = minimalisticAssert$1;

    var sum32$1 = utils$5.sum32;
    var sum32_4$1 = utils$5.sum32_4;
    var sum32_5 = utils$5.sum32_5;
    var ch32 = shaCommon.ch32;
    var maj32 = shaCommon.maj32;
    var s0_256 = shaCommon.s0_256;
    var s1_256 = shaCommon.s1_256;
    var g0_256 = shaCommon.g0_256;
    var g1_256 = shaCommon.g1_256;

    var BlockHash$2 = common$2.BlockHash;

    var sha256_K = [
      0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
      0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
      0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
      0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
      0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
      0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
      0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
      0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
      0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
      0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
      0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
      0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
      0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
      0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
      0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
      0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
    ];

    function SHA256$1() {
      if (!(this instanceof SHA256$1))
        return new SHA256$1();

      BlockHash$2.call(this);
      this.h = [
        0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
        0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
      ];
      this.k = sha256_K;
      this.W = new Array(64);
    }
    utils$5.inherits(SHA256$1, BlockHash$2);
    var _256 = SHA256$1;

    SHA256$1.blockSize = 512;
    SHA256$1.outSize = 256;
    SHA256$1.hmacStrength = 192;
    SHA256$1.padLength = 64;

    SHA256$1.prototype._update = function _update(msg, start) {
      var W = this.W;

      for (var i = 0; i < 16; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i++)
        W[i] = sum32_4$1(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

      var a = this.h[0];
      var b = this.h[1];
      var c = this.h[2];
      var d = this.h[3];
      var e = this.h[4];
      var f = this.h[5];
      var g = this.h[6];
      var h = this.h[7];

      assert$8(this.k.length === W.length);
      for (i = 0; i < W.length; i++) {
        var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
        var T2 = sum32$1(s0_256(a), maj32(a, b, c));
        h = g;
        g = f;
        f = e;
        e = sum32$1(d, T1);
        d = c;
        c = b;
        b = a;
        a = sum32$1(T1, T2);
      }

      this.h[0] = sum32$1(this.h[0], a);
      this.h[1] = sum32$1(this.h[1], b);
      this.h[2] = sum32$1(this.h[2], c);
      this.h[3] = sum32$1(this.h[3], d);
      this.h[4] = sum32$1(this.h[4], e);
      this.h[5] = sum32$1(this.h[5], f);
      this.h[6] = sum32$1(this.h[6], g);
      this.h[7] = sum32$1(this.h[7], h);
    };

    SHA256$1.prototype._digest = function digest(enc) {
      if (enc === 'hex')
        return utils$5.toHex32(this.h, 'big');
      else
        return utils$5.split32(this.h, 'big');
    };

    var utils$4 = utils$9;
    var SHA256 = _256;

    function SHA224() {
      if (!(this instanceof SHA224))
        return new SHA224();

      SHA256.call(this);
      this.h = [
        0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
        0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
    }
    utils$4.inherits(SHA224, SHA256);
    var _224 = SHA224;

    SHA224.blockSize = 512;
    SHA224.outSize = 224;
    SHA224.hmacStrength = 192;
    SHA224.padLength = 64;

    SHA224.prototype._digest = function digest(enc) {
      // Just truncate output
      if (enc === 'hex')
        return utils$4.toHex32(this.h.slice(0, 7), 'big');
      else
        return utils$4.split32(this.h.slice(0, 7), 'big');
    };

    var utils$3 = utils$9;
    var common$1 = common$5;
    var assert$7 = minimalisticAssert$1;

    var rotr64_hi = utils$3.rotr64_hi;
    var rotr64_lo = utils$3.rotr64_lo;
    var shr64_hi = utils$3.shr64_hi;
    var shr64_lo = utils$3.shr64_lo;
    var sum64 = utils$3.sum64;
    var sum64_hi = utils$3.sum64_hi;
    var sum64_lo = utils$3.sum64_lo;
    var sum64_4_hi = utils$3.sum64_4_hi;
    var sum64_4_lo = utils$3.sum64_4_lo;
    var sum64_5_hi = utils$3.sum64_5_hi;
    var sum64_5_lo = utils$3.sum64_5_lo;

    var BlockHash$1 = common$1.BlockHash;

    var sha512_K = [
      0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
      0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
      0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
      0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
      0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
      0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
      0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
      0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
      0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
      0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
      0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
      0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
      0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
      0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
      0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
      0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
      0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
      0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
      0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
      0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
      0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
      0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
      0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
      0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
      0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
      0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
      0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
      0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
      0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
      0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
      0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
      0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
      0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
      0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
      0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
      0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
      0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
      0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
      0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
      0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
    ];

    function SHA512$1() {
      if (!(this instanceof SHA512$1))
        return new SHA512$1();

      BlockHash$1.call(this);
      this.h = [
        0x6a09e667, 0xf3bcc908,
        0xbb67ae85, 0x84caa73b,
        0x3c6ef372, 0xfe94f82b,
        0xa54ff53a, 0x5f1d36f1,
        0x510e527f, 0xade682d1,
        0x9b05688c, 0x2b3e6c1f,
        0x1f83d9ab, 0xfb41bd6b,
        0x5be0cd19, 0x137e2179 ];
      this.k = sha512_K;
      this.W = new Array(160);
    }
    utils$3.inherits(SHA512$1, BlockHash$1);
    var _512 = SHA512$1;

    SHA512$1.blockSize = 1024;
    SHA512$1.outSize = 512;
    SHA512$1.hmacStrength = 192;
    SHA512$1.padLength = 128;

    SHA512$1.prototype._prepareBlock = function _prepareBlock(msg, start) {
      var W = this.W;

      // 32 x 32bit words
      for (var i = 0; i < 32; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i += 2) {
        var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
        var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
        var c1_hi = W[i - 14];  // i - 7
        var c1_lo = W[i - 13];
        var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
        var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
        var c3_hi = W[i - 32];  // i - 16
        var c3_lo = W[i - 31];

        W[i] = sum64_4_hi(
          c0_hi, c0_lo,
          c1_hi, c1_lo,
          c2_hi, c2_lo,
          c3_hi, c3_lo);
        W[i + 1] = sum64_4_lo(
          c0_hi, c0_lo,
          c1_hi, c1_lo,
          c2_hi, c2_lo,
          c3_hi, c3_lo);
      }
    };

    SHA512$1.prototype._update = function _update(msg, start) {
      this._prepareBlock(msg, start);

      var W = this.W;

      var ah = this.h[0];
      var al = this.h[1];
      var bh = this.h[2];
      var bl = this.h[3];
      var ch = this.h[4];
      var cl = this.h[5];
      var dh = this.h[6];
      var dl = this.h[7];
      var eh = this.h[8];
      var el = this.h[9];
      var fh = this.h[10];
      var fl = this.h[11];
      var gh = this.h[12];
      var gl = this.h[13];
      var hh = this.h[14];
      var hl = this.h[15];

      assert$7(this.k.length === W.length);
      for (var i = 0; i < W.length; i += 2) {
        var c0_hi = hh;
        var c0_lo = hl;
        var c1_hi = s1_512_hi(eh, el);
        var c1_lo = s1_512_lo(eh, el);
        var c2_hi = ch64_hi(eh, el, fh, fl, gh);
        var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
        var c3_hi = this.k[i];
        var c3_lo = this.k[i + 1];
        var c4_hi = W[i];
        var c4_lo = W[i + 1];

        var T1_hi = sum64_5_hi(
          c0_hi, c0_lo,
          c1_hi, c1_lo,
          c2_hi, c2_lo,
          c3_hi, c3_lo,
          c4_hi, c4_lo);
        var T1_lo = sum64_5_lo(
          c0_hi, c0_lo,
          c1_hi, c1_lo,
          c2_hi, c2_lo,
          c3_hi, c3_lo,
          c4_hi, c4_lo);

        c0_hi = s0_512_hi(ah, al);
        c0_lo = s0_512_lo(ah, al);
        c1_hi = maj64_hi(ah, al, bh, bl, ch);
        c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

        var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
        var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

        hh = gh;
        hl = gl;

        gh = fh;
        gl = fl;

        fh = eh;
        fl = el;

        eh = sum64_hi(dh, dl, T1_hi, T1_lo);
        el = sum64_lo(dl, dl, T1_hi, T1_lo);

        dh = ch;
        dl = cl;

        ch = bh;
        cl = bl;

        bh = ah;
        bl = al;

        ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
        al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
      }

      sum64(this.h, 0, ah, al);
      sum64(this.h, 2, bh, bl);
      sum64(this.h, 4, ch, cl);
      sum64(this.h, 6, dh, dl);
      sum64(this.h, 8, eh, el);
      sum64(this.h, 10, fh, fl);
      sum64(this.h, 12, gh, gl);
      sum64(this.h, 14, hh, hl);
    };

    SHA512$1.prototype._digest = function digest(enc) {
      if (enc === 'hex')
        return utils$3.toHex32(this.h, 'big');
      else
        return utils$3.split32(this.h, 'big');
    };

    function ch64_hi(xh, xl, yh, yl, zh) {
      var r = (xh & yh) ^ ((~xh) & zh);
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function ch64_lo(xh, xl, yh, yl, zh, zl) {
      var r = (xl & yl) ^ ((~xl) & zl);
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function maj64_hi(xh, xl, yh, yl, zh) {
      var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function maj64_lo(xh, xl, yh, yl, zh, zl) {
      var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function s0_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 28);
      var c1_hi = rotr64_hi(xl, xh, 2);  // 34
      var c2_hi = rotr64_hi(xl, xh, 7);  // 39

      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function s0_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 28);
      var c1_lo = rotr64_lo(xl, xh, 2);  // 34
      var c2_lo = rotr64_lo(xl, xh, 7);  // 39

      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function s1_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 14);
      var c1_hi = rotr64_hi(xh, xl, 18);
      var c2_hi = rotr64_hi(xl, xh, 9);  // 41

      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function s1_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 14);
      var c1_lo = rotr64_lo(xh, xl, 18);
      var c2_lo = rotr64_lo(xl, xh, 9);  // 41

      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function g0_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 1);
      var c1_hi = rotr64_hi(xh, xl, 8);
      var c2_hi = shr64_hi(xh, xl, 7);

      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function g0_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 1);
      var c1_lo = rotr64_lo(xh, xl, 8);
      var c2_lo = shr64_lo(xh, xl, 7);

      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function g1_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 19);
      var c1_hi = rotr64_hi(xl, xh, 29);  // 61
      var c2_hi = shr64_hi(xh, xl, 6);

      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    function g1_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 19);
      var c1_lo = rotr64_lo(xl, xh, 29);  // 61
      var c2_lo = shr64_lo(xh, xl, 6);

      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 0x100000000;
      return r;
    }

    var utils$2 = utils$9;

    var SHA512 = _512;

    function SHA384() {
      if (!(this instanceof SHA384))
        return new SHA384();

      SHA512.call(this);
      this.h = [
        0xcbbb9d5d, 0xc1059ed8,
        0x629a292a, 0x367cd507,
        0x9159015a, 0x3070dd17,
        0x152fecd8, 0xf70e5939,
        0x67332667, 0xffc00b31,
        0x8eb44a87, 0x68581511,
        0xdb0c2e0d, 0x64f98fa7,
        0x47b5481d, 0xbefa4fa4 ];
    }
    utils$2.inherits(SHA384, SHA512);
    var _384 = SHA384;

    SHA384.blockSize = 1024;
    SHA384.outSize = 384;
    SHA384.hmacStrength = 192;
    SHA384.padLength = 128;

    SHA384.prototype._digest = function digest(enc) {
      if (enc === 'hex')
        return utils$2.toHex32(this.h.slice(0, 12), 'big');
      else
        return utils$2.split32(this.h.slice(0, 12), 'big');
    };

    sha.sha1 = _1;
    sha.sha224 = _224;
    sha.sha256 = _256;
    sha.sha384 = _384;
    sha.sha512 = _512;

    var ripemd = {};

    var utils$1 = utils$9;
    var common = common$5;

    var rotl32 = utils$1.rotl32;
    var sum32 = utils$1.sum32;
    var sum32_3 = utils$1.sum32_3;
    var sum32_4 = utils$1.sum32_4;
    var BlockHash = common.BlockHash;

    function RIPEMD160() {
      if (!(this instanceof RIPEMD160))
        return new RIPEMD160();

      BlockHash.call(this);

      this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
      this.endian = 'little';
    }
    utils$1.inherits(RIPEMD160, BlockHash);
    ripemd.ripemd160 = RIPEMD160;

    RIPEMD160.blockSize = 512;
    RIPEMD160.outSize = 160;
    RIPEMD160.hmacStrength = 192;
    RIPEMD160.padLength = 64;

    RIPEMD160.prototype._update = function update(msg, start) {
      var A = this.h[0];
      var B = this.h[1];
      var C = this.h[2];
      var D = this.h[3];
      var E = this.h[4];
      var Ah = A;
      var Bh = B;
      var Ch = C;
      var Dh = D;
      var Eh = E;
      for (var j = 0; j < 80; j++) {
        var T = sum32(
          rotl32(
            sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
            s[j]),
          E);
        A = E;
        E = D;
        D = rotl32(C, 10);
        C = B;
        B = T;
        T = sum32(
          rotl32(
            sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
            sh[j]),
          Eh);
        Ah = Eh;
        Eh = Dh;
        Dh = rotl32(Ch, 10);
        Ch = Bh;
        Bh = T;
      }
      T = sum32_3(this.h[1], C, Dh);
      this.h[1] = sum32_3(this.h[2], D, Eh);
      this.h[2] = sum32_3(this.h[3], E, Ah);
      this.h[3] = sum32_3(this.h[4], A, Bh);
      this.h[4] = sum32_3(this.h[0], B, Ch);
      this.h[0] = T;
    };

    RIPEMD160.prototype._digest = function digest(enc) {
      if (enc === 'hex')
        return utils$1.toHex32(this.h, 'little');
      else
        return utils$1.split32(this.h, 'little');
    };

    function f(j, x, y, z) {
      if (j <= 15)
        return x ^ y ^ z;
      else if (j <= 31)
        return (x & y) | ((~x) & z);
      else if (j <= 47)
        return (x | (~y)) ^ z;
      else if (j <= 63)
        return (x & z) | (y & (~z));
      else
        return x ^ (y | (~z));
    }

    function K(j) {
      if (j <= 15)
        return 0x00000000;
      else if (j <= 31)
        return 0x5a827999;
      else if (j <= 47)
        return 0x6ed9eba1;
      else if (j <= 63)
        return 0x8f1bbcdc;
      else
        return 0xa953fd4e;
    }

    function Kh(j) {
      if (j <= 15)
        return 0x50a28be6;
      else if (j <= 31)
        return 0x5c4dd124;
      else if (j <= 47)
        return 0x6d703ef3;
      else if (j <= 63)
        return 0x7a6d76e9;
      else
        return 0x00000000;
    }

    var r = [
      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
      7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
      3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
      1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
      4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
    ];

    var rh = [
      5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
      6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
      15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
      8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
      12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
    ];

    var s = [
      11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
      7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
      11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
      11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
      9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
    ];

    var sh = [
      8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
      9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
      9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
      15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
      8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
    ];

    var utils = utils$9;
    var assert$6 = minimalisticAssert$1;

    function Hmac(hash, key, enc) {
      if (!(this instanceof Hmac))
        return new Hmac(hash, key, enc);
      this.Hash = hash;
      this.blockSize = hash.blockSize / 8;
      this.outSize = hash.outSize / 8;
      this.inner = null;
      this.outer = null;

      this._init(utils.toArray(key, enc));
    }
    var hmac = Hmac;

    Hmac.prototype._init = function init(key) {
      // Shorten key, if needed
      if (key.length > this.blockSize)
        key = new this.Hash().update(key).digest();
      assert$6(key.length <= this.blockSize);

      // Add padding to key
      for (var i = key.length; i < this.blockSize; i++)
        key.push(0);

      for (i = 0; i < key.length; i++)
        key[i] ^= 0x36;
      this.inner = new this.Hash().update(key);

      // 0x36 ^ 0x5c = 0x6a
      for (i = 0; i < key.length; i++)
        key[i] ^= 0x6a;
      this.outer = new this.Hash().update(key);
    };

    Hmac.prototype.update = function update(msg, enc) {
      this.inner.update(msg, enc);
      return this;
    };

    Hmac.prototype.digest = function digest(enc) {
      this.outer.update(this.inner.digest());
      return this.outer.digest(enc);
    };

    (function (exports) {
    var hash = exports;

    hash.utils = utils$9;
    hash.common = common$5;
    hash.sha = sha;
    hash.ripemd = ripemd;
    hash.hmac = hmac;

    // Proxy hash functions to the main object
    hash.sha1 = hash.sha.sha1;
    hash.sha256 = hash.sha.sha256;
    hash.sha224 = hash.sha.sha224;
    hash.sha384 = hash.sha.sha384;
    hash.sha512 = hash.sha.sha512;
    hash.ripemd160 = hash.ripemd.ripemd160;
    }(hash$1));

    var hash = hash$1;

    var SupportedAlgorithm;
    (function (SupportedAlgorithm) {
        SupportedAlgorithm["sha256"] = "sha256";
        SupportedAlgorithm["sha512"] = "sha512";
    })(SupportedAlgorithm || (SupportedAlgorithm = {}));

    const version$7 = "sha2/5.7.0";

    const logger$8 = new Logger(version$7);
    function ripemd160(data) {
        return "0x" + (hash.ripemd160().update(arrayify(data)).digest("hex"));
    }
    function sha256(data) {
        return "0x" + (hash.sha256().update(arrayify(data)).digest("hex"));
    }
    function computeHmac(algorithm, key, data) {
        if (!SupportedAlgorithm[algorithm]) {
            logger$8.throwError("unsupported algorithm " + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "hmac",
                algorithm: algorithm
            });
        }
        return "0x" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest("hex");
    }

    function pbkdf2$1(password, salt, iterations, keylen, hashAlgorithm) {
        password = arrayify(password);
        salt = arrayify(salt);
        let hLen;
        let l = 1;
        const DK = new Uint8Array(keylen);
        const block1 = new Uint8Array(salt.length + 4);
        block1.set(salt);
        //salt.copy(block1, 0, 0, salt.length)
        let r;
        let T;
        for (let i = 1; i <= l; i++) {
            //block1.writeUInt32BE(i, salt.length)
            block1[salt.length] = (i >> 24) & 0xff;
            block1[salt.length + 1] = (i >> 16) & 0xff;
            block1[salt.length + 2] = (i >> 8) & 0xff;
            block1[salt.length + 3] = i & 0xff;
            //let U = createHmac(password).update(block1).digest();
            let U = arrayify(computeHmac(hashAlgorithm, password, block1));
            if (!hLen) {
                hLen = U.length;
                T = new Uint8Array(hLen);
                l = Math.ceil(keylen / hLen);
                r = keylen - (l - 1) * hLen;
            }
            //U.copy(T, 0, 0, hLen)
            T.set(U);
            for (let j = 1; j < iterations; j++) {
                //U = createHmac(password).update(U).digest();
                U = arrayify(computeHmac(hashAlgorithm, password, U));
                for (let k = 0; k < hLen; k++)
                    T[k] ^= U[k];
            }
            const destPos = (i - 1) * hLen;
            const len = (i === l ? r : hLen);
            //T.copy(DK, destPos, 0, len)
            DK.set(arrayify(T).slice(0, len), destPos);
        }
        return hexlify(DK);
    }

    function createCommonjsModule(fn, basedir, module) {
    	return module = {
    		path: basedir,
    		exports: {},
    		require: function (path, base) {
    			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
    		}
    	}, fn(module, module.exports), module.exports;
    }

    function commonjsRequire () {
    	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
    }

    var minimalisticAssert = assert;

    function assert(val, msg) {
      if (!val)
        throw new Error(msg || 'Assertion failed');
    }

    assert.equal = function assertEqual(l, r, msg) {
      if (l != r)
        throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
    };

    var utils_1 = createCommonjsModule(function (module, exports) {

    var utils = exports;

    function toArray(msg, enc) {
      if (Array.isArray(msg))
        return msg.slice();
      if (!msg)
        return [];
      var res = [];
      if (typeof msg !== 'string') {
        for (var i = 0; i < msg.length; i++)
          res[i] = msg[i] | 0;
        return res;
      }
      if (enc === 'hex') {
        msg = msg.replace(/[^a-z0-9]+/ig, '');
        if (msg.length % 2 !== 0)
          msg = '0' + msg;
        for (var i = 0; i < msg.length; i += 2)
          res.push(parseInt(msg[i] + msg[i + 1], 16));
      } else {
        for (var i = 0; i < msg.length; i++) {
          var c = msg.charCodeAt(i);
          var hi = c >> 8;
          var lo = c & 0xff;
          if (hi)
            res.push(hi, lo);
          else
            res.push(lo);
        }
      }
      return res;
    }
    utils.toArray = toArray;

    function zero2(word) {
      if (word.length === 1)
        return '0' + word;
      else
        return word;
    }
    utils.zero2 = zero2;

    function toHex(msg) {
      var res = '';
      for (var i = 0; i < msg.length; i++)
        res += zero2(msg[i].toString(16));
      return res;
    }
    utils.toHex = toHex;

    utils.encode = function encode(arr, enc) {
      if (enc === 'hex')
        return toHex(arr);
      else
        return arr;
    };
    });

    var utils_1$1 = createCommonjsModule(function (module, exports) {

    var utils = exports;




    utils.assert = minimalisticAssert;
    utils.toArray = utils_1.toArray;
    utils.zero2 = utils_1.zero2;
    utils.toHex = utils_1.toHex;
    utils.encode = utils_1.encode;

    // Represent num in a w-NAF form
    function getNAF(num, w, bits) {
      var naf = new Array(Math.max(num.bitLength(), bits) + 1);
      naf.fill(0);

      var ws = 1 << (w + 1);
      var k = num.clone();

      for (var i = 0; i < naf.length; i++) {
        var z;
        var mod = k.andln(ws - 1);
        if (k.isOdd()) {
          if (mod > (ws >> 1) - 1)
            z = (ws >> 1) - mod;
          else
            z = mod;
          k.isubn(z);
        } else {
          z = 0;
        }

        naf[i] = z;
        k.iushrn(1);
      }

      return naf;
    }
    utils.getNAF = getNAF;

    // Represent k1, k2 in a Joint Sparse Form
    function getJSF(k1, k2) {
      var jsf = [
        [],
        [],
      ];

      k1 = k1.clone();
      k2 = k2.clone();
      var d1 = 0;
      var d2 = 0;
      var m8;
      while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
        // First phase
        var m14 = (k1.andln(3) + d1) & 3;
        var m24 = (k2.andln(3) + d2) & 3;
        if (m14 === 3)
          m14 = -1;
        if (m24 === 3)
          m24 = -1;
        var u1;
        if ((m14 & 1) === 0) {
          u1 = 0;
        } else {
          m8 = (k1.andln(7) + d1) & 7;
          if ((m8 === 3 || m8 === 5) && m24 === 2)
            u1 = -m14;
          else
            u1 = m14;
        }
        jsf[0].push(u1);

        var u2;
        if ((m24 & 1) === 0) {
          u2 = 0;
        } else {
          m8 = (k2.andln(7) + d2) & 7;
          if ((m8 === 3 || m8 === 5) && m14 === 2)
            u2 = -m24;
          else
            u2 = m24;
        }
        jsf[1].push(u2);

        // Second phase
        if (2 * d1 === u1 + 1)
          d1 = 1 - d1;
        if (2 * d2 === u2 + 1)
          d2 = 1 - d2;
        k1.iushrn(1);
        k2.iushrn(1);
      }

      return jsf;
    }
    utils.getJSF = getJSF;

    function cachedProperty(obj, name, computer) {
      var key = '_' + name;
      obj.prototype[name] = function cachedProperty() {
        return this[key] !== undefined ? this[key] :
          this[key] = computer.call(this);
      };
    }
    utils.cachedProperty = cachedProperty;

    function parseBytes(bytes) {
      return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
        bytes;
    }
    utils.parseBytes = parseBytes;

    function intFromLE(bytes) {
      return new BN$1(bytes, 'hex', 'le');
    }
    utils.intFromLE = intFromLE;
    });



    var getNAF = utils_1$1.getNAF;
    var getJSF = utils_1$1.getJSF;
    var assert$1 = utils_1$1.assert;

    function BaseCurve(type, conf) {
      this.type = type;
      this.p = new BN$1(conf.p, 16);

      // Use Montgomery, when there is no fast reduction for the prime
      this.red = conf.prime ? BN$1.red(conf.prime) : BN$1.mont(this.p);

      // Useful for many curves
      this.zero = new BN$1(0).toRed(this.red);
      this.one = new BN$1(1).toRed(this.red);
      this.two = new BN$1(2).toRed(this.red);

      // Curve configuration, optional
      this.n = conf.n && new BN$1(conf.n, 16);
      this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

      // Temporary arrays
      this._wnafT1 = new Array(4);
      this._wnafT2 = new Array(4);
      this._wnafT3 = new Array(4);
      this._wnafT4 = new Array(4);

      this._bitLength = this.n ? this.n.bitLength() : 0;

      // Generalized Greg Maxwell's trick
      var adjustCount = this.n && this.p.div(this.n);
      if (!adjustCount || adjustCount.cmpn(100) > 0) {
        this.redN = null;
      } else {
        this._maxwellTrick = true;
        this.redN = this.n.toRed(this.red);
      }
    }
    var base = BaseCurve;

    BaseCurve.prototype.point = function point() {
      throw new Error('Not implemented');
    };

    BaseCurve.prototype.validate = function validate() {
      throw new Error('Not implemented');
    };

    BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
      assert$1(p.precomputed);
      var doubles = p._getDoubles();

      var naf = getNAF(k, 1, this._bitLength);
      var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
      I /= 3;

      // Translate into more windowed form
      var repr = [];
      var j;
      var nafW;
      for (j = 0; j < naf.length; j += doubles.step) {
        nafW = 0;
        for (var l = j + doubles.step - 1; l >= j; l--)
          nafW = (nafW << 1) + naf[l];
        repr.push(nafW);
      }

      var a = this.jpoint(null, null, null);
      var b = this.jpoint(null, null, null);
      for (var i = I; i > 0; i--) {
        for (j = 0; j < repr.length; j++) {
          nafW = repr[j];
          if (nafW === i)
            b = b.mixedAdd(doubles.points[j]);
          else if (nafW === -i)
            b = b.mixedAdd(doubles.points[j].neg());
        }
        a = a.add(b);
      }
      return a.toP();
    };

    BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
      var w = 4;

      // Precompute window
      var nafPoints = p._getNAFPoints(w);
      w = nafPoints.wnd;
      var wnd = nafPoints.points;

      // Get NAF form
      var naf = getNAF(k, w, this._bitLength);

      // Add `this`*(N+1) for every w-NAF index
      var acc = this.jpoint(null, null, null);
      for (var i = naf.length - 1; i >= 0; i--) {
        // Count zeroes
        for (var l = 0; i >= 0 && naf[i] === 0; i--)
          l++;
        if (i >= 0)
          l++;
        acc = acc.dblp(l);

        if (i < 0)
          break;
        var z = naf[i];
        assert$1(z !== 0);
        if (p.type === 'affine') {
          // J +- P
          if (z > 0)
            acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
          else
            acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
        } else {
          // J +- J
          if (z > 0)
            acc = acc.add(wnd[(z - 1) >> 1]);
          else
            acc = acc.add(wnd[(-z - 1) >> 1].neg());
        }
      }
      return p.type === 'affine' ? acc.toP() : acc;
    };

    BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
      points,
      coeffs,
      len,
      jacobianResult) {
      var wndWidth = this._wnafT1;
      var wnd = this._wnafT2;
      var naf = this._wnafT3;

      // Fill all arrays
      var max = 0;
      var i;
      var j;
      var p;
      for (i = 0; i < len; i++) {
        p = points[i];
        var nafPoints = p._getNAFPoints(defW);
        wndWidth[i] = nafPoints.wnd;
        wnd[i] = nafPoints.points;
      }

      // Comb small window NAFs
      for (i = len - 1; i >= 1; i -= 2) {
        var a = i - 1;
        var b = i;
        if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
          naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
          naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
          max = Math.max(naf[a].length, max);
          max = Math.max(naf[b].length, max);
          continue;
        }

        var comb = [
          points[a], /* 1 */
          null, /* 3 */
          null, /* 5 */
          points[b], /* 7 */
        ];

        // Try to avoid Projective points, if possible
        if (points[a].y.cmp(points[b].y) === 0) {
          comb[1] = points[a].add(points[b]);
          comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
          comb[1] = points[a].toJ().mixedAdd(points[b]);
          comb[2] = points[a].add(points[b].neg());
        } else {
          comb[1] = points[a].toJ().mixedAdd(points[b]);
          comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        }

        var index = [
          -3, /* -1 -1 */
          -1, /* -1 0 */
          -5, /* -1 1 */
          -7, /* 0 -1 */
          0, /* 0 0 */
          7, /* 0 1 */
          5, /* 1 -1 */
          1, /* 1 0 */
          3,  /* 1 1 */
        ];

        var jsf = getJSF(coeffs[a], coeffs[b]);
        max = Math.max(jsf[0].length, max);
        naf[a] = new Array(max);
        naf[b] = new Array(max);
        for (j = 0; j < max; j++) {
          var ja = jsf[0][j] | 0;
          var jb = jsf[1][j] | 0;

          naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
          naf[b][j] = 0;
          wnd[a] = comb;
        }
      }

      var acc = this.jpoint(null, null, null);
      var tmp = this._wnafT4;
      for (i = max; i >= 0; i--) {
        var k = 0;

        while (i >= 0) {
          var zero = true;
          for (j = 0; j < len; j++) {
            tmp[j] = naf[j][i] | 0;
            if (tmp[j] !== 0)
              zero = false;
          }
          if (!zero)
            break;
          k++;
          i--;
        }
        if (i >= 0)
          k++;
        acc = acc.dblp(k);
        if (i < 0)
          break;

        for (j = 0; j < len; j++) {
          var z = tmp[j];
          if (z === 0)
            continue;
          else if (z > 0)
            p = wnd[j][(z - 1) >> 1];
          else if (z < 0)
            p = wnd[j][(-z - 1) >> 1].neg();

          if (p.type === 'affine')
            acc = acc.mixedAdd(p);
          else
            acc = acc.add(p);
        }
      }
      // Zeroify references
      for (i = 0; i < len; i++)
        wnd[i] = null;

      if (jacobianResult)
        return acc;
      else
        return acc.toP();
    };

    function BasePoint(curve, type) {
      this.curve = curve;
      this.type = type;
      this.precomputed = null;
    }
    BaseCurve.BasePoint = BasePoint;

    BasePoint.prototype.eq = function eq(/*other*/) {
      throw new Error('Not implemented');
    };

    BasePoint.prototype.validate = function validate() {
      return this.curve.validate(this);
    };

    BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
      bytes = utils_1$1.toArray(bytes, enc);

      var len = this.p.byteLength();

      // uncompressed, hybrid-odd, hybrid-even
      if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
          bytes.length - 1 === 2 * len) {
        if (bytes[0] === 0x06)
          assert$1(bytes[bytes.length - 1] % 2 === 0);
        else if (bytes[0] === 0x07)
          assert$1(bytes[bytes.length - 1] % 2 === 1);

        var res =  this.point(bytes.slice(1, 1 + len),
          bytes.slice(1 + len, 1 + 2 * len));

        return res;
      } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
                  bytes.length - 1 === len) {
        return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
      }
      throw new Error('Unknown point format');
    };

    BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
      return this.encode(enc, true);
    };

    BasePoint.prototype._encode = function _encode(compact) {
      var len = this.curve.p.byteLength();
      var x = this.getX().toArray('be', len);

      if (compact)
        return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

      return [ 0x04 ].concat(x, this.getY().toArray('be', len));
    };

    BasePoint.prototype.encode = function encode(enc, compact) {
      return utils_1$1.encode(this._encode(compact), enc);
    };

    BasePoint.prototype.precompute = function precompute(power) {
      if (this.precomputed)
        return this;

      var precomputed = {
        doubles: null,
        naf: null,
        beta: null,
      };
      precomputed.naf = this._getNAFPoints(8);
      precomputed.doubles = this._getDoubles(4, power);
      precomputed.beta = this._getBeta();
      this.precomputed = precomputed;

      return this;
    };

    BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
      if (!this.precomputed)
        return false;

      var doubles = this.precomputed.doubles;
      if (!doubles)
        return false;

      return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
    };

    BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
      if (this.precomputed && this.precomputed.doubles)
        return this.precomputed.doubles;

      var doubles = [ this ];
      var acc = this;
      for (var i = 0; i < power; i += step) {
        for (var j = 0; j < step; j++)
          acc = acc.dbl();
        doubles.push(acc);
      }
      return {
        step: step,
        points: doubles,
      };
    };

    BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
      if (this.precomputed && this.precomputed.naf)
        return this.precomputed.naf;

      var res = [ this ];
      var max = (1 << wnd) - 1;
      var dbl = max === 1 ? null : this.dbl();
      for (var i = 1; i < max; i++)
        res[i] = res[i - 1].add(dbl);
      return {
        wnd: wnd,
        points: res,
      };
    };

    BasePoint.prototype._getBeta = function _getBeta() {
      return null;
    };

    BasePoint.prototype.dblp = function dblp(k) {
      var r = this;
      for (var i = 0; i < k; i++)
        r = r.dbl();
      return r;
    };

    var inherits_browser = createCommonjsModule(function (module) {
    if (typeof Object.create === 'function') {
      // implementation from standard node.js 'util' module
      module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      // old school shim for old browsers
      module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function () {};
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
    });






    var assert$2 = utils_1$1.assert;

    function ShortCurve(conf) {
      base.call(this, 'short', conf);

      this.a = new BN$1(conf.a, 16).toRed(this.red);
      this.b = new BN$1(conf.b, 16).toRed(this.red);
      this.tinv = this.two.redInvm();

      this.zeroA = this.a.fromRed().cmpn(0) === 0;
      this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

      // If the curve is endomorphic, precalculate beta and lambda
      this.endo = this._getEndomorphism(conf);
      this._endoWnafT1 = new Array(4);
      this._endoWnafT2 = new Array(4);
    }
    inherits_browser(ShortCurve, base);
    var short_1 = ShortCurve;

    ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
      // No efficient endomorphism
      if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
        return;

      // Compute beta and lambda, that lambda * P = (beta * Px; Py)
      var beta;
      var lambda;
      if (conf.beta) {
        beta = new BN$1(conf.beta, 16).toRed(this.red);
      } else {
        var betas = this._getEndoRoots(this.p);
        // Choose the smallest beta
        beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
        beta = beta.toRed(this.red);
      }
      if (conf.lambda) {
        lambda = new BN$1(conf.lambda, 16);
      } else {
        // Choose the lambda that is matching selected beta
        var lambdas = this._getEndoRoots(this.n);
        if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
          lambda = lambdas[0];
        } else {
          lambda = lambdas[1];
          assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
        }
      }

      // Get basis vectors, used for balanced length-two representation
      var basis;
      if (conf.basis) {
        basis = conf.basis.map(function(vec) {
          return {
            a: new BN$1(vec.a, 16),
            b: new BN$1(vec.b, 16),
          };
        });
      } else {
        basis = this._getEndoBasis(lambda);
      }

      return {
        beta: beta,
        lambda: lambda,
        basis: basis,
      };
    };

    ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
      // Find roots of for x^2 + x + 1 in F
      // Root = (-1 +- Sqrt(-3)) / 2
      //
      var red = num === this.p ? this.red : BN$1.mont(num);
      var tinv = new BN$1(2).toRed(red).redInvm();
      var ntinv = tinv.redNeg();

      var s = new BN$1(3).toRed(red).redNeg().redSqrt().redMul(tinv);

      var l1 = ntinv.redAdd(s).fromRed();
      var l2 = ntinv.redSub(s).fromRed();
      return [ l1, l2 ];
    };

    ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
      // aprxSqrt >= sqrt(this.n)
      var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

      // 3.74
      // Run EGCD, until r(L + 1) < aprxSqrt
      var u = lambda;
      var v = this.n.clone();
      var x1 = new BN$1(1);
      var y1 = new BN$1(0);
      var x2 = new BN$1(0);
      var y2 = new BN$1(1);

      // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
      var a0;
      var b0;
      // First vector
      var a1;
      var b1;
      // Second vector
      var a2;
      var b2;

      var prevR;
      var i = 0;
      var r;
      var x;
      while (u.cmpn(0) !== 0) {
        var q = v.div(u);
        r = v.sub(q.mul(u));
        x = x2.sub(q.mul(x1));
        var y = y2.sub(q.mul(y1));

        if (!a1 && r.cmp(aprxSqrt) < 0) {
          a0 = prevR.neg();
          b0 = x1;
          a1 = r.neg();
          b1 = x;
        } else if (a1 && ++i === 2) {
          break;
        }
        prevR = r;

        v = u;
        u = r;
        x2 = x1;
        x1 = x;
        y2 = y1;
        y1 = y;
      }
      a2 = r.neg();
      b2 = x;

      var len1 = a1.sqr().add(b1.sqr());
      var len2 = a2.sqr().add(b2.sqr());
      if (len2.cmp(len1) >= 0) {
        a2 = a0;
        b2 = b0;
      }

      // Normalize signs
      if (a1.negative) {
        a1 = a1.neg();
        b1 = b1.neg();
      }
      if (a2.negative) {
        a2 = a2.neg();
        b2 = b2.neg();
      }

      return [
        { a: a1, b: b1 },
        { a: a2, b: b2 },
      ];
    };

    ShortCurve.prototype._endoSplit = function _endoSplit(k) {
      var basis = this.endo.basis;
      var v1 = basis[0];
      var v2 = basis[1];

      var c1 = v2.b.mul(k).divRound(this.n);
      var c2 = v1.b.neg().mul(k).divRound(this.n);

      var p1 = c1.mul(v1.a);
      var p2 = c2.mul(v2.a);
      var q1 = c1.mul(v1.b);
      var q2 = c2.mul(v2.b);

      // Calculate answer
      var k1 = k.sub(p1).sub(p2);
      var k2 = q1.add(q2).neg();
      return { k1: k1, k2: k2 };
    };

    ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
      x = new BN$1(x, 16);
      if (!x.red)
        x = x.toRed(this.red);

      var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
      var y = y2.redSqrt();
      if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
        throw new Error('invalid point');

      // XXX Is there any way to tell if the number is odd without converting it
      // to non-red form?
      var isOdd = y.fromRed().isOdd();
      if (odd && !isOdd || !odd && isOdd)
        y = y.redNeg();

      return this.point(x, y);
    };

    ShortCurve.prototype.validate = function validate(point) {
      if (point.inf)
        return true;

      var x = point.x;
      var y = point.y;

      var ax = this.a.redMul(x);
      var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
      return y.redSqr().redISub(rhs).cmpn(0) === 0;
    };

    ShortCurve.prototype._endoWnafMulAdd =
        function _endoWnafMulAdd(points, coeffs, jacobianResult) {
          var npoints = this._endoWnafT1;
          var ncoeffs = this._endoWnafT2;
          for (var i = 0; i < points.length; i++) {
            var split = this._endoSplit(coeffs[i]);
            var p = points[i];
            var beta = p._getBeta();

            if (split.k1.negative) {
              split.k1.ineg();
              p = p.neg(true);
            }
            if (split.k2.negative) {
              split.k2.ineg();
              beta = beta.neg(true);
            }

            npoints[i * 2] = p;
            npoints[i * 2 + 1] = beta;
            ncoeffs[i * 2] = split.k1;
            ncoeffs[i * 2 + 1] = split.k2;
          }
          var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

          // Clean-up references to points and coefficients
          for (var j = 0; j < i * 2; j++) {
            npoints[j] = null;
            ncoeffs[j] = null;
          }
          return res;
        };

    function Point(curve, x, y, isRed) {
      base.BasePoint.call(this, curve, 'affine');
      if (x === null && y === null) {
        this.x = null;
        this.y = null;
        this.inf = true;
      } else {
        this.x = new BN$1(x, 16);
        this.y = new BN$1(y, 16);
        // Force redgomery representation when loading from JSON
        if (isRed) {
          this.x.forceRed(this.curve.red);
          this.y.forceRed(this.curve.red);
        }
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.y.red)
          this.y = this.y.toRed(this.curve.red);
        this.inf = false;
      }
    }
    inherits_browser(Point, base.BasePoint);

    ShortCurve.prototype.point = function point(x, y, isRed) {
      return new Point(this, x, y, isRed);
    };

    ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
      return Point.fromJSON(this, obj, red);
    };

    Point.prototype._getBeta = function _getBeta() {
      if (!this.curve.endo)
        return;

      var pre = this.precomputed;
      if (pre && pre.beta)
        return pre.beta;

      var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
      if (pre) {
        var curve = this.curve;
        var endoMul = function(p) {
          return curve.point(p.x.redMul(curve.endo.beta), p.y);
        };
        pre.beta = beta;
        beta.precomputed = {
          beta: null,
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(endoMul),
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(endoMul),
          },
        };
      }
      return beta;
    };

    Point.prototype.toJSON = function toJSON() {
      if (!this.precomputed)
        return [ this.x, this.y ];

      return [ this.x, this.y, this.precomputed && {
        doubles: this.precomputed.doubles && {
          step: this.precomputed.doubles.step,
          points: this.precomputed.doubles.points.slice(1),
        },
        naf: this.precomputed.naf && {
          wnd: this.precomputed.naf.wnd,
          points: this.precomputed.naf.points.slice(1),
        },
      } ];
    };

    Point.fromJSON = function fromJSON(curve, obj, red) {
      if (typeof obj === 'string')
        obj = JSON.parse(obj);
      var res = curve.point(obj[0], obj[1], red);
      if (!obj[2])
        return res;

      function obj2point(obj) {
        return curve.point(obj[0], obj[1], red);
      }

      var pre = obj[2];
      res.precomputed = {
        beta: null,
        doubles: pre.doubles && {
          step: pre.doubles.step,
          points: [ res ].concat(pre.doubles.points.map(obj2point)),
        },
        naf: pre.naf && {
          wnd: pre.naf.wnd,
          points: [ res ].concat(pre.naf.points.map(obj2point)),
        },
      };
      return res;
    };

    Point.prototype.inspect = function inspect() {
      if (this.isInfinity())
        return '<EC Point Infinity>';
      return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
          ' y: ' + this.y.fromRed().toString(16, 2) + '>';
    };

    Point.prototype.isInfinity = function isInfinity() {
      return this.inf;
    };

    Point.prototype.add = function add(p) {
      // O + P = P
      if (this.inf)
        return p;

      // P + O = P
      if (p.inf)
        return this;

      // P + P = 2P
      if (this.eq(p))
        return this.dbl();

      // P + (-P) = O
      if (this.neg().eq(p))
        return this.curve.point(null, null);

      // P + Q = O
      if (this.x.cmp(p.x) === 0)
        return this.curve.point(null, null);

      var c = this.y.redSub(p.y);
      if (c.cmpn(0) !== 0)
        c = c.redMul(this.x.redSub(p.x).redInvm());
      var nx = c.redSqr().redISub(this.x).redISub(p.x);
      var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    };

    Point.prototype.dbl = function dbl() {
      if (this.inf)
        return this;

      // 2P = O
      var ys1 = this.y.redAdd(this.y);
      if (ys1.cmpn(0) === 0)
        return this.curve.point(null, null);

      var a = this.curve.a;

      var x2 = this.x.redSqr();
      var dyinv = ys1.redInvm();
      var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

      var nx = c.redSqr().redISub(this.x.redAdd(this.x));
      var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    };

    Point.prototype.getX = function getX() {
      return this.x.fromRed();
    };

    Point.prototype.getY = function getY() {
      return this.y.fromRed();
    };

    Point.prototype.mul = function mul(k) {
      k = new BN$1(k, 16);
      if (this.isInfinity())
        return this;
      else if (this._hasDoubles(k))
        return this.curve._fixedNafMul(this, k);
      else if (this.curve.endo)
        return this.curve._endoWnafMulAdd([ this ], [ k ]);
      else
        return this.curve._wnafMul(this, k);
    };

    Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
      var points = [ this, p2 ];
      var coeffs = [ k1, k2 ];
      if (this.curve.endo)
        return this.curve._endoWnafMulAdd(points, coeffs);
      else
        return this.curve._wnafMulAdd(1, points, coeffs, 2);
    };

    Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
      var points = [ this, p2 ];
      var coeffs = [ k1, k2 ];
      if (this.curve.endo)
        return this.curve._endoWnafMulAdd(points, coeffs, true);
      else
        return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
    };

    Point.prototype.eq = function eq(p) {
      return this === p ||
             this.inf === p.inf &&
                 (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
    };

    Point.prototype.neg = function neg(_precompute) {
      if (this.inf)
        return this;

      var res = this.curve.point(this.x, this.y.redNeg());
      if (_precompute && this.precomputed) {
        var pre = this.precomputed;
        var negate = function(p) {
          return p.neg();
        };
        res.precomputed = {
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(negate),
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(negate),
          },
        };
      }
      return res;
    };

    Point.prototype.toJ = function toJ() {
      if (this.inf)
        return this.curve.jpoint(null, null, null);

      var res = this.curve.jpoint(this.x, this.y, this.curve.one);
      return res;
    };

    function JPoint(curve, x, y, z) {
      base.BasePoint.call(this, curve, 'jacobian');
      if (x === null && y === null && z === null) {
        this.x = this.curve.one;
        this.y = this.curve.one;
        this.z = new BN$1(0);
      } else {
        this.x = new BN$1(x, 16);
        this.y = new BN$1(y, 16);
        this.z = new BN$1(z, 16);
      }
      if (!this.x.red)
        this.x = this.x.toRed(this.curve.red);
      if (!this.y.red)
        this.y = this.y.toRed(this.curve.red);
      if (!this.z.red)
        this.z = this.z.toRed(this.curve.red);

      this.zOne = this.z === this.curve.one;
    }
    inherits_browser(JPoint, base.BasePoint);

    ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
      return new JPoint(this, x, y, z);
    };

    JPoint.prototype.toP = function toP() {
      if (this.isInfinity())
        return this.curve.point(null, null);

      var zinv = this.z.redInvm();
      var zinv2 = zinv.redSqr();
      var ax = this.x.redMul(zinv2);
      var ay = this.y.redMul(zinv2).redMul(zinv);

      return this.curve.point(ax, ay);
    };

    JPoint.prototype.neg = function neg() {
      return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
    };

    JPoint.prototype.add = function add(p) {
      // O + P = P
      if (this.isInfinity())
        return p;

      // P + O = P
      if (p.isInfinity())
        return this;

      // 12M + 4S + 7A
      var pz2 = p.z.redSqr();
      var z2 = this.z.redSqr();
      var u1 = this.x.redMul(pz2);
      var u2 = p.x.redMul(z2);
      var s1 = this.y.redMul(pz2.redMul(p.z));
      var s2 = p.y.redMul(z2.redMul(this.z));

      var h = u1.redSub(u2);
      var r = s1.redSub(s2);
      if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0)
          return this.curve.jpoint(null, null, null);
        else
          return this.dbl();
      }

      var h2 = h.redSqr();
      var h3 = h2.redMul(h);
      var v = u1.redMul(h2);

      var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
      var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
      var nz = this.z.redMul(p.z).redMul(h);

      return this.curve.jpoint(nx, ny, nz);
    };

    JPoint.prototype.mixedAdd = function mixedAdd(p) {
      // O + P = P
      if (this.isInfinity())
        return p.toJ();

      // P + O = P
      if (p.isInfinity())
        return this;

      // 8M + 3S + 7A
      var z2 = this.z.redSqr();
      var u1 = this.x;
      var u2 = p.x.redMul(z2);
      var s1 = this.y;
      var s2 = p.y.redMul(z2).redMul(this.z);

      var h = u1.redSub(u2);
      var r = s1.redSub(s2);
      if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0)
          return this.curve.jpoint(null, null, null);
        else
          return this.dbl();
      }

      var h2 = h.redSqr();
      var h3 = h2.redMul(h);
      var v = u1.redMul(h2);

      var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
      var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
      var nz = this.z.redMul(h);

      return this.curve.jpoint(nx, ny, nz);
    };

    JPoint.prototype.dblp = function dblp(pow) {
      if (pow === 0)
        return this;
      if (this.isInfinity())
        return this;
      if (!pow)
        return this.dbl();

      var i;
      if (this.curve.zeroA || this.curve.threeA) {
        var r = this;
        for (i = 0; i < pow; i++)
          r = r.dbl();
        return r;
      }

      // 1M + 2S + 1A + N * (4S + 5M + 8A)
      // N = 1 => 6M + 6S + 9A
      var a = this.curve.a;
      var tinv = this.curve.tinv;

      var jx = this.x;
      var jy = this.y;
      var jz = this.z;
      var jz4 = jz.redSqr().redSqr();

      // Reuse results
      var jyd = jy.redAdd(jy);
      for (i = 0; i < pow; i++) {
        var jx2 = jx.redSqr();
        var jyd2 = jyd.redSqr();
        var jyd4 = jyd2.redSqr();
        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

        var t1 = jx.redMul(jyd2);
        var nx = c.redSqr().redISub(t1.redAdd(t1));
        var t2 = t1.redISub(nx);
        var dny = c.redMul(t2);
        dny = dny.redIAdd(dny).redISub(jyd4);
        var nz = jyd.redMul(jz);
        if (i + 1 < pow)
          jz4 = jz4.redMul(jyd4);

        jx = nx;
        jz = nz;
        jyd = dny;
      }

      return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
    };

    JPoint.prototype.dbl = function dbl() {
      if (this.isInfinity())
        return this;

      if (this.curve.zeroA)
        return this._zeroDbl();
      else if (this.curve.threeA)
        return this._threeDbl();
      else
        return this._dbl();
    };

    JPoint.prototype._zeroDbl = function _zeroDbl() {
      var nx;
      var ny;
      var nz;
      // Z = 1
      if (this.zOne) {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
        //     #doubling-mdbl-2007-bl
        // 1M + 5S + 14A

        // XX = X1^2
        var xx = this.x.redSqr();
        // YY = Y1^2
        var yy = this.y.redSqr();
        // YYYY = YY^2
        var yyyy = yy.redSqr();
        // S = 2 * ((X1 + YY)^2 - XX - YYYY)
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        // M = 3 * XX + a; a = 0
        var m = xx.redAdd(xx).redIAdd(xx);
        // T = M ^ 2 - 2*S
        var t = m.redSqr().redISub(s).redISub(s);

        // 8 * YYYY
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);

        // X3 = T
        nx = t;
        // Y3 = M * (S - T) - 8 * YYYY
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        // Z3 = 2*Y1
        nz = this.y.redAdd(this.y);
      } else {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
        //     #doubling-dbl-2009-l
        // 2M + 5S + 13A

        // A = X1^2
        var a = this.x.redSqr();
        // B = Y1^2
        var b = this.y.redSqr();
        // C = B^2
        var c = b.redSqr();
        // D = 2 * ((X1 + B)^2 - A - C)
        var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
        d = d.redIAdd(d);
        // E = 3 * A
        var e = a.redAdd(a).redIAdd(a);
        // F = E^2
        var f = e.redSqr();

        // 8 * C
        var c8 = c.redIAdd(c);
        c8 = c8.redIAdd(c8);
        c8 = c8.redIAdd(c8);

        // X3 = F - 2 * D
        nx = f.redISub(d).redISub(d);
        // Y3 = E * (D - X3) - 8 * C
        ny = e.redMul(d.redISub(nx)).redISub(c8);
        // Z3 = 2 * Y1 * Z1
        nz = this.y.redMul(this.z);
        nz = nz.redIAdd(nz);
      }

      return this.curve.jpoint(nx, ny, nz);
    };

    JPoint.prototype._threeDbl = function _threeDbl() {
      var nx;
      var ny;
      var nz;
      // Z = 1
      if (this.zOne) {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
        //     #doubling-mdbl-2007-bl
        // 1M + 5S + 15A

        // XX = X1^2
        var xx = this.x.redSqr();
        // YY = Y1^2
        var yy = this.y.redSqr();
        // YYYY = YY^2
        var yyyy = yy.redSqr();
        // S = 2 * ((X1 + YY)^2 - XX - YYYY)
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        // M = 3 * XX + a
        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
        // T = M^2 - 2 * S
        var t = m.redSqr().redISub(s).redISub(s);
        // X3 = T
        nx = t;
        // Y3 = M * (S - T) - 8 * YYYY
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        // Z3 = 2 * Y1
        nz = this.y.redAdd(this.y);
      } else {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
        // 3M + 5S

        // delta = Z1^2
        var delta = this.z.redSqr();
        // gamma = Y1^2
        var gamma = this.y.redSqr();
        // beta = X1 * gamma
        var beta = this.x.redMul(gamma);
        // alpha = 3 * (X1 - delta) * (X1 + delta)
        var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
        alpha = alpha.redAdd(alpha).redIAdd(alpha);
        // X3 = alpha^2 - 8 * beta
        var beta4 = beta.redIAdd(beta);
        beta4 = beta4.redIAdd(beta4);
        var beta8 = beta4.redAdd(beta4);
        nx = alpha.redSqr().redISub(beta8);
        // Z3 = (Y1 + Z1)^2 - gamma - delta
        nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
        // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
        var ggamma8 = gamma.redSqr();
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
      }

      return this.curve.jpoint(nx, ny, nz);
    };

    JPoint.prototype._dbl = function _dbl() {
      var a = this.curve.a;

      // 4M + 6S + 10A
      var jx = this.x;
      var jy = this.y;
      var jz = this.z;
      var jz4 = jz.redSqr().redSqr();

      var jx2 = jx.redSqr();
      var jy2 = jy.redSqr();

      var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

      var jxd4 = jx.redAdd(jx);
      jxd4 = jxd4.redIAdd(jxd4);
      var t1 = jxd4.redMul(jy2);
      var nx = c.redSqr().redISub(t1.redAdd(t1));
      var t2 = t1.redISub(nx);

      var jyd8 = jy2.redSqr();
      jyd8 = jyd8.redIAdd(jyd8);
      jyd8 = jyd8.redIAdd(jyd8);
      jyd8 = jyd8.redIAdd(jyd8);
      var ny = c.redMul(t2).redISub(jyd8);
      var nz = jy.redAdd(jy).redMul(jz);

      return this.curve.jpoint(nx, ny, nz);
    };

    JPoint.prototype.trpl = function trpl() {
      if (!this.curve.zeroA)
        return this.dbl().add(this);

      // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
      // 5M + 10S + ...

      // XX = X1^2
      var xx = this.x.redSqr();
      // YY = Y1^2
      var yy = this.y.redSqr();
      // ZZ = Z1^2
      var zz = this.z.redSqr();
      // YYYY = YY^2
      var yyyy = yy.redSqr();
      // M = 3 * XX + a * ZZ2; a = 0
      var m = xx.redAdd(xx).redIAdd(xx);
      // MM = M^2
      var mm = m.redSqr();
      // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
      var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
      e = e.redIAdd(e);
      e = e.redAdd(e).redIAdd(e);
      e = e.redISub(mm);
      // EE = E^2
      var ee = e.redSqr();
      // T = 16*YYYY
      var t = yyyy.redIAdd(yyyy);
      t = t.redIAdd(t);
      t = t.redIAdd(t);
      t = t.redIAdd(t);
      // U = (M + E)^2 - MM - EE - T
      var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
      // X3 = 4 * (X1 * EE - 4 * YY * U)
      var yyu4 = yy.redMul(u);
      yyu4 = yyu4.redIAdd(yyu4);
      yyu4 = yyu4.redIAdd(yyu4);
      var nx = this.x.redMul(ee).redISub(yyu4);
      nx = nx.redIAdd(nx);
      nx = nx.redIAdd(nx);
      // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
      var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
      ny = ny.redIAdd(ny);
      ny = ny.redIAdd(ny);
      ny = ny.redIAdd(ny);
      // Z3 = (Z1 + E)^2 - ZZ - EE
      var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

      return this.curve.jpoint(nx, ny, nz);
    };

    JPoint.prototype.mul = function mul(k, kbase) {
      k = new BN$1(k, kbase);

      return this.curve._wnafMul(this, k);
    };

    JPoint.prototype.eq = function eq(p) {
      if (p.type === 'affine')
        return this.eq(p.toJ());

      if (this === p)
        return true;

      // x1 * z2^2 == x2 * z1^2
      var z2 = this.z.redSqr();
      var pz2 = p.z.redSqr();
      if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
        return false;

      // y1 * z2^3 == y2 * z1^3
      var z3 = z2.redMul(this.z);
      var pz3 = pz2.redMul(p.z);
      return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
    };

    JPoint.prototype.eqXToP = function eqXToP(x) {
      var zs = this.z.redSqr();
      var rx = x.toRed(this.curve.red).redMul(zs);
      if (this.x.cmp(rx) === 0)
        return true;

      var xc = x.clone();
      var t = this.curve.redN.redMul(zs);
      for (;;) {
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0)
          return false;

        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0)
          return true;
      }
    };

    JPoint.prototype.inspect = function inspect() {
      if (this.isInfinity())
        return '<EC JPoint Infinity>';
      return '<EC JPoint x: ' + this.x.toString(16, 2) +
          ' y: ' + this.y.toString(16, 2) +
          ' z: ' + this.z.toString(16, 2) + '>';
    };

    JPoint.prototype.isInfinity = function isInfinity() {
      // XXX This code assumes that zero is always zero in red
      return this.z.cmpn(0) === 0;
    };

    var curve_1 = createCommonjsModule(function (module, exports) {

    var curve = exports;

    curve.base = base;
    curve.short = short_1;
    curve.mont = /*RicMoo:ethers:require(./mont)*/(null);
    curve.edwards = /*RicMoo:ethers:require(./edwards)*/(null);
    });

    var curves_1 = createCommonjsModule(function (module, exports) {

    var curves = exports;





    var assert = utils_1$1.assert;

    function PresetCurve(options) {
      if (options.type === 'short')
        this.curve = new curve_1.short(options);
      else if (options.type === 'edwards')
        this.curve = new curve_1.edwards(options);
      else
        this.curve = new curve_1.mont(options);
      this.g = this.curve.g;
      this.n = this.curve.n;
      this.hash = options.hash;

      assert(this.g.validate(), 'Invalid curve');
      assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
    }
    curves.PresetCurve = PresetCurve;

    function defineCurve(name, options) {
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        get: function() {
          var curve = new PresetCurve(options);
          Object.defineProperty(curves, name, {
            configurable: true,
            enumerable: true,
            value: curve,
          });
          return curve;
        },
      });
    }

    defineCurve('p192', {
      type: 'short',
      prime: 'p192',
      p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
      a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
      b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
      n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
      hash: hash.sha256,
      gRed: false,
      g: [
        '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
        '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
      ],
    });

    defineCurve('p224', {
      type: 'short',
      prime: 'p224',
      p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
      a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
      b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
      n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
      hash: hash.sha256,
      gRed: false,
      g: [
        'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
        'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
      ],
    });

    defineCurve('p256', {
      type: 'short',
      prime: null,
      p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
      a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
      b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
      n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
      hash: hash.sha256,
      gRed: false,
      g: [
        '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
        '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
      ],
    });

    defineCurve('p384', {
      type: 'short',
      prime: null,
      p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
         'fffffffe ffffffff 00000000 00000000 ffffffff',
      a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
         'fffffffe ffffffff 00000000 00000000 fffffffc',
      b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
         '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
      n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
         'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
      hash: hash.sha384,
      gRed: false,
      g: [
        'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
        '5502f25d bf55296c 3a545e38 72760ab7',
        '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
        '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
      ],
    });

    defineCurve('p521', {
      type: 'short',
      prime: null,
      p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
         'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
         'ffffffff ffffffff ffffffff ffffffff ffffffff',
      a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
         'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
         'ffffffff ffffffff ffffffff ffffffff fffffffc',
      b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
         '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
         '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
      n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
         'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
         'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
      hash: hash.sha512,
      gRed: false,
      g: [
        '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
        '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
        'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
        '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
        '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
        '3fad0761 353c7086 a272c240 88be9476 9fd16650',
      ],
    });

    defineCurve('curve25519', {
      type: 'mont',
      prime: 'p25519',
      p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
      a: '76d06',
      b: '1',
      n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
      hash: hash.sha256,
      gRed: false,
      g: [
        '9',
      ],
    });

    defineCurve('ed25519', {
      type: 'edwards',
      prime: 'p25519',
      p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
      a: '-1',
      c: '1',
      // -121665 * (121666^(-1)) (mod P)
      d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
      n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
      hash: hash.sha256,
      gRed: false,
      g: [
        '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

        // 4/5
        '6666666666666666666666666666666666666666666666666666666666666658',
      ],
    });

    var pre;
    try {
      pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/(null).crash();
    } catch (e) {
      pre = undefined;
    }

    defineCurve('secp256k1', {
      type: 'short',
      prime: 'k256',
      p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
      a: '0',
      b: '7',
      n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
      h: '1',
      hash: hash.sha256,

      // Precomputed endomorphism
      beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
      lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
      basis: [
        {
          a: '3086d221a7d46bcde86c90e49284eb15',
          b: '-e4437ed6010e88286f547fa90abfe4c3',
        },
        {
          a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
          b: '3086d221a7d46bcde86c90e49284eb15',
        },
      ],

      gRed: false,
      g: [
        '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
        '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
        pre,
      ],
    });
    });





    function HmacDRBG(options) {
      if (!(this instanceof HmacDRBG))
        return new HmacDRBG(options);
      this.hash = options.hash;
      this.predResist = !!options.predResist;

      this.outLen = this.hash.outSize;
      this.minEntropy = options.minEntropy || this.hash.hmacStrength;

      this._reseed = null;
      this.reseedInterval = null;
      this.K = null;
      this.V = null;

      var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');
      var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');
      var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');
      minimalisticAssert(entropy.length >= (this.minEntropy / 8),
             'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
      this._init(entropy, nonce, pers);
    }
    var hmacDrbg = HmacDRBG;

    HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
      var seed = entropy.concat(nonce).concat(pers);

      this.K = new Array(this.outLen / 8);
      this.V = new Array(this.outLen / 8);
      for (var i = 0; i < this.V.length; i++) {
        this.K[i] = 0x00;
        this.V[i] = 0x01;
      }

      this._update(seed);
      this._reseed = 1;
      this.reseedInterval = 0x1000000000000;  // 2^48
    };

    HmacDRBG.prototype._hmac = function hmac() {
      return new hash.hmac(this.hash, this.K);
    };

    HmacDRBG.prototype._update = function update(seed) {
      var kmac = this._hmac()
                     .update(this.V)
                     .update([ 0x00 ]);
      if (seed)
        kmac = kmac.update(seed);
      this.K = kmac.digest();
      this.V = this._hmac().update(this.V).digest();
      if (!seed)
        return;

      this.K = this._hmac()
                   .update(this.V)
                   .update([ 0x01 ])
                   .update(seed)
                   .digest();
      this.V = this._hmac().update(this.V).digest();
    };

    HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
      // Optional entropy enc
      if (typeof entropyEnc !== 'string') {
        addEnc = add;
        add = entropyEnc;
        entropyEnc = null;
      }

      entropy = utils_1.toArray(entropy, entropyEnc);
      add = utils_1.toArray(add, addEnc);

      minimalisticAssert(entropy.length >= (this.minEntropy / 8),
             'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

      this._update(entropy.concat(add || []));
      this._reseed = 1;
    };

    HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
      if (this._reseed > this.reseedInterval)
        throw new Error('Reseed is required');

      // Optional encoding
      if (typeof enc !== 'string') {
        addEnc = add;
        add = enc;
        enc = null;
      }

      // Optional additional data
      if (add) {
        add = utils_1.toArray(add, addEnc || 'hex');
        this._update(add);
      }

      var temp = [];
      while (temp.length < len) {
        this.V = this._hmac().update(this.V).digest();
        temp = temp.concat(this.V);
      }

      var res = temp.slice(0, len);
      this._update(add);
      this._reseed++;
      return utils_1.encode(res, enc);
    };



    var assert$3 = utils_1$1.assert;

    function KeyPair(ec, options) {
      this.ec = ec;
      this.priv = null;
      this.pub = null;

      // KeyPair(ec, { priv: ..., pub: ... })
      if (options.priv)
        this._importPrivate(options.priv, options.privEnc);
      if (options.pub)
        this._importPublic(options.pub, options.pubEnc);
    }
    var key = KeyPair;

    KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
      if (pub instanceof KeyPair)
        return pub;

      return new KeyPair(ec, {
        pub: pub,
        pubEnc: enc,
      });
    };

    KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
      if (priv instanceof KeyPair)
        return priv;

      return new KeyPair(ec, {
        priv: priv,
        privEnc: enc,
      });
    };

    KeyPair.prototype.validate = function validate() {
      var pub = this.getPublic();

      if (pub.isInfinity())
        return { result: false, reason: 'Invalid public key' };
      if (!pub.validate())
        return { result: false, reason: 'Public key is not a point' };
      if (!pub.mul(this.ec.curve.n).isInfinity())
        return { result: false, reason: 'Public key * N != O' };

      return { result: true, reason: null };
    };

    KeyPair.prototype.getPublic = function getPublic(compact, enc) {
      // compact is optional argument
      if (typeof compact === 'string') {
        enc = compact;
        compact = null;
      }

      if (!this.pub)
        this.pub = this.ec.g.mul(this.priv);

      if (!enc)
        return this.pub;

      return this.pub.encode(enc, compact);
    };

    KeyPair.prototype.getPrivate = function getPrivate(enc) {
      if (enc === 'hex')
        return this.priv.toString(16, 2);
      else
        return this.priv;
    };

    KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
      this.priv = new BN$1(key, enc || 16);

      // Ensure that the priv won't be bigger than n, otherwise we may fail
      // in fixed multiplication method
      this.priv = this.priv.umod(this.ec.curve.n);
    };

    KeyPair.prototype._importPublic = function _importPublic(key, enc) {
      if (key.x || key.y) {
        // Montgomery points only have an `x` coordinate.
        // Weierstrass/Edwards points on the other hand have both `x` and
        // `y` coordinates.
        if (this.ec.curve.type === 'mont') {
          assert$3(key.x, 'Need x coordinate');
        } else if (this.ec.curve.type === 'short' ||
                   this.ec.curve.type === 'edwards') {
          assert$3(key.x && key.y, 'Need both x and y coordinate');
        }
        this.pub = this.ec.curve.point(key.x, key.y);
        return;
      }
      this.pub = this.ec.curve.decodePoint(key, enc);
    };

    // ECDH
    KeyPair.prototype.derive = function derive(pub) {
      if(!pub.validate()) {
        assert$3(pub.validate(), 'public point not validated');
      }
      return pub.mul(this.priv).getX();
    };

    // ECDSA
    KeyPair.prototype.sign = function sign(msg, enc, options) {
      return this.ec.sign(msg, this, enc, options);
    };

    KeyPair.prototype.verify = function verify(msg, signature) {
      return this.ec.verify(msg, signature, this);
    };

    KeyPair.prototype.inspect = function inspect() {
      return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
             ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
    };




    var assert$4 = utils_1$1.assert;

    function Signature(options, enc) {
      if (options instanceof Signature)
        return options;

      if (this._importDER(options, enc))
        return;

      assert$4(options.r && options.s, 'Signature without r or s');
      this.r = new BN$1(options.r, 16);
      this.s = new BN$1(options.s, 16);
      if (options.recoveryParam === undefined)
        this.recoveryParam = null;
      else
        this.recoveryParam = options.recoveryParam;
    }
    var signature = Signature;

    function Position() {
      this.place = 0;
    }

    function getLength(buf, p) {
      var initial = buf[p.place++];
      if (!(initial & 0x80)) {
        return initial;
      }
      var octetLen = initial & 0xf;

      // Indefinite length or overflow
      if (octetLen === 0 || octetLen > 4) {
        return false;
      }

      var val = 0;
      for (var i = 0, off = p.place; i < octetLen; i++, off++) {
        val <<= 8;
        val |= buf[off];
        val >>>= 0;
      }

      // Leading zeroes
      if (val <= 0x7f) {
        return false;
      }

      p.place = off;
      return val;
    }

    function rmPadding(buf) {
      var i = 0;
      var len = buf.length - 1;
      while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
        i++;
      }
      if (i === 0) {
        return buf;
      }
      return buf.slice(i);
    }

    Signature.prototype._importDER = function _importDER(data, enc) {
      data = utils_1$1.toArray(data, enc);
      var p = new Position();
      if (data[p.place++] !== 0x30) {
        return false;
      }
      var len = getLength(data, p);
      if (len === false) {
        return false;
      }
      if ((len + p.place) !== data.length) {
        return false;
      }
      if (data[p.place++] !== 0x02) {
        return false;
      }
      var rlen = getLength(data, p);
      if (rlen === false) {
        return false;
      }
      var r = data.slice(p.place, rlen + p.place);
      p.place += rlen;
      if (data[p.place++] !== 0x02) {
        return false;
      }
      var slen = getLength(data, p);
      if (slen === false) {
        return false;
      }
      if (data.length !== slen + p.place) {
        return false;
      }
      var s = data.slice(p.place, slen + p.place);
      if (r[0] === 0) {
        if (r[1] & 0x80) {
          r = r.slice(1);
        } else {
          // Leading zeroes
          return false;
        }
      }
      if (s[0] === 0) {
        if (s[1] & 0x80) {
          s = s.slice(1);
        } else {
          // Leading zeroes
          return false;
        }
      }

      this.r = new BN$1(r);
      this.s = new BN$1(s);
      this.recoveryParam = null;

      return true;
    };

    function constructLength(arr, len) {
      if (len < 0x80) {
        arr.push(len);
        return;
      }
      var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
      arr.push(octets | 0x80);
      while (--octets) {
        arr.push((len >>> (octets << 3)) & 0xff);
      }
      arr.push(len);
    }

    Signature.prototype.toDER = function toDER(enc) {
      var r = this.r.toArray();
      var s = this.s.toArray();

      // Pad values
      if (r[0] & 0x80)
        r = [ 0 ].concat(r);
      // Pad values
      if (s[0] & 0x80)
        s = [ 0 ].concat(s);

      r = rmPadding(r);
      s = rmPadding(s);

      while (!s[0] && !(s[1] & 0x80)) {
        s = s.slice(1);
      }
      var arr = [ 0x02 ];
      constructLength(arr, r.length);
      arr = arr.concat(r);
      arr.push(0x02);
      constructLength(arr, s.length);
      var backHalf = arr.concat(s);
      var res = [ 0x30 ];
      constructLength(res, backHalf.length);
      res = res.concat(backHalf);
      return utils_1$1.encode(res, enc);
    };





    var rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });
    var assert$5 = utils_1$1.assert;




    function EC(options) {
      if (!(this instanceof EC))
        return new EC(options);

      // Shortcut `elliptic.ec(curve-name)`
      if (typeof options === 'string') {
        assert$5(Object.prototype.hasOwnProperty.call(curves_1, options),
          'Unknown curve ' + options);

        options = curves_1[options];
      }

      // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
      if (options instanceof curves_1.PresetCurve)
        options = { curve: options };

      this.curve = options.curve.curve;
      this.n = this.curve.n;
      this.nh = this.n.ushrn(1);
      this.g = this.curve.g;

      // Point on curve
      this.g = options.curve.g;
      this.g.precompute(options.curve.n.bitLength() + 1);

      // Hash for function for DRBG
      this.hash = options.hash || options.curve.hash;
    }
    var ec = EC;

    EC.prototype.keyPair = function keyPair(options) {
      return new key(this, options);
    };

    EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
      return key.fromPrivate(this, priv, enc);
    };

    EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
      return key.fromPublic(this, pub, enc);
    };

    EC.prototype.genKeyPair = function genKeyPair(options) {
      if (!options)
        options = {};

      // Instantiate Hmac_DRBG
      var drbg = new hmacDrbg({
        hash: this.hash,
        pers: options.pers,
        persEnc: options.persEnc || 'utf8',
        entropy: options.entropy || rand(this.hash.hmacStrength),
        entropyEnc: options.entropy && options.entropyEnc || 'utf8',
        nonce: this.n.toArray(),
      });

      var bytes = this.n.byteLength();
      var ns2 = this.n.sub(new BN$1(2));
      for (;;) {
        var priv = new BN$1(drbg.generate(bytes));
        if (priv.cmp(ns2) > 0)
          continue;

        priv.iaddn(1);
        return this.keyFromPrivate(priv);
      }
    };

    EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
      var delta = msg.byteLength() * 8 - this.n.bitLength();
      if (delta > 0)
        msg = msg.ushrn(delta);
      if (!truncOnly && msg.cmp(this.n) >= 0)
        return msg.sub(this.n);
      else
        return msg;
    };

    EC.prototype.sign = function sign(msg, key, enc, options) {
      if (typeof enc === 'object') {
        options = enc;
        enc = null;
      }
      if (!options)
        options = {};

      key = this.keyFromPrivate(key, enc);
      msg = this._truncateToN(new BN$1(msg, 16));

      // Zero-extend key to provide enough entropy
      var bytes = this.n.byteLength();
      var bkey = key.getPrivate().toArray('be', bytes);

      // Zero-extend nonce to have the same byte size as N
      var nonce = msg.toArray('be', bytes);

      // Instantiate Hmac_DRBG
      var drbg = new hmacDrbg({
        hash: this.hash,
        entropy: bkey,
        nonce: nonce,
        pers: options.pers,
        persEnc: options.persEnc || 'utf8',
      });

      // Number of bytes to generate
      var ns1 = this.n.sub(new BN$1(1));

      for (var iter = 0; ; iter++) {
        var k = options.k ?
          options.k(iter) :
          new BN$1(drbg.generate(this.n.byteLength()));
        k = this._truncateToN(k, true);
        if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
          continue;

        var kp = this.g.mul(k);
        if (kp.isInfinity())
          continue;

        var kpX = kp.getX();
        var r = kpX.umod(this.n);
        if (r.cmpn(0) === 0)
          continue;

        var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
        s = s.umod(this.n);
        if (s.cmpn(0) === 0)
          continue;

        var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                            (kpX.cmp(r) !== 0 ? 2 : 0);

        // Use complement of `s`, if it is > `n / 2`
        if (options.canonical && s.cmp(this.nh) > 0) {
          s = this.n.sub(s);
          recoveryParam ^= 1;
        }

        return new signature({ r: r, s: s, recoveryParam: recoveryParam });
      }
    };

    EC.prototype.verify = function verify(msg, signature$1, key, enc) {
      msg = this._truncateToN(new BN$1(msg, 16));
      key = this.keyFromPublic(key, enc);
      signature$1 = new signature(signature$1, 'hex');

      // Perform primitive values validation
      var r = signature$1.r;
      var s = signature$1.s;
      if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
        return false;
      if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
        return false;

      // Validate signature
      var sinv = s.invm(this.n);
      var u1 = sinv.mul(msg).umod(this.n);
      var u2 = sinv.mul(r).umod(this.n);
      var p;

      if (!this.curve._maxwellTrick) {
        p = this.g.mulAdd(u1, key.getPublic(), u2);
        if (p.isInfinity())
          return false;

        return p.getX().umod(this.n).cmp(r) === 0;
      }

      // NOTE: Greg Maxwell's trick, inspired by:
      // https://git.io/vad3K

      p = this.g.jmulAdd(u1, key.getPublic(), u2);
      if (p.isInfinity())
        return false;

      // Compare `p.x` of Jacobian point with `r`,
      // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
      // inverse of `p.z^2`
      return p.eqXToP(r);
    };

    EC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {
      assert$5((3 & j) === j, 'The recovery param is more than two bits');
      signature$1 = new signature(signature$1, enc);

      var n = this.n;
      var e = new BN$1(msg);
      var r = signature$1.r;
      var s = signature$1.s;

      // A set LSB signifies that the y-coordinate is odd
      var isYOdd = j & 1;
      var isSecondKey = j >> 1;
      if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
        throw new Error('Unable to find sencond key candinate');

      // 1.1. Let x = r + jn.
      if (isSecondKey)
        r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
      else
        r = this.curve.pointFromX(r, isYOdd);

      var rInv = signature$1.r.invm(n);
      var s1 = n.sub(e).mul(rInv).umod(n);
      var s2 = s.mul(rInv).umod(n);

      // 1.6.1 Compute Q = r^-1 (sR -  eG)
      //               Q = r^-1 (sR + -eG)
      return this.g.mulAdd(s1, r, s2);
    };

    EC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {
      signature$1 = new signature(signature$1, enc);
      if (signature$1.recoveryParam !== null)
        return signature$1.recoveryParam;

      for (var i = 0; i < 4; i++) {
        var Qprime;
        try {
          Qprime = this.recoverPubKey(e, signature$1, i);
        } catch (e) {
          continue;
        }

        if (Qprime.eq(Q))
          return i;
      }
      throw new Error('Unable to find valid recovery factor');
    };

    var elliptic_1 = createCommonjsModule(function (module, exports) {

    var elliptic = exports;

    elliptic.version = /*RicMoo:ethers*/{ version: "6.5.4" }.version;
    elliptic.utils = utils_1$1;
    elliptic.rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });
    elliptic.curve = curve_1;
    elliptic.curves = curves_1;

    // Protocols
    elliptic.ec = ec;
    elliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/(null);
    });

    var EC$1 = elliptic_1.ec;

    const version$6 = "signing-key/5.7.0";

    const logger$7 = new Logger(version$6);
    let _curve = null;
    function getCurve() {
        if (!_curve) {
            _curve = new EC$1("secp256k1");
        }
        return _curve;
    }
    class SigningKey {
        constructor(privateKey) {
            defineReadOnly(this, "curve", "secp256k1");
            defineReadOnly(this, "privateKey", hexlify(privateKey));
            if (hexDataLength(this.privateKey) !== 32) {
                logger$7.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
            }
            const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));
            defineReadOnly(this, "publicKey", "0x" + keyPair.getPublic(false, "hex"));
            defineReadOnly(this, "compressedPublicKey", "0x" + keyPair.getPublic(true, "hex"));
            defineReadOnly(this, "_isSigningKey", true);
        }
        _addPoint(other) {
            const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));
            const p1 = getCurve().keyFromPublic(arrayify(other));
            return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
        }
        signDigest(digest) {
            const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));
            const digestBytes = arrayify(digest);
            if (digestBytes.length !== 32) {
                logger$7.throwArgumentError("bad digest length", "digest", digest);
            }
            const signature = keyPair.sign(digestBytes, { canonical: true });
            return splitSignature({
                recoveryParam: signature.recoveryParam,
                r: hexZeroPad("0x" + signature.r.toString(16), 32),
                s: hexZeroPad("0x" + signature.s.toString(16), 32),
            });
        }
        computeSharedSecret(otherKey) {
            const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));
            const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));
            return hexZeroPad("0x" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);
        }
        static isSigningKey(value) {
            return !!(value && value._isSigningKey);
        }
    }
    function computePublicKey(key, compressed) {
        const bytes = arrayify(key);
        if (bytes.length === 32) {
            const signingKey = new SigningKey(bytes);
            if (compressed) {
                return "0x" + getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
            }
            return signingKey.publicKey;
        }
        else if (bytes.length === 33) {
            if (compressed) {
                return hexlify(bytes);
            }
            return "0x" + getCurve().keyFromPublic(bytes).getPublic(false, "hex");
        }
        else if (bytes.length === 65) {
            if (!compressed) {
                return hexlify(bytes);
            }
            return "0x" + getCurve().keyFromPublic(bytes).getPublic(true, "hex");
        }
        return logger$7.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
    }

    const version$5 = "transactions/5.7.0";

    const logger$6 = new Logger(version$5);
    var TransactionTypes;
    (function (TransactionTypes) {
        TransactionTypes[TransactionTypes["legacy"] = 0] = "legacy";
        TransactionTypes[TransactionTypes["eip2930"] = 1] = "eip2930";
        TransactionTypes[TransactionTypes["eip1559"] = 2] = "eip1559";
    })(TransactionTypes || (TransactionTypes = {}));
    // Legacy Transaction Fields
    const transactionFields = [
        { name: "nonce", maxLength: 32, numeric: true },
        { name: "gasPrice", maxLength: 32, numeric: true },
        { name: "gasLimit", maxLength: 32, numeric: true },
        { name: "to", length: 20 },
        { name: "value", maxLength: 32, numeric: true },
        { name: "data" },
    ];
    const allowedTransactionKeys = {
        chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true
    };
    function computeAddress(key) {
        const publicKey = computePublicKey(key);
        return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));
    }
    function formatNumber(value, name) {
        const result = stripZeros(BigNumber.from(value).toHexString());
        if (result.length > 32) {
            logger$6.throwArgumentError("invalid length for " + name, ("transaction:" + name), value);
        }
        return result;
    }
    function accessSetify(addr, storageKeys) {
        return {
            address: getAddress(addr),
            storageKeys: (storageKeys || []).map((storageKey, index) => {
                if (hexDataLength(storageKey) !== 32) {
                    logger$6.throwArgumentError("invalid access list storageKey", `accessList[${addr}:${index}]`, storageKey);
                }
                return storageKey.toLowerCase();
            })
        };
    }
    function accessListify(value) {
        if (Array.isArray(value)) {
            return value.map((set, index) => {
                if (Array.isArray(set)) {
                    if (set.length > 2) {
                        logger$6.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${index}]`, set);
                    }
                    return accessSetify(set[0], set[1]);
                }
                return accessSetify(set.address, set.storageKeys);
            });
        }
        const result = Object.keys(value).map((addr) => {
            const storageKeys = value[addr].reduce((accum, storageKey) => {
                accum[storageKey] = true;
                return accum;
            }, {});
            return accessSetify(addr, Object.keys(storageKeys).sort());
        });
        result.sort((a, b) => (a.address.localeCompare(b.address)));
        return result;
    }
    function formatAccessList(value) {
        return accessListify(value).map((set) => [set.address, set.storageKeys]);
    }
    function _serializeEip1559(transaction, signature) {
        // If there is an explicit gasPrice, make sure it matches the
        // EIP-1559 fees; otherwise they may not understand what they
        // think they are setting in terms of fee.
        if (transaction.gasPrice != null) {
            const gasPrice = BigNumber.from(transaction.gasPrice);
            const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);
            if (!gasPrice.eq(maxFeePerGas)) {
                logger$6.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                    gasPrice, maxFeePerGas
                });
            }
        }
        const fields = [
            formatNumber(transaction.chainId || 0, "chainId"),
            formatNumber(transaction.nonce || 0, "nonce"),
            formatNumber(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
            formatNumber(transaction.maxFeePerGas || 0, "maxFeePerGas"),
            formatNumber(transaction.gasLimit || 0, "gasLimit"),
            ((transaction.to != null) ? getAddress(transaction.to) : "0x"),
            formatNumber(transaction.value || 0, "value"),
            (transaction.data || "0x"),
            (formatAccessList(transaction.accessList || []))
        ];
        if (signature) {
            const sig = splitSignature(signature);
            fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
            fields.push(stripZeros(sig.r));
            fields.push(stripZeros(sig.s));
        }
        return hexConcat(["0x02", encode(fields)]);
    }
    function _serializeEip2930(transaction, signature) {
        const fields = [
            formatNumber(transaction.chainId || 0, "chainId"),
            formatNumber(transaction.nonce || 0, "nonce"),
            formatNumber(transaction.gasPrice || 0, "gasPrice"),
            formatNumber(transaction.gasLimit || 0, "gasLimit"),
            ((transaction.to != null) ? getAddress(transaction.to) : "0x"),
            formatNumber(transaction.value || 0, "value"),
            (transaction.data || "0x"),
            (formatAccessList(transaction.accessList || []))
        ];
        if (signature) {
            const sig = splitSignature(signature);
            fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
            fields.push(stripZeros(sig.r));
            fields.push(stripZeros(sig.s));
        }
        return hexConcat(["0x01", encode(fields)]);
    }
    // Legacy Transactions and EIP-155
    function _serialize(transaction, signature) {
        checkProperties(transaction, allowedTransactionKeys);
        const raw = [];
        transactionFields.forEach(function (fieldInfo) {
            let value = transaction[fieldInfo.name] || ([]);
            const options = {};
            if (fieldInfo.numeric) {
                options.hexPad = "left";
            }
            value = arrayify(hexlify(value, options));
            // Fixed-width field
            if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {
                logger$6.throwArgumentError("invalid length for " + fieldInfo.name, ("transaction:" + fieldInfo.name), value);
            }
            // Variable-width (with a maximum)
            if (fieldInfo.maxLength) {
                value = stripZeros(value);
                if (value.length > fieldInfo.maxLength) {
                    logger$6.throwArgumentError("invalid length for " + fieldInfo.name, ("transaction:" + fieldInfo.name), value);
                }
            }
            raw.push(hexlify(value));
        });
        let chainId = 0;
        if (transaction.chainId != null) {
            // A chainId was provided; if non-zero we'll use EIP-155
            chainId = transaction.chainId;
            if (typeof (chainId) !== "number") {
                logger$6.throwArgumentError("invalid transaction.chainId", "transaction", transaction);
            }
        }
        else if (signature && !isBytesLike(signature) && signature.v > 28) {
            // No chainId provided, but the signature is signing with EIP-155; derive chainId
            chainId = Math.floor((signature.v - 35) / 2);
        }
        // We have an EIP-155 transaction (chainId was specified and non-zero)
        if (chainId !== 0) {
            raw.push(hexlify(chainId)); // @TODO: hexValue?
            raw.push("0x");
            raw.push("0x");
        }
        // Requesting an unsigned transaction
        if (!signature) {
            return encode(raw);
        }
        // The splitSignature will ensure the transaction has a recoveryParam in the
        // case that the signTransaction function only adds a v.
        const sig = splitSignature(signature);
        // We pushed a chainId and null r, s on for hashing only; remove those
        let v = 27 + sig.recoveryParam;
        if (chainId !== 0) {
            raw.pop();
            raw.pop();
            raw.pop();
            v += chainId * 2 + 8;
            // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!
            if (sig.v > 28 && sig.v !== v) {
                logger$6.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
            }
        }
        else if (sig.v !== v) {
            logger$6.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
        }
        raw.push(hexlify(v));
        raw.push(stripZeros(arrayify(sig.r)));
        raw.push(stripZeros(arrayify(sig.s)));
        return encode(raw);
    }
    function serialize(transaction, signature) {
        // Legacy and EIP-155 Transactions
        if (transaction.type == null || transaction.type === 0) {
            if (transaction.accessList != null) {
                logger$6.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", transaction);
            }
            return _serialize(transaction, signature);
        }
        // Typed Transactions (EIP-2718)
        switch (transaction.type) {
            case 1:
                return _serializeEip2930(transaction, signature);
            case 2:
                return _serializeEip1559(transaction, signature);
        }
        return logger$6.throwError(`unsupported transaction type: ${transaction.type}`, Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "serializeTransaction",
            transactionType: transaction.type
        });
    }

    const version$4 = "wordlists/5.7.0";

    const logger$5 = new Logger(version$4);
    class Wordlist {
        constructor(locale) {
            logger$5.checkAbstract(new.target, Wordlist);
            defineReadOnly(this, "locale", locale);
        }
        // Subclasses may override this
        split(mnemonic) {
            return mnemonic.toLowerCase().split(/ +/g);
        }
        // Subclasses may override this
        join(words) {
            return words.join(" ");
        }
        static check(wordlist) {
            const words = [];
            for (let i = 0; i < 2048; i++) {
                const word = wordlist.getWord(i);
                /* istanbul ignore if */
                if (i !== wordlist.getWordIndex(word)) {
                    return "0x";
                }
                words.push(word);
            }
            return id(words.join("\n") + "\n");
        }
        static register(lang, name) {
            if (!name) {
                name = lang.locale;
            }
        }
    }

    const words = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";
    let wordlist = null;
    function loadWords(lang) {
        if (wordlist != null) {
            return;
        }
        wordlist = words.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" ");
        // Verify the computed list matches the official list
        /* istanbul ignore if */
        if (Wordlist.check(lang) !== "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60") {
            wordlist = null;
            throw new Error("BIP39 Wordlist for en (English) FAILED");
        }
    }
    class LangEn extends Wordlist {
        constructor() {
            super("en");
        }
        getWord(index) {
            loadWords(this);
            return wordlist[index];
        }
        getWordIndex(word) {
            loadWords(this);
            return wordlist.indexOf(word);
        }
    }
    const langEn = new LangEn();
    Wordlist.register(langEn);

    const wordlists = {
        en: langEn
    };

    const version$3 = "hdnode/5.7.0";

    const logger$4 = new Logger(version$3);
    const N = BigNumber.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");
    // "Bitcoin seed"
    const MasterSecret = toUtf8Bytes("Bitcoin seed");
    const HardenedBit = 0x80000000;
    // Returns a byte with the MSB bits set
    function getUpperMask(bits) {
        return ((1 << bits) - 1) << (8 - bits);
    }
    // Returns a byte with the LSB bits set
    function getLowerMask(bits) {
        return (1 << bits) - 1;
    }
    function bytes32(value) {
        return hexZeroPad(hexlify(value), 32);
    }
    function base58check(data) {
        return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));
    }
    function getWordlist(wordlist) {
        if (wordlist == null) {
            return wordlists["en"];
        }
        if (typeof (wordlist) === "string") {
            const words = wordlists[wordlist];
            if (words == null) {
                logger$4.throwArgumentError("unknown locale", "wordlist", wordlist);
            }
            return words;
        }
        return wordlist;
    }
    const _constructorGuard = {};
    const defaultPath = "m/44'/60'/0'/0/0";
    class HDNode {
        /**
         *  This constructor should not be called directly.
         *
         *  Please use:
         *   - fromMnemonic
         *   - fromSeed
         */
        constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {
            /* istanbul ignore if */
            if (constructorGuard !== _constructorGuard) {
                throw new Error("HDNode constructor cannot be called directly");
            }
            if (privateKey) {
                const signingKey = new SigningKey(privateKey);
                defineReadOnly(this, "privateKey", signingKey.privateKey);
                defineReadOnly(this, "publicKey", signingKey.compressedPublicKey);
            }
            else {
                defineReadOnly(this, "privateKey", null);
                defineReadOnly(this, "publicKey", hexlify(publicKey));
            }
            defineReadOnly(this, "parentFingerprint", parentFingerprint);
            defineReadOnly(this, "fingerprint", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));
            defineReadOnly(this, "address", computeAddress(this.publicKey));
            defineReadOnly(this, "chainCode", chainCode);
            defineReadOnly(this, "index", index);
            defineReadOnly(this, "depth", depth);
            if (mnemonicOrPath == null) {
                // From a source that does not preserve the path (e.g. extended keys)
                defineReadOnly(this, "mnemonic", null);
                defineReadOnly(this, "path", null);
            }
            else if (typeof (mnemonicOrPath) === "string") {
                // From a source that does not preserve the mnemonic (e.g. neutered)
                defineReadOnly(this, "mnemonic", null);
                defineReadOnly(this, "path", mnemonicOrPath);
            }
            else {
                // From a fully qualified source
                defineReadOnly(this, "mnemonic", mnemonicOrPath);
                defineReadOnly(this, "path", mnemonicOrPath.path);
            }
        }
        get extendedKey() {
            // We only support the mainnet values for now, but if anyone needs
            // testnet values, let me know. I believe current sentiment is that
            // we should always use mainnet, and use BIP-44 to derive the network
            //   - Mainnet: public=0x0488B21E, private=0x0488ADE4
            //   - Testnet: public=0x043587CF, private=0x04358394
            if (this.depth >= 256) {
                throw new Error("Depth too large!");
            }
            return base58check(concat([
                ((this.privateKey != null) ? "0x0488ADE4" : "0x0488B21E"),
                hexlify(this.depth),
                this.parentFingerprint,
                hexZeroPad(hexlify(this.index), 4),
                this.chainCode,
                ((this.privateKey != null) ? concat(["0x00", this.privateKey]) : this.publicKey),
            ]));
        }
        neuter() {
            return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);
        }
        _derive(index) {
            if (index > 0xffffffff) {
                throw new Error("invalid index - " + String(index));
            }
            // Base path
            let path = this.path;
            if (path) {
                path += "/" + (index & ~HardenedBit);
            }
            const data = new Uint8Array(37);
            if (index & HardenedBit) {
                if (!this.privateKey) {
                    throw new Error("cannot derive child of neutered node");
                }
                // Data = 0x00 || ser_256(k_par)
                data.set(arrayify(this.privateKey), 1);
                // Hardened path
                if (path) {
                    path += "'";
                }
            }
            else {
                // Data = ser_p(point(k_par))
                data.set(arrayify(this.publicKey));
            }
            // Data += ser_32(i)
            for (let i = 24; i >= 0; i -= 8) {
                data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);
            }
            const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));
            const IL = I.slice(0, 32);
            const IR = I.slice(32);
            // The private key
            let ki = null;
            // The public key
            let Ki = null;
            if (this.privateKey) {
                ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));
            }
            else {
                const ek = new SigningKey(hexlify(IL));
                Ki = ek._addPoint(this.publicKey);
            }
            let mnemonicOrPath = path;
            const srcMnemonic = this.mnemonic;
            if (srcMnemonic) {
                mnemonicOrPath = Object.freeze({
                    phrase: srcMnemonic.phrase,
                    path: path,
                    locale: (srcMnemonic.locale || "en")
                });
            }
            return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);
        }
        derivePath(path) {
            const components = path.split("/");
            if (components.length === 0 || (components[0] === "m" && this.depth !== 0)) {
                throw new Error("invalid path - " + path);
            }
            if (components[0] === "m") {
                components.shift();
            }
            let result = this;
            for (let i = 0; i < components.length; i++) {
                const component = components[i];
                if (component.match(/^[0-9]+'$/)) {
                    const index = parseInt(component.substring(0, component.length - 1));
                    if (index >= HardenedBit) {
                        throw new Error("invalid path index - " + component);
                    }
                    result = result._derive(HardenedBit + index);
                }
                else if (component.match(/^[0-9]+$/)) {
                    const index = parseInt(component);
                    if (index >= HardenedBit) {
                        throw new Error("invalid path index - " + component);
                    }
                    result = result._derive(index);
                }
                else {
                    throw new Error("invalid path component - " + component);
                }
            }
            return result;
        }
        static _fromSeed(seed, mnemonic) {
            const seedArray = arrayify(seed);
            if (seedArray.length < 16 || seedArray.length > 64) {
                throw new Error("invalid seed");
            }
            const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));
            return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, "0x00000000", bytes32(I.slice(32)), 0, 0, mnemonic);
        }
        static fromMnemonic(mnemonic, password, wordlist) {
            // If a locale name was passed in, find the associated wordlist
            wordlist = getWordlist(wordlist);
            // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)
            mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);
            return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {
                phrase: mnemonic,
                path: "m",
                locale: wordlist.locale
            });
        }
        static fromSeed(seed) {
            return HDNode._fromSeed(seed, null);
        }
        static fromExtendedKey(extendedKey) {
            const bytes = Base58.decode(extendedKey);
            if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {
                logger$4.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
            }
            const depth = bytes[4];
            const parentFingerprint = hexlify(bytes.slice(5, 9));
            const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);
            const chainCode = hexlify(bytes.slice(13, 45));
            const key = bytes.slice(45, 78);
            switch (hexlify(bytes.slice(0, 4))) {
                // Public Key
                case "0x0488b21e":
                case "0x043587cf":
                    return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);
                // Private Key
                case "0x0488ade4":
                case "0x04358394 ":
                    if (key[0] !== 0) {
                        break;
                    }
                    return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);
            }
            return logger$4.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
        }
    }
    function mnemonicToSeed(mnemonic, password) {
        if (!password) {
            password = "";
        }
        const salt = toUtf8Bytes("mnemonic" + password, UnicodeNormalizationForm.NFKD);
        return pbkdf2$1(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, "sha512");
    }
    function mnemonicToEntropy(mnemonic, wordlist) {
        wordlist = getWordlist(wordlist);
        logger$4.checkNormalize();
        const words = wordlist.split(mnemonic);
        if ((words.length % 3) !== 0) {
            throw new Error("invalid mnemonic");
        }
        const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));
        let offset = 0;
        for (let i = 0; i < words.length; i++) {
            let index = wordlist.getWordIndex(words[i].normalize("NFKD"));
            if (index === -1) {
                throw new Error("invalid mnemonic");
            }
            for (let bit = 0; bit < 11; bit++) {
                if (index & (1 << (10 - bit))) {
                    entropy[offset >> 3] |= (1 << (7 - (offset % 8)));
                }
                offset++;
            }
        }
        const entropyBits = 32 * words.length / 3;
        const checksumBits = words.length / 3;
        const checksumMask = getUpperMask(checksumBits);
        const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;
        if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {
            throw new Error("invalid checksum");
        }
        return hexlify(entropy.slice(0, entropyBits / 8));
    }
    function entropyToMnemonic(entropy, wordlist) {
        wordlist = getWordlist(wordlist);
        entropy = arrayify(entropy);
        if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {
            throw new Error("invalid entropy");
        }
        const indices = [0];
        let remainingBits = 11;
        for (let i = 0; i < entropy.length; i++) {
            // Consume the whole byte (with still more to go)
            if (remainingBits > 8) {
                indices[indices.length - 1] <<= 8;
                indices[indices.length - 1] |= entropy[i];
                remainingBits -= 8;
                // This byte will complete an 11-bit index
            }
            else {
                indices[indices.length - 1] <<= remainingBits;
                indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);
                // Start the next word
                indices.push(entropy[i] & getLowerMask(8 - remainingBits));
                remainingBits += 3;
            }
        }
        // Compute the checksum bits
        const checksumBits = entropy.length / 4;
        const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);
        // Shift the checksum into the word indices
        indices[indices.length - 1] <<= checksumBits;
        indices[indices.length - 1] |= (checksum >> (8 - checksumBits));
        return wordlist.join(indices.map((index) => wordlist.getWord(index)));
    }

    const version$2 = "random/5.7.0";

    const logger$3 = new Logger(version$2);
    // Debugging line for testing browser lib in node
    //const window = { crypto: { getRandomValues: () => { } } };
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis
    function getGlobal() {
        if (typeof self !== 'undefined') {
            return self;
        }
        if (typeof window !== 'undefined') {
            return window;
        }
        if (typeof global !== 'undefined') {
            return global;
        }
        throw new Error('unable to locate global object');
    }
    const anyGlobal = getGlobal();
    let crypto = anyGlobal.crypto || anyGlobal.msCrypto;
    if (!crypto || !crypto.getRandomValues) {
        logger$3.warn("WARNING: Missing strong random number source");
        crypto = {
            getRandomValues: function (buffer) {
                return logger$3.throwError("no secure random source avaialble", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "crypto.getRandomValues"
                });
            }
        };
    }
    function randomBytes(length) {
        if (length <= 0 || length > 1024 || (length % 1) || length != length) {
            logger$3.throwArgumentError("invalid length", "length", length);
        }
        const result = new Uint8Array(length);
        crypto.getRandomValues(result);
        return arrayify(result);
    }

    var aesJs = {exports: {}};

    (function (module, exports) {

    (function(root) {

        function checkInt(value) {
            return (parseInt(value) === value);
        }

        function checkInts(arrayish) {
            if (!checkInt(arrayish.length)) { return false; }

            for (var i = 0; i < arrayish.length; i++) {
                if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {
                    return false;
                }
            }

            return true;
        }

        function coerceArray(arg, copy) {

            // ArrayBuffer view
            if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {

                if (copy) {
                    if (arg.slice) {
                        arg = arg.slice();
                    } else {
                        arg = Array.prototype.slice.call(arg);
                    }
                }

                return arg;
            }

            // It's an array; check it is a valid representation of a byte
            if (Array.isArray(arg)) {
                if (!checkInts(arg)) {
                    throw new Error('Array contains invalid value: ' + arg);
                }

                return new Uint8Array(arg);
            }

            // Something else, but behaves like an array (maybe a Buffer? Arguments?)
            if (checkInt(arg.length) && checkInts(arg)) {
                return new Uint8Array(arg);
            }

            throw new Error('unsupported array-like object');
        }

        function createArray(length) {
            return new Uint8Array(length);
        }

        function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {
            if (sourceStart != null || sourceEnd != null) {
                if (sourceArray.slice) {
                    sourceArray = sourceArray.slice(sourceStart, sourceEnd);
                } else {
                    sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);
                }
            }
            targetArray.set(sourceArray, targetStart);
        }



        var convertUtf8 = (function() {
            function toBytes(text) {
                var result = [], i = 0;
                text = encodeURI(text);
                while (i < text.length) {
                    var c = text.charCodeAt(i++);

                    // if it is a % sign, encode the following 2 bytes as a hex value
                    if (c === 37) {
                        result.push(parseInt(text.substr(i, 2), 16));
                        i += 2;

                    // otherwise, just the actual byte
                    } else {
                        result.push(c);
                    }
                }

                return coerceArray(result);
            }

            function fromBytes(bytes) {
                var result = [], i = 0;

                while (i < bytes.length) {
                    var c = bytes[i];

                    if (c < 128) {
                        result.push(String.fromCharCode(c));
                        i++;
                    } else if (c > 191 && c < 224) {
                        result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));
                        i += 2;
                    } else {
                        result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));
                        i += 3;
                    }
                }

                return result.join('');
            }

            return {
                toBytes: toBytes,
                fromBytes: fromBytes,
            }
        })();

        var convertHex = (function() {
            function toBytes(text) {
                var result = [];
                for (var i = 0; i < text.length; i += 2) {
                    result.push(parseInt(text.substr(i, 2), 16));
                }

                return result;
            }

            // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html
            var Hex = '0123456789abcdef';

            function fromBytes(bytes) {
                    var result = [];
                    for (var i = 0; i < bytes.length; i++) {
                        var v = bytes[i];
                        result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);
                    }
                    return result.join('');
            }

            return {
                toBytes: toBytes,
                fromBytes: fromBytes,
            }
        })();


        // Number of rounds by keysize
        var numberOfRounds = {16: 10, 24: 12, 32: 14};

        // Round constant words
        var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];

        // S-box and Inverse S-box (S is for Substitution)
        var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];
        var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];

        // Transformations for encryption
        var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];
        var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];
        var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];
        var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];

        // Transformations for decryption
        var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];
        var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];
        var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];
        var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];

        // Transformations for decryption key expansion
        var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];
        var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];
        var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];
        var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];

        function convertToInt32(bytes) {
            var result = [];
            for (var i = 0; i < bytes.length; i += 4) {
                result.push(
                    (bytes[i    ] << 24) |
                    (bytes[i + 1] << 16) |
                    (bytes[i + 2] <<  8) |
                     bytes[i + 3]
                );
            }
            return result;
        }

        var AES = function(key) {
            if (!(this instanceof AES)) {
                throw Error('AES must be instanitated with `new`');
            }

            Object.defineProperty(this, 'key', {
                value: coerceArray(key, true)
            });

            this._prepare();
        };


        AES.prototype._prepare = function() {

            var rounds = numberOfRounds[this.key.length];
            if (rounds == null) {
                throw new Error('invalid key size (must be 16, 24 or 32 bytes)');
            }

            // encryption round keys
            this._Ke = [];

            // decryption round keys
            this._Kd = [];

            for (var i = 0; i <= rounds; i++) {
                this._Ke.push([0, 0, 0, 0]);
                this._Kd.push([0, 0, 0, 0]);
            }

            var roundKeyCount = (rounds + 1) * 4;
            var KC = this.key.length / 4;

            // convert the key into ints
            var tk = convertToInt32(this.key);

            // copy values into round key arrays
            var index;
            for (var i = 0; i < KC; i++) {
                index = i >> 2;
                this._Ke[index][i % 4] = tk[i];
                this._Kd[rounds - index][i % 4] = tk[i];
            }

            // key expansion (fips-197 section 5.2)
            var rconpointer = 0;
            var t = KC, tt;
            while (t < roundKeyCount) {
                tt = tk[KC - 1];
                tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^
                          (S[(tt >>  8) & 0xFF] << 16) ^
                          (S[ tt        & 0xFF] <<  8) ^
                           S[(tt >> 24) & 0xFF]        ^
                          (rcon[rconpointer] << 24));
                rconpointer += 1;

                // key expansion (for non-256 bit)
                if (KC != 8) {
                    for (var i = 1; i < KC; i++) {
                        tk[i] ^= tk[i - 1];
                    }

                // key expansion for 256-bit keys is "slightly different" (fips-197)
                } else {
                    for (var i = 1; i < (KC / 2); i++) {
                        tk[i] ^= tk[i - 1];
                    }
                    tt = tk[(KC / 2) - 1];

                    tk[KC / 2] ^= (S[ tt        & 0xFF]        ^
                                  (S[(tt >>  8) & 0xFF] <<  8) ^
                                  (S[(tt >> 16) & 0xFF] << 16) ^
                                  (S[(tt >> 24) & 0xFF] << 24));

                    for (var i = (KC / 2) + 1; i < KC; i++) {
                        tk[i] ^= tk[i - 1];
                    }
                }

                // copy values into round key arrays
                var i = 0, r, c;
                while (i < KC && t < roundKeyCount) {
                    r = t >> 2;
                    c = t % 4;
                    this._Ke[r][c] = tk[i];
                    this._Kd[rounds - r][c] = tk[i++];
                    t++;
                }
            }

            // inverse-cipher-ify the decryption round key (fips-197 section 5.3)
            for (var r = 1; r < rounds; r++) {
                for (var c = 0; c < 4; c++) {
                    tt = this._Kd[r][c];
                    this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^
                                      U2[(tt >> 16) & 0xFF] ^
                                      U3[(tt >>  8) & 0xFF] ^
                                      U4[ tt        & 0xFF]);
                }
            }
        };

        AES.prototype.encrypt = function(plaintext) {
            if (plaintext.length != 16) {
                throw new Error('invalid plaintext size (must be 16 bytes)');
            }

            var rounds = this._Ke.length - 1;
            var a = [0, 0, 0, 0];

            // convert plaintext to (ints ^ key)
            var t = convertToInt32(plaintext);
            for (var i = 0; i < 4; i++) {
                t[i] ^= this._Ke[0][i];
            }

            // apply round transforms
            for (var r = 1; r < rounds; r++) {
                for (var i = 0; i < 4; i++) {
                    a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^
                            T2[(t[(i + 1) % 4] >> 16) & 0xff] ^
                            T3[(t[(i + 2) % 4] >>  8) & 0xff] ^
                            T4[ t[(i + 3) % 4]        & 0xff] ^
                            this._Ke[r][i]);
                }
                t = a.slice();
            }

            // the last round is special
            var result = createArray(16), tt;
            for (var i = 0; i < 4; i++) {
                tt = this._Ke[rounds][i];
                result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;
                result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;
                result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;
                result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;
            }

            return result;
        };

        AES.prototype.decrypt = function(ciphertext) {
            if (ciphertext.length != 16) {
                throw new Error('invalid ciphertext size (must be 16 bytes)');
            }

            var rounds = this._Kd.length - 1;
            var a = [0, 0, 0, 0];

            // convert plaintext to (ints ^ key)
            var t = convertToInt32(ciphertext);
            for (var i = 0; i < 4; i++) {
                t[i] ^= this._Kd[0][i];
            }

            // apply round transforms
            for (var r = 1; r < rounds; r++) {
                for (var i = 0; i < 4; i++) {
                    a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^
                            T6[(t[(i + 3) % 4] >> 16) & 0xff] ^
                            T7[(t[(i + 2) % 4] >>  8) & 0xff] ^
                            T8[ t[(i + 1) % 4]        & 0xff] ^
                            this._Kd[r][i]);
                }
                t = a.slice();
            }

            // the last round is special
            var result = createArray(16), tt;
            for (var i = 0; i < 4; i++) {
                tt = this._Kd[rounds][i];
                result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;
                result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;
                result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;
                result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;
            }

            return result;
        };


        /**
         *  Mode Of Operation - Electonic Codebook (ECB)
         */
        var ModeOfOperationECB = function(key) {
            if (!(this instanceof ModeOfOperationECB)) {
                throw Error('AES must be instanitated with `new`');
            }

            this.description = "Electronic Code Block";
            this.name = "ecb";

            this._aes = new AES(key);
        };

        ModeOfOperationECB.prototype.encrypt = function(plaintext) {
            plaintext = coerceArray(plaintext);

            if ((plaintext.length % 16) !== 0) {
                throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
            }

            var ciphertext = createArray(plaintext.length);
            var block = createArray(16);

            for (var i = 0; i < plaintext.length; i += 16) {
                copyArray(plaintext, block, 0, i, i + 16);
                block = this._aes.encrypt(block);
                copyArray(block, ciphertext, i);
            }

            return ciphertext;
        };

        ModeOfOperationECB.prototype.decrypt = function(ciphertext) {
            ciphertext = coerceArray(ciphertext);

            if ((ciphertext.length % 16) !== 0) {
                throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
            }

            var plaintext = createArray(ciphertext.length);
            var block = createArray(16);

            for (var i = 0; i < ciphertext.length; i += 16) {
                copyArray(ciphertext, block, 0, i, i + 16);
                block = this._aes.decrypt(block);
                copyArray(block, plaintext, i);
            }

            return plaintext;
        };


        /**
         *  Mode Of Operation - Cipher Block Chaining (CBC)
         */
        var ModeOfOperationCBC = function(key, iv) {
            if (!(this instanceof ModeOfOperationCBC)) {
                throw Error('AES must be instanitated with `new`');
            }

            this.description = "Cipher Block Chaining";
            this.name = "cbc";

            if (!iv) {
                iv = createArray(16);

            } else if (iv.length != 16) {
                throw new Error('invalid initialation vector size (must be 16 bytes)');
            }

            this._lastCipherblock = coerceArray(iv, true);

            this._aes = new AES(key);
        };

        ModeOfOperationCBC.prototype.encrypt = function(plaintext) {
            plaintext = coerceArray(plaintext);

            if ((plaintext.length % 16) !== 0) {
                throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
            }

            var ciphertext = createArray(plaintext.length);
            var block = createArray(16);

            for (var i = 0; i < plaintext.length; i += 16) {
                copyArray(plaintext, block, 0, i, i + 16);

                for (var j = 0; j < 16; j++) {
                    block[j] ^= this._lastCipherblock[j];
                }

                this._lastCipherblock = this._aes.encrypt(block);
                copyArray(this._lastCipherblock, ciphertext, i);
            }

            return ciphertext;
        };

        ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {
            ciphertext = coerceArray(ciphertext);

            if ((ciphertext.length % 16) !== 0) {
                throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
            }

            var plaintext = createArray(ciphertext.length);
            var block = createArray(16);

            for (var i = 0; i < ciphertext.length; i += 16) {
                copyArray(ciphertext, block, 0, i, i + 16);
                block = this._aes.decrypt(block);

                for (var j = 0; j < 16; j++) {
                    plaintext[i + j] = block[j] ^ this._lastCipherblock[j];
                }

                copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);
            }

            return plaintext;
        };


        /**
         *  Mode Of Operation - Cipher Feedback (CFB)
         */
        var ModeOfOperationCFB = function(key, iv, segmentSize) {
            if (!(this instanceof ModeOfOperationCFB)) {
                throw Error('AES must be instanitated with `new`');
            }

            this.description = "Cipher Feedback";
            this.name = "cfb";

            if (!iv) {
                iv = createArray(16);

            } else if (iv.length != 16) {
                throw new Error('invalid initialation vector size (must be 16 size)');
            }

            if (!segmentSize) { segmentSize = 1; }

            this.segmentSize = segmentSize;

            this._shiftRegister = coerceArray(iv, true);

            this._aes = new AES(key);
        };

        ModeOfOperationCFB.prototype.encrypt = function(plaintext) {
            if ((plaintext.length % this.segmentSize) != 0) {
                throw new Error('invalid plaintext size (must be segmentSize bytes)');
            }

            var encrypted = coerceArray(plaintext, true);

            var xorSegment;
            for (var i = 0; i < encrypted.length; i += this.segmentSize) {
                xorSegment = this._aes.encrypt(this._shiftRegister);
                for (var j = 0; j < this.segmentSize; j++) {
                    encrypted[i + j] ^= xorSegment[j];
                }

                // Shift the register
                copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
                copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
            }

            return encrypted;
        };

        ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {
            if ((ciphertext.length % this.segmentSize) != 0) {
                throw new Error('invalid ciphertext size (must be segmentSize bytes)');
            }

            var plaintext = coerceArray(ciphertext, true);

            var xorSegment;
            for (var i = 0; i < plaintext.length; i += this.segmentSize) {
                xorSegment = this._aes.encrypt(this._shiftRegister);

                for (var j = 0; j < this.segmentSize; j++) {
                    plaintext[i + j] ^= xorSegment[j];
                }

                // Shift the register
                copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
                copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
            }

            return plaintext;
        };

        /**
         *  Mode Of Operation - Output Feedback (OFB)
         */
        var ModeOfOperationOFB = function(key, iv) {
            if (!(this instanceof ModeOfOperationOFB)) {
                throw Error('AES must be instanitated with `new`');
            }

            this.description = "Output Feedback";
            this.name = "ofb";

            if (!iv) {
                iv = createArray(16);

            } else if (iv.length != 16) {
                throw new Error('invalid initialation vector size (must be 16 bytes)');
            }

            this._lastPrecipher = coerceArray(iv, true);
            this._lastPrecipherIndex = 16;

            this._aes = new AES(key);
        };

        ModeOfOperationOFB.prototype.encrypt = function(plaintext) {
            var encrypted = coerceArray(plaintext, true);

            for (var i = 0; i < encrypted.length; i++) {
                if (this._lastPrecipherIndex === 16) {
                    this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);
                    this._lastPrecipherIndex = 0;
                }
                encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];
            }

            return encrypted;
        };

        // Decryption is symetric
        ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;


        /**
         *  Counter object for CTR common mode of operation
         */
        var Counter = function(initialValue) {
            if (!(this instanceof Counter)) {
                throw Error('Counter must be instanitated with `new`');
            }

            // We allow 0, but anything false-ish uses the default 1
            if (initialValue !== 0 && !initialValue) { initialValue = 1; }

            if (typeof(initialValue) === 'number') {
                this._counter = createArray(16);
                this.setValue(initialValue);

            } else {
                this.setBytes(initialValue);
            }
        };

        Counter.prototype.setValue = function(value) {
            if (typeof(value) !== 'number' || parseInt(value) != value) {
                throw new Error('invalid counter value (must be an integer)');
            }

            for (var index = 15; index >= 0; --index) {
                this._counter[index] = value % 256;
                value = value >> 8;
            }
        };

        Counter.prototype.setBytes = function(bytes) {
            bytes = coerceArray(bytes, true);

            if (bytes.length != 16) {
                throw new Error('invalid counter bytes size (must be 16 bytes)');
            }

            this._counter = bytes;
        };

        Counter.prototype.increment = function() {
            for (var i = 15; i >= 0; i--) {
                if (this._counter[i] === 255) {
                    this._counter[i] = 0;
                } else {
                    this._counter[i]++;
                    break;
                }
            }
        };


        /**
         *  Mode Of Operation - Counter (CTR)
         */
        var ModeOfOperationCTR = function(key, counter) {
            if (!(this instanceof ModeOfOperationCTR)) {
                throw Error('AES must be instanitated with `new`');
            }

            this.description = "Counter";
            this.name = "ctr";

            if (!(counter instanceof Counter)) {
                counter = new Counter(counter);
            }

            this._counter = counter;

            this._remainingCounter = null;
            this._remainingCounterIndex = 16;

            this._aes = new AES(key);
        };

        ModeOfOperationCTR.prototype.encrypt = function(plaintext) {
            var encrypted = coerceArray(plaintext, true);

            for (var i = 0; i < encrypted.length; i++) {
                if (this._remainingCounterIndex === 16) {
                    this._remainingCounter = this._aes.encrypt(this._counter._counter);
                    this._remainingCounterIndex = 0;
                    this._counter.increment();
                }
                encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];
            }

            return encrypted;
        };

        // Decryption is symetric
        ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;


        ///////////////////////
        // Padding

        // See:https://tools.ietf.org/html/rfc2315
        function pkcs7pad(data) {
            data = coerceArray(data, true);
            var padder = 16 - (data.length % 16);
            var result = createArray(data.length + padder);
            copyArray(data, result);
            for (var i = data.length; i < result.length; i++) {
                result[i] = padder;
            }
            return result;
        }

        function pkcs7strip(data) {
            data = coerceArray(data, true);
            if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }

            var padder = data[data.length - 1];
            if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }

            var length = data.length - padder;
            for (var i = 0; i < padder; i++) {
                if (data[length + i] !== padder) {
                    throw new Error('PKCS#7 invalid padding byte');
                }
            }

            var result = createArray(length);
            copyArray(data, result, 0, 0, length);
            return result;
        }

        ///////////////////////
        // Exporting


        // The block cipher
        var aesjs = {
            AES: AES,
            Counter: Counter,

            ModeOfOperation: {
                ecb: ModeOfOperationECB,
                cbc: ModeOfOperationCBC,
                cfb: ModeOfOperationCFB,
                ofb: ModeOfOperationOFB,
                ctr: ModeOfOperationCTR
            },

            utils: {
                hex: convertHex,
                utf8: convertUtf8
            },

            padding: {
                pkcs7: {
                    pad: pkcs7pad,
                    strip: pkcs7strip
                }
            },

            _arrayTest: {
                coerceArray: coerceArray,
                createArray: createArray,
                copyArray: copyArray,
            }
        };


        // node.js
        {
            module.exports = aesjs;

        // RequireJS/AMD
        // http://www.requirejs.org/docs/api.html
        // https://github.com/amdjs/amdjs-api/wiki/AMD
        }


    })();
    }(aesJs));

    var aes = aesJs.exports;

    const version$1 = "json-wallets/5.7.0";

    function looseArrayify(hexString) {
        if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {
            hexString = '0x' + hexString;
        }
        return arrayify(hexString);
    }
    function zpad(value, length) {
        value = String(value);
        while (value.length < length) {
            value = '0' + value;
        }
        return value;
    }
    function getPassword(password) {
        if (typeof (password) === 'string') {
            return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);
        }
        return arrayify(password);
    }
    function searchPath(object, path) {
        let currentChild = object;
        const comps = path.toLowerCase().split('/');
        for (let i = 0; i < comps.length; i++) {
            // Search for a child object with a case-insensitive matching key
            let matchingChild = null;
            for (const key in currentChild) {
                if (key.toLowerCase() === comps[i]) {
                    matchingChild = currentChild[key];
                    break;
                }
            }
            // Didn't find one. :'(
            if (matchingChild === null) {
                return null;
            }
            // Now check this child...
            currentChild = matchingChild;
        }
        return currentChild;
    }
    // See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)
    function uuidV4(randomBytes) {
        const bytes = arrayify(randomBytes);
        // Section: 4.1.3:
        // - time_hi_and_version[12:16] = 0b0100
        bytes[6] = (bytes[6] & 0x0f) | 0x40;
        // Section 4.4
        // - clock_seq_hi_and_reserved[6] = 0b0
        // - clock_seq_hi_and_reserved[7] = 0b1
        bytes[8] = (bytes[8] & 0x3f) | 0x80;
        const value = hexlify(bytes);
        return [
            value.substring(2, 10),
            value.substring(10, 14),
            value.substring(14, 18),
            value.substring(18, 22),
            value.substring(22, 34),
        ].join("-");
    }

    const logger$2 = new Logger(version$1);
    class CrowdsaleAccount extends Description {
        isCrowdsaleAccount(value) {
            return !!(value && value._isCrowdsaleAccount);
        }
    }
    // See: https://github.com/ethereum/pyethsaletool
    function decrypt$1(json, password) {
        const data = JSON.parse(json);
        password = getPassword(password);
        // Ethereum Address
        const ethaddr = getAddress(searchPath(data, "ethaddr"));
        // Encrypted Seed
        const encseed = looseArrayify(searchPath(data, "encseed"));
        if (!encseed || (encseed.length % 16) !== 0) {
            logger$2.throwArgumentError("invalid encseed", "json", json);
        }
        const key = arrayify(pbkdf2$1(password, password, 2000, 32, "sha256")).slice(0, 16);
        const iv = encseed.slice(0, 16);
        const encryptedSeed = encseed.slice(16);
        // Decrypt the seed
        const aesCbc = new aes.ModeOfOperation.cbc(key, iv);
        const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));
        // This wallet format is weird... Convert the binary encoded hex to a string.
        let seedHex = "";
        for (let i = 0; i < seed.length; i++) {
            seedHex += String.fromCharCode(seed[i]);
        }
        const seedHexBytes = toUtf8Bytes(seedHex);
        const privateKey = keccak256(seedHexBytes);
        return new CrowdsaleAccount({
            _isCrowdsaleAccount: true,
            address: ethaddr,
            privateKey: privateKey
        });
    }

    function isCrowdsaleWallet(json) {
        let data = null;
        try {
            data = JSON.parse(json);
        }
        catch (error) {
            return false;
        }
        return (data.encseed && data.ethaddr);
    }
    function isKeystoreWallet(json) {
        let data = null;
        try {
            data = JSON.parse(json);
        }
        catch (error) {
            return false;
        }
        if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {
            return false;
        }
        // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff
        return true;
    }

    var scrypt$1 = {exports: {}};

    (function (module, exports) {

    (function(root) {
        const MAX_VALUE = 0x7fffffff;

        // The SHA256 and PBKDF2 implementation are from scrypt-async-js:
        // See: https://github.com/dchest/scrypt-async-js
        function SHA256(m) {
            const K = new Uint32Array([
               0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
               0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
               0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
               0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
               0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,
               0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,
               0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,
               0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
               0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,
               0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,
               0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,
               0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
               0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
           ]);

            let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;
            let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;
            const w = new Uint32Array(64);

            function blocks(p) {
                let off = 0, len = p.length;
                while (len >= 64) {
                    let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;

                    for (i = 0; i < 16; i++) {
                        j = off + i*4;
                        w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |
                        ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);
                    }

                    for (i = 16; i < 64; i++) {
                        u = w[i-2];
                        t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);

                        u = w[i-15];
                        t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);

                        w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;
                    }

                    for (i = 0; i < 64; i++) {
                        t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^
                                 ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +
                              ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;

                        t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^
                               ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;

                        h = g;
                        g = f;
                        f = e;
                        e = (d + t1) | 0;
                        d = c;
                        c = b;
                        b = a;
                        a = (t1 + t2) | 0;
                    }

                    h0 = (h0 + a) | 0;
                    h1 = (h1 + b) | 0;
                    h2 = (h2 + c) | 0;
                    h3 = (h3 + d) | 0;
                    h4 = (h4 + e) | 0;
                    h5 = (h5 + f) | 0;
                    h6 = (h6 + g) | 0;
                    h7 = (h7 + h) | 0;

                    off += 64;
                    len -= 64;
                }
            }

            blocks(m);

            let i, bytesLeft = m.length % 64,
            bitLenHi = (m.length / 0x20000000) | 0,
            bitLenLo = m.length << 3,
            numZeros = (bytesLeft < 56) ? 56 : 120,
            p = m.slice(m.length - bytesLeft, m.length);

            p.push(0x80);
            for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }
            p.push((bitLenHi >>> 24) & 0xff);
            p.push((bitLenHi >>> 16) & 0xff);
            p.push((bitLenHi >>> 8)  & 0xff);
            p.push((bitLenHi >>> 0)  & 0xff);
            p.push((bitLenLo >>> 24) & 0xff);
            p.push((bitLenLo >>> 16) & 0xff);
            p.push((bitLenLo >>> 8)  & 0xff);
            p.push((bitLenLo >>> 0)  & 0xff);

            blocks(p);

            return [
                (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,
                (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,
                (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,
                (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,
                (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,
                (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,
                (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,
                (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff
            ];
        }

        function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {
            // compress password if it's longer than hash block length
            password = (password.length <= 64) ? password : SHA256(password);

            const innerLen = 64 + salt.length + 4;
            const inner = new Array(innerLen);
            const outerKey = new Array(64);

            let i;
            let dk = [];

            // inner = (password ^ ipad) || salt || counter
            for (i = 0; i < 64; i++) { inner[i] = 0x36; }
            for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }
            for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }
            for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }

            // outerKey = password ^ opad
            for (i = 0; i < 64; i++) outerKey[i] = 0x5c;
            for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];

            // increments counter inside inner
            function incrementCounter() {
                for (let i = innerLen - 1; i >= innerLen - 4; i--) {
                    inner[i]++;
                    if (inner[i] <= 0xff) return;
                    inner[i] = 0;
                }
            }

            // output blocks = SHA256(outerKey || SHA256(inner)) ...
            while (dkLen >= 32) {
                incrementCounter();
                dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));
                dkLen -= 32;
            }
            if (dkLen > 0) {
                incrementCounter();
                dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));
            }

            return dk;
        }

        // The following is an adaptation of scryptsy
        // See: https://www.npmjs.com/package/scryptsy
        function blockmix_salsa8(BY, Yi, r, x, _X) {
            let i;

            arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);
            for (i = 0; i < 2 * r; i++) {
                blockxor(BY, i * 16, _X, 16);
                salsa20_8(_X, x);
                arraycopy(_X, 0, BY, Yi + (i * 16), 16);
            }

            for (i = 0; i < r; i++) {
                arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);
            }

            for (i = 0; i < r; i++) {
                arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);
            }
        }

        function R(a, b) {
            return (a << b) | (a >>> (32 - b));
        }

        function salsa20_8(B, x) {
            arraycopy(B, 0, x, 0, 16);

            for (let i = 8; i > 0; i -= 2) {
                x[ 4] ^= R(x[ 0] + x[12], 7);
                x[ 8] ^= R(x[ 4] + x[ 0], 9);
                x[12] ^= R(x[ 8] + x[ 4], 13);
                x[ 0] ^= R(x[12] + x[ 8], 18);
                x[ 9] ^= R(x[ 5] + x[ 1], 7);
                x[13] ^= R(x[ 9] + x[ 5], 9);
                x[ 1] ^= R(x[13] + x[ 9], 13);
                x[ 5] ^= R(x[ 1] + x[13], 18);
                x[14] ^= R(x[10] + x[ 6], 7);
                x[ 2] ^= R(x[14] + x[10], 9);
                x[ 6] ^= R(x[ 2] + x[14], 13);
                x[10] ^= R(x[ 6] + x[ 2], 18);
                x[ 3] ^= R(x[15] + x[11], 7);
                x[ 7] ^= R(x[ 3] + x[15], 9);
                x[11] ^= R(x[ 7] + x[ 3], 13);
                x[15] ^= R(x[11] + x[ 7], 18);
                x[ 1] ^= R(x[ 0] + x[ 3], 7);
                x[ 2] ^= R(x[ 1] + x[ 0], 9);
                x[ 3] ^= R(x[ 2] + x[ 1], 13);
                x[ 0] ^= R(x[ 3] + x[ 2], 18);
                x[ 6] ^= R(x[ 5] + x[ 4], 7);
                x[ 7] ^= R(x[ 6] + x[ 5], 9);
                x[ 4] ^= R(x[ 7] + x[ 6], 13);
                x[ 5] ^= R(x[ 4] + x[ 7], 18);
                x[11] ^= R(x[10] + x[ 9], 7);
                x[ 8] ^= R(x[11] + x[10], 9);
                x[ 9] ^= R(x[ 8] + x[11], 13);
                x[10] ^= R(x[ 9] + x[ 8], 18);
                x[12] ^= R(x[15] + x[14], 7);
                x[13] ^= R(x[12] + x[15], 9);
                x[14] ^= R(x[13] + x[12], 13);
                x[15] ^= R(x[14] + x[13], 18);
            }

            for (let i = 0; i < 16; ++i) {
                B[i] += x[i];
            }
        }

        // naive approach... going back to loop unrolling may yield additional performance
        function blockxor(S, Si, D, len) {
            for (let i = 0; i < len; i++) {
                D[i] ^= S[Si + i];
            }
        }

        function arraycopy(src, srcPos, dest, destPos, length) {
            while (length--) {
                dest[destPos++] = src[srcPos++];
            }
        }

        function checkBufferish(o) {
            if (!o || typeof(o.length) !== 'number') { return false; }

            for (let i = 0; i < o.length; i++) {
                const v = o[i];
                if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {
                    return false;
                }
            }

            return true;
        }

        function ensureInteger(value, name) {
            if (typeof(value) !== "number" || (value % 1)) { throw new Error('invalid ' + name); }
            return value;
        }

        // N = Cpu cost, r = Memory cost, p = parallelization cost
        // callback(error, progress, key)
        function _scrypt(password, salt, N, r, p, dkLen, callback) {

            N = ensureInteger(N, 'N');
            r = ensureInteger(r, 'r');
            p = ensureInteger(p, 'p');

            dkLen = ensureInteger(dkLen, 'dkLen');

            if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }

            if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }
            if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }

            if (!checkBufferish(password)) {
                throw new Error('password must be an array or buffer');
            }
            password = Array.prototype.slice.call(password);

            if (!checkBufferish(salt)) {
                throw new Error('salt must be an array or buffer');
            }
            salt = Array.prototype.slice.call(salt);

            let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);
            const B = new Uint32Array(p * 32 * r);
            for (let i = 0; i < B.length; i++) {
                const j = i * 4;
                B[i] = ((b[j + 3] & 0xff) << 24) |
                       ((b[j + 2] & 0xff) << 16) |
                       ((b[j + 1] & 0xff) << 8) |
                       ((b[j + 0] & 0xff) << 0);
            }

            const XY = new Uint32Array(64 * r);
            const V = new Uint32Array(32 * r * N);

            const Yi = 32 * r;

            // scratch space
            const x = new Uint32Array(16);       // salsa20_8
            const _X = new Uint32Array(16);      // blockmix_salsa8

            const totalOps = p * N * 2;
            let currentOp = 0;
            let lastPercent10 = null;

            // Set this to true to abandon the scrypt on the next step
            let stop = false;

            // State information
            let state = 0;
            let i0 = 0, i1;
            let Bi;

            // How many blockmix_salsa8 can we do per step?
            const limit = callback ? parseInt(1000 / r): 0xffffffff;

            // Trick from scrypt-async; if there is a setImmediate shim in place, use it
            const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;

            // This is really all I changed; making scryptsy a state machine so we occasionally
            // stop and give other evnts on the evnt loop a chance to run. ~RicMoo
            const incrementalSMix = function() {
                if (stop) {
                    return callback(new Error('cancelled'), currentOp / totalOps);
                }

                let steps;

                switch (state) {
                    case 0:
                        // for (var i = 0; i < p; i++)...
                        Bi = i0 * 32 * r;

                        arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1

                        state = 1;                                         // Move to ROMix 2
                        i1 = 0;

                        // Fall through

                    case 1:

                        // Run up to 1000 steps of the first inner smix loop
                        steps = N - i1;
                        if (steps > limit) { steps = limit; }
                        for (let i = 0; i < steps; i++) {                  // ROMix - 2
                            arraycopy(XY, 0, V, (i1 + i) * Yi, Yi);         // ROMix - 3
                            blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4
                        }

                        // for (var i = 0; i < N; i++)
                        i1 += steps;
                        currentOp += steps;

                        if (callback) {
                            // Call the callback with the progress (optionally stopping us)
                            const percent10 = parseInt(1000 * currentOp / totalOps);
                            if (percent10 !== lastPercent10) {
                                stop = callback(null, currentOp / totalOps);
                                if (stop) { break; }
                                lastPercent10 = percent10;
                            }
                        }

                        if (i1 < N) { break; }

                        i1 = 0;                                          // Move to ROMix 6
                        state = 2;

                        // Fall through

                    case 2:

                        // Run up to 1000 steps of the second inner smix loop
                        steps = N - i1;
                        if (steps > limit) { steps = limit; }
                        for (let i = 0; i < steps; i++) {                // ROMix - 6
                            const offset = (2 * r - 1) * 16;             // ROMix - 7
                            const j = XY[offset] & (N - 1);
                            blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)
                            blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)
                        }

                        // for (var i = 0; i < N; i++)...
                        i1 += steps;
                        currentOp += steps;

                        // Call the callback with the progress (optionally stopping us)
                        if (callback) {
                            const percent10 = parseInt(1000 * currentOp / totalOps);
                            if (percent10 !== lastPercent10) {
                                stop = callback(null, currentOp / totalOps);
                                if (stop) { break; }
                                lastPercent10 = percent10;
                            }
                        }

                        if (i1 < N) { break; }

                        arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10

                        // for (var i = 0; i < p; i++)...
                        i0++;
                        if (i0 < p) {
                            state = 0;
                            break;
                        }

                        b = [];
                        for (let i = 0; i < B.length; i++) {
                            b.push((B[i] >>  0) & 0xff);
                            b.push((B[i] >>  8) & 0xff);
                            b.push((B[i] >> 16) & 0xff);
                            b.push((B[i] >> 24) & 0xff);
                        }

                        const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);

                        // Send the result to the callback
                        if (callback) { callback(null, 1.0, derivedKey); }

                        // Done; don't break (which would reschedule)
                        return derivedKey;
                }

                // Schedule the next steps
                if (callback) { nextTick(incrementalSMix); }
            };

            // Run the smix state machine until completion
            if (!callback) {
                while (true) {
                    const derivedKey = incrementalSMix();
                    if (derivedKey != undefined) { return derivedKey; }
                }
            }

            // Bootstrap the async incremental smix
            incrementalSMix();
        }

        const lib = {
            scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {
                return new Promise(function(resolve, reject) {
                    let lastProgress = 0;
                    if (progressCallback) { progressCallback(0); }
                    _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {
                        if (error) {
                            reject(error);
                        } else if (key) {
                            if (progressCallback && lastProgress !== 1) {
                                progressCallback(1);
                            }
                            resolve(new Uint8Array(key));
                        } else if (progressCallback && progress !== lastProgress) {
                            lastProgress = progress;
                            return progressCallback(progress);
                        }
                    });
                });
            },
            syncScrypt: function(password, salt, N, r, p, dkLen) {
                return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));
            }
        };

        // node.js
        {
           module.exports = lib;

        // RequireJS/AMD
        // http://www.requirejs.org/docs/api.html
        // https://github.com/amdjs/amdjs-api/wiki/AMD
        }

    })();
    }(scrypt$1));

    var scrypt = scrypt$1.exports;

    var __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    const logger$1 = new Logger(version$1);
    // Exported Types
    function hasMnemonic$1(value) {
        return (value != null && value.mnemonic && value.mnemonic.phrase);
    }
    class KeystoreAccount extends Description {
        isKeystoreAccount(value) {
            return !!(value && value._isKeystoreAccount);
        }
    }
    function _decrypt(data, key, ciphertext) {
        const cipher = searchPath(data, "crypto/cipher");
        if (cipher === "aes-128-ctr") {
            const iv = looseArrayify(searchPath(data, "crypto/cipherparams/iv"));
            const counter = new aes.Counter(iv);
            const aesCtr = new aes.ModeOfOperation.ctr(key, counter);
            return arrayify(aesCtr.decrypt(ciphertext));
        }
        return null;
    }
    function _getAccount(data, key) {
        const ciphertext = looseArrayify(searchPath(data, "crypto/ciphertext"));
        const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);
        if (computedMAC !== searchPath(data, "crypto/mac").toLowerCase()) {
            throw new Error("invalid password");
        }
        const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);
        if (!privateKey) {
            logger$1.throwError("unsupported cipher", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "decrypt"
            });
        }
        const mnemonicKey = key.slice(32, 64);
        const address = computeAddress(privateKey);
        if (data.address) {
            let check = data.address.toLowerCase();
            if (check.substring(0, 2) !== "0x") {
                check = "0x" + check;
            }
            if (getAddress(check) !== address) {
                throw new Error("address mismatch");
            }
        }
        const account = {
            _isKeystoreAccount: true,
            address: address,
            privateKey: hexlify(privateKey)
        };
        // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase
        if (searchPath(data, "x-ethers/version") === "0.1") {
            const mnemonicCiphertext = looseArrayify(searchPath(data, "x-ethers/mnemonicCiphertext"));
            const mnemonicIv = looseArrayify(searchPath(data, "x-ethers/mnemonicCounter"));
            const mnemonicCounter = new aes.Counter(mnemonicIv);
            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
            const path = searchPath(data, "x-ethers/path") || defaultPath;
            const locale = searchPath(data, "x-ethers/locale") || "en";
            const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));
            try {
                const mnemonic = entropyToMnemonic(entropy, locale);
                const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);
                if (node.privateKey != account.privateKey) {
                    throw new Error("mnemonic mismatch");
                }
                account.mnemonic = node.mnemonic;
            }
            catch (error) {
                // If we don't have the locale wordlist installed to
                // read this mnemonic, just bail and don't set the
                // mnemonic
                if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== "wordlist") {
                    throw error;
                }
            }
        }
        return new KeystoreAccount(account);
    }
    function pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {
        return arrayify(pbkdf2$1(passwordBytes, salt, count, dkLen, prfFunc));
    }
    function pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {
        return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));
    }
    function _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {
        const passwordBytes = getPassword(password);
        const kdf = searchPath(data, "crypto/kdf");
        if (kdf && typeof (kdf) === "string") {
            const throwError = function (name, value) {
                return logger$1.throwArgumentError("invalid key-derivation function parameters", name, value);
            };
            if (kdf.toLowerCase() === "scrypt") {
                const salt = looseArrayify(searchPath(data, "crypto/kdfparams/salt"));
                const N = parseInt(searchPath(data, "crypto/kdfparams/n"));
                const r = parseInt(searchPath(data, "crypto/kdfparams/r"));
                const p = parseInt(searchPath(data, "crypto/kdfparams/p"));
                // Check for all required parameters
                if (!N || !r || !p) {
                    throwError("kdf", kdf);
                }
                // Make sure N is a power of 2
                if ((N & (N - 1)) !== 0) {
                    throwError("N", N);
                }
                const dkLen = parseInt(searchPath(data, "crypto/kdfparams/dklen"));
                if (dkLen !== 32) {
                    throwError("dklen", dkLen);
                }
                return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);
            }
            else if (kdf.toLowerCase() === "pbkdf2") {
                const salt = looseArrayify(searchPath(data, "crypto/kdfparams/salt"));
                let prfFunc = null;
                const prf = searchPath(data, "crypto/kdfparams/prf");
                if (prf === "hmac-sha256") {
                    prfFunc = "sha256";
                }
                else if (prf === "hmac-sha512") {
                    prfFunc = "sha512";
                }
                else {
                    throwError("prf", prf);
                }
                const count = parseInt(searchPath(data, "crypto/kdfparams/c"));
                const dkLen = parseInt(searchPath(data, "crypto/kdfparams/dklen"));
                if (dkLen !== 32) {
                    throwError("dklen", dkLen);
                }
                return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);
            }
        }
        return logger$1.throwArgumentError("unsupported key-derivation function", "kdf", kdf);
    }
    function decryptSync(json, password) {
        const data = JSON.parse(json);
        const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);
        return _getAccount(data, key);
    }
    function decrypt(json, password, progressCallback) {
        return __awaiter$1(this, void 0, void 0, function* () {
            const data = JSON.parse(json);
            const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);
            return _getAccount(data, key);
        });
    }
    function encrypt(account, password, options, progressCallback) {
        try {
            // Check the address matches the private key
            if (getAddress(account.address) !== computeAddress(account.privateKey)) {
                throw new Error("address/privateKey mismatch");
            }
            // Check the mnemonic (if any) matches the private key
            if (hasMnemonic$1(account)) {
                const mnemonic = account.mnemonic;
                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);
                if (node.privateKey != account.privateKey) {
                    throw new Error("mnemonic mismatch");
                }
            }
        }
        catch (e) {
            return Promise.reject(e);
        }
        // The options are optional, so adjust the call as needed
        if (typeof (options) === "function" && !progressCallback) {
            progressCallback = options;
            options = {};
        }
        if (!options) {
            options = {};
        }
        const privateKey = arrayify(account.privateKey);
        const passwordBytes = getPassword(password);
        let entropy = null;
        let path = null;
        let locale = null;
        if (hasMnemonic$1(account)) {
            const srcMnemonic = account.mnemonic;
            entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || "en"));
            path = srcMnemonic.path || defaultPath;
            locale = srcMnemonic.locale || "en";
        }
        let client = options.client;
        if (!client) {
            client = "ethers.js";
        }
        // Check/generate the salt
        let salt = null;
        if (options.salt) {
            salt = arrayify(options.salt);
        }
        else {
            salt = randomBytes(32);
        }
        // Override initialization vector
        let iv = null;
        if (options.iv) {
            iv = arrayify(options.iv);
            if (iv.length !== 16) {
                throw new Error("invalid iv");
            }
        }
        else {
            iv = randomBytes(16);
        }
        // Override the uuid
        let uuidRandom = null;
        if (options.uuid) {
            uuidRandom = arrayify(options.uuid);
            if (uuidRandom.length !== 16) {
                throw new Error("invalid uuid");
            }
        }
        else {
            uuidRandom = randomBytes(16);
        }
        // Override the scrypt password-based key derivation function parameters
        let N = (1 << 17), r = 8, p = 1;
        if (options.scrypt) {
            if (options.scrypt.N) {
                N = options.scrypt.N;
            }
            if (options.scrypt.r) {
                r = options.scrypt.r;
            }
            if (options.scrypt.p) {
                p = options.scrypt.p;
            }
        }
        // We take 64 bytes:
        //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)
        //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)
        return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {
            key = arrayify(key);
            // This will be used to encrypt the wallet (as per Web3 secret storage)
            const derivedKey = key.slice(0, 16);
            const macPrefix = key.slice(16, 32);
            // This will be used to encrypt the mnemonic phrase (if any)
            const mnemonicKey = key.slice(32, 64);
            // Encrypt the private key
            const counter = new aes.Counter(iv);
            const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);
            const ciphertext = arrayify(aesCtr.encrypt(privateKey));
            // Compute the message authentication code, used to check the password
            const mac = keccak256(concat([macPrefix, ciphertext]));
            // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition
            const data = {
                address: account.address.substring(2).toLowerCase(),
                id: uuidV4(uuidRandom),
                version: 3,
                crypto: {
                    cipher: "aes-128-ctr",
                    cipherparams: {
                        iv: hexlify(iv).substring(2),
                    },
                    ciphertext: hexlify(ciphertext).substring(2),
                    kdf: "scrypt",
                    kdfparams: {
                        salt: hexlify(salt).substring(2),
                        n: N,
                        dklen: 32,
                        p: p,
                        r: r
                    },
                    mac: mac.substring(2)
                }
            };
            // If we have a mnemonic, encrypt it into the JSON wallet
            if (entropy) {
                const mnemonicIv = randomBytes(16);
                const mnemonicCounter = new aes.Counter(mnemonicIv);
                const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
                const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));
                const now = new Date();
                const timestamp = (now.getUTCFullYear() + "-" +
                    zpad(now.getUTCMonth() + 1, 2) + "-" +
                    zpad(now.getUTCDate(), 2) + "T" +
                    zpad(now.getUTCHours(), 2) + "-" +
                    zpad(now.getUTCMinutes(), 2) + "-" +
                    zpad(now.getUTCSeconds(), 2) + ".0Z");
                data["x-ethers"] = {
                    client: client,
                    gethFilename: ("UTC--" + timestamp + "--" + data.address),
                    mnemonicCounter: hexlify(mnemonicIv).substring(2),
                    mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),
                    path: path,
                    locale: locale,
                    version: "0.1"
                };
            }
            return JSON.stringify(data);
        });
    }

    function decryptJsonWallet(json, password, progressCallback) {
        if (isCrowdsaleWallet(json)) {
            if (progressCallback) {
                progressCallback(0);
            }
            const account = decrypt$1(json, password);
            if (progressCallback) {
                progressCallback(1);
            }
            return Promise.resolve(account);
        }
        if (isKeystoreWallet(json)) {
            return decrypt(json, password, progressCallback);
        }
        return Promise.reject(new Error("invalid JSON wallet"));
    }
    function decryptJsonWalletSync(json, password) {
        if (isCrowdsaleWallet(json)) {
            return decrypt$1(json, password);
        }
        if (isKeystoreWallet(json)) {
            return decryptSync(json, password);
        }
        throw new Error("invalid JSON wallet");
    }

    const version = "wallet/5.7.0";

    var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    const logger = new Logger(version);
    function isAccount(value) {
        return (value != null && isHexString(value.privateKey, 32) && value.address != null);
    }
    function hasMnemonic(value) {
        const mnemonic = value.mnemonic;
        return (mnemonic && mnemonic.phrase);
    }
    class Wallet extends Signer {
        constructor(privateKey, provider) {
            super();
            if (isAccount(privateKey)) {
                const signingKey = new SigningKey(privateKey.privateKey);
                defineReadOnly(this, "_signingKey", () => signingKey);
                defineReadOnly(this, "address", computeAddress(this.publicKey));
                if (this.address !== getAddress(privateKey.address)) {
                    logger.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]");
                }
                if (hasMnemonic(privateKey)) {
                    const srcMnemonic = privateKey.mnemonic;
                    defineReadOnly(this, "_mnemonic", () => ({
                        phrase: srcMnemonic.phrase,
                        path: srcMnemonic.path || defaultPath,
                        locale: srcMnemonic.locale || "en"
                    }));
                    const mnemonic = this.mnemonic;
                    const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);
                    if (computeAddress(node.privateKey) !== this.address) {
                        logger.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]");
                    }
                }
                else {
                    defineReadOnly(this, "_mnemonic", () => null);
                }
            }
            else {
                if (SigningKey.isSigningKey(privateKey)) {
                    /* istanbul ignore if */
                    if (privateKey.curve !== "secp256k1") {
                        logger.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]");
                    }
                    defineReadOnly(this, "_signingKey", () => privateKey);
                }
                else {
                    // A lot of common tools do not prefix private keys with a 0x (see: #1166)
                    if (typeof (privateKey) === "string") {
                        if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {
                            privateKey = "0x" + privateKey;
                        }
                    }
                    const signingKey = new SigningKey(privateKey);
                    defineReadOnly(this, "_signingKey", () => signingKey);
                }
                defineReadOnly(this, "_mnemonic", () => null);
                defineReadOnly(this, "address", computeAddress(this.publicKey));
            }
            /* istanbul ignore if */
            if (provider && !Provider.isProvider(provider)) {
                logger.throwArgumentError("invalid provider", "provider", provider);
            }
            defineReadOnly(this, "provider", provider || null);
        }
        get mnemonic() { return this._mnemonic(); }
        get privateKey() { return this._signingKey().privateKey; }
        get publicKey() { return this._signingKey().publicKey; }
        getAddress() {
            return Promise.resolve(this.address);
        }
        connect(provider) {
            return new Wallet(this, provider);
        }
        signTransaction(transaction) {
            return resolveProperties(transaction).then((tx) => {
                if (tx.from != null) {
                    if (getAddress(tx.from) !== this.address) {
                        logger.throwArgumentError("transaction from address mismatch", "transaction.from", transaction.from);
                    }
                    delete tx.from;
                }
                const signature = this._signingKey().signDigest(keccak256(serialize(tx)));
                return serialize(tx, signature);
            });
        }
        signMessage(message) {
            return __awaiter(this, void 0, void 0, function* () {
                return joinSignature(this._signingKey().signDigest(hashMessage(message)));
            });
        }
        _signTypedData(domain, types, value) {
            return __awaiter(this, void 0, void 0, function* () {
                // Populate any ENS names
                const populated = yield TypedDataEncoder.resolveNames(domain, types, value, (name) => {
                    if (this.provider == null) {
                        logger.throwError("cannot resolve ENS names without a provider", Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "resolveName",
                            value: name
                        });
                    }
                    return this.provider.resolveName(name);
                });
                return joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(populated.domain, types, populated.value)));
            });
        }
        encrypt(password, options, progressCallback) {
            if (typeof (options) === "function" && !progressCallback) {
                progressCallback = options;
                options = {};
            }
            if (progressCallback && typeof (progressCallback) !== "function") {
                throw new Error("invalid callback");
            }
            if (!options) {
                options = {};
            }
            return encrypt(this, password, options, progressCallback);
        }
        /**
         *  Static methods to create Wallet instances.
         */
        static createRandom(options) {
            let entropy = randomBytes(16);
            if (!options) {
                options = {};
            }
            if (options.extraEntropy) {
                entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));
            }
            const mnemonic = entropyToMnemonic(entropy, options.locale);
            return Wallet.fromMnemonic(mnemonic, options.path, options.locale);
        }
        static fromEncryptedJson(json, password, progressCallback) {
            return decryptJsonWallet(json, password, progressCallback).then((account) => {
                return new Wallet(account);
            });
        }
        static fromEncryptedJsonSync(json, password) {
            return new Wallet(decryptJsonWalletSync(json, password));
        }
        static fromMnemonic(mnemonic, path, wordlist) {
            if (!path) {
                path = defaultPath;
            }
            return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));
        }
    }

    /**
     * Copyright 2019 Google Inc. All Rights Reserved.
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *     http://www.apache.org/licenses/LICENSE-2.0
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    const proxyMarker = Symbol("Comlink.proxy");
    const createEndpoint = Symbol("Comlink.endpoint");
    const releaseProxy = Symbol("Comlink.releaseProxy");
    const throwMarker = Symbol("Comlink.thrown");
    const isObject = (val) => (typeof val === "object" && val !== null) || typeof val === "function";
    /**
     * Internal transfer handle to handle objects marked to proxy.
     */
    const proxyTransferHandler = {
        canHandle: (val) => isObject(val) && val[proxyMarker],
        serialize(obj) {
            const { port1, port2 } = new MessageChannel();
            expose(obj, port1);
            return [port2, [port2]];
        },
        deserialize(port) {
            port.start();
            return wrap(port);
        },
    };
    /**
     * Internal transfer handler to handle thrown exceptions.
     */
    const throwTransferHandler = {
        canHandle: (value) => isObject(value) && throwMarker in value,
        serialize({ value }) {
            let serialized;
            if (value instanceof Error) {
                serialized = {
                    isError: true,
                    value: {
                        message: value.message,
                        name: value.name,
                        stack: value.stack,
                    },
                };
            }
            else {
                serialized = { isError: false, value };
            }
            return [serialized, []];
        },
        deserialize(serialized) {
            if (serialized.isError) {
                throw Object.assign(new Error(serialized.value.message), serialized.value);
            }
            throw serialized.value;
        },
    };
    /**
     * Allows customizing the serialization of certain values.
     */
    const transferHandlers = new Map([
        ["proxy", proxyTransferHandler],
        ["throw", throwTransferHandler],
    ]);
    function expose(obj, ep = self) {
        ep.addEventListener("message", function callback(ev) {
            if (!ev || !ev.data) {
                return;
            }
            const { id, type, path } = Object.assign({ path: [] }, ev.data);
            const argumentList = (ev.data.argumentList || []).map(fromWireValue);
            let returnValue;
            try {
                const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);
                const rawValue = path.reduce((obj, prop) => obj[prop], obj);
                switch (type) {
                    case "GET" /* GET */:
                        {
                            returnValue = rawValue;
                        }
                        break;
                    case "SET" /* SET */:
                        {
                            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);
                            returnValue = true;
                        }
                        break;
                    case "APPLY" /* APPLY */:
                        {
                            returnValue = rawValue.apply(parent, argumentList);
                        }
                        break;
                    case "CONSTRUCT" /* CONSTRUCT */:
                        {
                            const value = new rawValue(...argumentList);
                            returnValue = proxy(value);
                        }
                        break;
                    case "ENDPOINT" /* ENDPOINT */:
                        {
                            const { port1, port2 } = new MessageChannel();
                            expose(obj, port2);
                            returnValue = transfer(port1, [port1]);
                        }
                        break;
                    case "RELEASE" /* RELEASE */:
                        {
                            returnValue = undefined;
                        }
                        break;
                    default:
                        return;
                }
            }
            catch (value) {
                returnValue = { value, [throwMarker]: 0 };
            }
            Promise.resolve(returnValue)
                .catch((value) => {
                return { value, [throwMarker]: 0 };
            })
                .then((returnValue) => {
                const [wireValue, transferables] = toWireValue(returnValue);
                ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);
                if (type === "RELEASE" /* RELEASE */) {
                    // detach and deactive after sending release response above.
                    ep.removeEventListener("message", callback);
                    closeEndPoint(ep);
                }
            });
        });
        if (ep.start) {
            ep.start();
        }
    }
    function isMessagePort(endpoint) {
        return endpoint.constructor.name === "MessagePort";
    }
    function closeEndPoint(endpoint) {
        if (isMessagePort(endpoint))
            endpoint.close();
    }
    function wrap(ep, target) {
        return createProxy(ep, [], target);
    }
    function throwIfProxyReleased(isReleased) {
        if (isReleased) {
            throw new Error("Proxy has been released and is not useable");
        }
    }
    function createProxy(ep, path = [], target = function () { }) {
        let isProxyReleased = false;
        const proxy = new Proxy(target, {
            get(_target, prop) {
                throwIfProxyReleased(isProxyReleased);
                if (prop === releaseProxy) {
                    return () => {
                        return requestResponseMessage(ep, {
                            type: "RELEASE" /* RELEASE */,
                            path: path.map((p) => p.toString()),
                        }).then(() => {
                            closeEndPoint(ep);
                            isProxyReleased = true;
                        });
                    };
                }
                if (prop === "then") {
                    if (path.length === 0) {
                        return { then: () => proxy };
                    }
                    const r = requestResponseMessage(ep, {
                        type: "GET" /* GET */,
                        path: path.map((p) => p.toString()),
                    }).then(fromWireValue);
                    return r.then.bind(r);
                }
                return createProxy(ep, [...path, prop]);
            },
            set(_target, prop, rawValue) {
                throwIfProxyReleased(isProxyReleased);
                // FIXME: ES6 Proxy Handler `set` methods are supposed to return a
                // boolean. To show good will, we return true asynchronously ¯\_(ツ)_/¯
                const [value, transferables] = toWireValue(rawValue);
                return requestResponseMessage(ep, {
                    type: "SET" /* SET */,
                    path: [...path, prop].map((p) => p.toString()),
                    value,
                }, transferables).then(fromWireValue);
            },
            apply(_target, _thisArg, rawArgumentList) {
                throwIfProxyReleased(isProxyReleased);
                const last = path[path.length - 1];
                if (last === createEndpoint) {
                    return requestResponseMessage(ep, {
                        type: "ENDPOINT" /* ENDPOINT */,
                    }).then(fromWireValue);
                }
                // We just pretend that `bind()` didn’t happen.
                if (last === "bind") {
                    return createProxy(ep, path.slice(0, -1));
                }
                const [argumentList, transferables] = processArguments(rawArgumentList);
                return requestResponseMessage(ep, {
                    type: "APPLY" /* APPLY */,
                    path: path.map((p) => p.toString()),
                    argumentList,
                }, transferables).then(fromWireValue);
            },
            construct(_target, rawArgumentList) {
                throwIfProxyReleased(isProxyReleased);
                const [argumentList, transferables] = processArguments(rawArgumentList);
                return requestResponseMessage(ep, {
                    type: "CONSTRUCT" /* CONSTRUCT */,
                    path: path.map((p) => p.toString()),
                    argumentList,
                }, transferables).then(fromWireValue);
            },
        });
        return proxy;
    }
    function myFlat(arr) {
        return Array.prototype.concat.apply([], arr);
    }
    function processArguments(argumentList) {
        const processed = argumentList.map(toWireValue);
        return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];
    }
    const transferCache = new WeakMap();
    function transfer(obj, transfers) {
        transferCache.set(obj, transfers);
        return obj;
    }
    function proxy(obj) {
        return Object.assign(obj, { [proxyMarker]: true });
    }
    function toWireValue(value) {
        for (const [name, handler] of transferHandlers) {
            if (handler.canHandle(value)) {
                const [serializedValue, transferables] = handler.serialize(value);
                return [
                    {
                        type: "HANDLER" /* HANDLER */,
                        name,
                        value: serializedValue,
                    },
                    transferables,
                ];
            }
        }
        return [
            {
                type: "RAW" /* RAW */,
                value,
            },
            transferCache.get(value) || [],
        ];
    }
    function fromWireValue(value) {
        switch (value.type) {
            case "HANDLER" /* HANDLER */:
                return transferHandlers.get(value.name).deserialize(value.value);
            case "RAW" /* RAW */:
                return value.value;
        }
    }
    function requestResponseMessage(ep, msg, transfers) {
        return new Promise((resolve) => {
            const id = generateUUID();
            ep.addEventListener("message", function l(ev) {
                if (!ev.data || !ev.data.id || ev.data.id !== id) {
                    return;
                }
                ep.removeEventListener("message", l);
                resolve(ev.data);
            });
            if (ep.start) {
                ep.start();
            }
            ep.postMessage(Object.assign({ id }, msg), transfers);
        });
    }
    function generateUUID() {
        return new Array(4)
            .fill(0)
            .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))
            .join("-");
    }

    var JSON_ID$1 = new umd.exports.ContentTypeId({
        authorityId: 'relay.cc',
        typeId: 'JSON',
        versionMajor: 4,
        versionMinor: 1,
    });
    var JSONCodec = /** @class */ (function () {
        function JSONCodec() {
        }
        Object.defineProperty(JSONCodec.prototype, "contentType", {
            get: function () {
                return JSON_ID$1;
            },
            enumerable: false,
            configurable: true
        });
        JSONCodec.prototype.encode = function (content) {
            return {
                type: JSON_ID$1,
                parameters: {},
                fallback: "This client does not support the content type ".concat(this.contentType.toString(), ". See https://xmtp.org/docs/dev-concepts/content-types for more details."),
                content: new TextEncoder().encode(JSON.stringify(content)),
            };
        };
        JSONCodec.prototype.decode = function (content) {
            return JSON.parse(new TextDecoder().decode(content.content));
        };
        return JSONCodec;
    }());

    var isEthAddress = function (address) {
        if (typeof address !== 'string') {
            return false;
        }
        if (!address.startsWith('0x')) {
            return false;
        }
        if (!address.match(/^0x[0-9a-fA-F]{40}$/)) {
            return false;
        }
        return true;
    };

    var fromXmtpClient = function (client, opts) {
        if (!isEthAddress(client.address)) {
            throw new Error('Invalid client address');
        }
        else {
            return {
                address: client.address,
                env: (function () {
                    if (opts === undefined) {
                        return 'dev';
                    }
                    else {
                        if (opts.env === 'production') {
                            return 'production';
                        }
                        else {
                            return 'dev';
                        }
                    }
                })(),
            };
        }
    };

    var JSON_ID = 'relay.cc/Json:0.1';
    var toXmtpContentTypeId = function (id) {
        switch (id) {
            case JSON_ID:
                return JSON_ID$1;
            default:
                return umd.exports.ContentTypeText;
        }
    };

    var toXmtpSendOptions = function (opts) {
        if (opts === undefined) {
            return undefined;
        }
        else {
            return __assign(__assign({}, opts), { contentType: (function () {
                    if (opts.contentType === undefined) {
                        return undefined;
                    }
                    else {
                        return toXmtpContentTypeId(opts.contentType);
                    }
                })() });
        }
    };

    var isIdentityWallet = function (wallet) {
        if (typeof wallet !== 'object' || wallet === null) {
            return false;
        }
        if (!isEthAddress(wallet.address)) {
            return false;
        }
        try {
            Uint8Array.from(wallet.uuid);
        }
        catch (_a) {
            return false;
        }
        return true;
    };

    var fromXmtpConversation = function (conversation) {
        if (!isEthAddress(conversation.peerAddress)) {
            throw new Error('Invalid peer address');
        }
        else {
            return {
                peerAddress: conversation.peerAddress,
                context: conversation.context || undefined,
            };
        }
    };

    var fromXmtpMessage = function (message) {
        return {
            id: message.id,
            conversation: fromXmtpConversation(message.conversation),
            senderAddress: (function () {
                if (!isEthAddress(message.senderAddress)) {
                    throw new Error("Invalid sender address: ".concat(message.senderAddress));
                }
                else {
                    return message.senderAddress;
                }
            })(),
            sent: message.sent,
            content: message.content,
        };
    };

    /* eslint-disable */
    // @ts-nocheck
    /*
    * This file is a generated Typescript file for GRPC Gateway, DO NOT MODIFY
    */
    (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    (undefined && undefined.__rest) || function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };
    /**
     * base64 encoder and decoder
     * Copied and adapted from https://github.com/protobufjs/protobuf.js/blob/master/lib/base64/index.js
     */
    // Base64 encoding table
    const b64 = new Array(64);
    // Base64 decoding table
    const s64 = new Array(123);
    // 65..90, 97..122, 48..57, 43, 47
    for (let i = 0; i < 64;)
        s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;

    /* eslint-disable */
    var SortDirection;
    (function (SortDirection) {
        SortDirection["SORT_DIRECTION_UNSPECIFIED"] = "SORT_DIRECTION_UNSPECIFIED";
        SortDirection["SORT_DIRECTION_ASCENDING"] = "SORT_DIRECTION_ASCENDING";
        SortDirection["SORT_DIRECTION_DESCENDING"] = "SORT_DIRECTION_DESCENDING";
    })(SortDirection || (SortDirection = {}));

    /**
     * @license
     * Copyright 2009 The Closure Library Authors
     * Copyright 2020 Daniel Wirtz / The long.js Authors.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     *
     * SPDX-License-Identifier: Apache-2.0
     */

    // WebAssembly optimizations to do native i64 multiplication and divide
    var wasm = null;
    try {
      wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([
        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11
      ])), {}).exports;
    } catch (e) {
      // no wasm support :(
    }

    /**
     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.
     *  See the from* functions below for more convenient ways of constructing Longs.
     * @exports Long
     * @class A Long class for representing a 64 bit two's-complement integer value.
     * @param {number} low The low (signed) 32 bits of the long
     * @param {number} high The high (signed) 32 bits of the long
     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
     * @constructor
     */
    function Long(low, high, unsigned) {

      /**
       * The low 32 bits as a signed value.
       * @type {number}
       */
      this.low = low | 0;

      /**
       * The high 32 bits as a signed value.
       * @type {number}
       */
      this.high = high | 0;

      /**
       * Whether unsigned or not.
       * @type {boolean}
       */
      this.unsigned = !!unsigned;
    }

    // The internal representation of a long is the two given signed, 32-bit values.
    // We use 32-bit pieces because these are the size of integers on which
    // Javascript performs bit-operations.  For operations like addition and
    // multiplication, we split each number into 16 bit pieces, which can easily be
    // multiplied within Javascript's floating-point representation without overflow
    // or change in sign.
    //
    // In the algorithms below, we frequently reduce the negative case to the
    // positive case by negating the input(s) and then post-processing the result.
    // Note that we must ALWAYS check specially whether those values are MIN_VALUE
    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
    // a positive number, it overflows back into a negative).  Not handling this
    // case would often result in infinite recursion.
    //
    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*
    // methods on which they depend.

    /**
     * An indicator used to reliably determine if an object is a Long or not.
     * @type {boolean}
     * @const
     * @private
     */
    Long.prototype.__isLong__;

    Object.defineProperty(Long.prototype, "__isLong__", { value: true });

    /**
     * @function
     * @param {*} obj Object
     * @returns {boolean}
     * @inner
     */
    function isLong(obj) {
      return (obj && obj["__isLong__"]) === true;
    }

    /**
     * @function
     * @param {*} value number
     * @returns {number}
     * @inner
     */
    function ctz32(value) {
      var c = Math.clz32(value & -value);
      return value ? 31 - c : c;
    }

    /**
     * Tests if the specified object is a Long.
     * @function
     * @param {*} obj Object
     * @returns {boolean}
     */
    Long.isLong = isLong;

    /**
     * A cache of the Long representations of small integer values.
     * @type {!Object}
     * @inner
     */
    var INT_CACHE = {};

    /**
     * A cache of the Long representations of small unsigned integer values.
     * @type {!Object}
     * @inner
     */
    var UINT_CACHE = {};

    /**
     * @param {number} value
     * @param {boolean=} unsigned
     * @returns {!Long}
     * @inner
     */
    function fromInt(value, unsigned) {
      var obj, cachedObj, cache;
      if (unsigned) {
        value >>>= 0;
        if (cache = (0 <= value && value < 256)) {
          cachedObj = UINT_CACHE[value];
          if (cachedObj)
            return cachedObj;
        }
        obj = fromBits(value, 0, true);
        if (cache)
          UINT_CACHE[value] = obj;
        return obj;
      } else {
        value |= 0;
        if (cache = (-128 <= value && value < 128)) {
          cachedObj = INT_CACHE[value];
          if (cachedObj)
            return cachedObj;
        }
        obj = fromBits(value, value < 0 ? -1 : 0, false);
        if (cache)
          INT_CACHE[value] = obj;
        return obj;
      }
    }

    /**
     * Returns a Long representing the given 32 bit integer value.
     * @function
     * @param {number} value The 32 bit integer in question
     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
     * @returns {!Long} The corresponding Long value
     */
    Long.fromInt = fromInt;

    /**
     * @param {number} value
     * @param {boolean=} unsigned
     * @returns {!Long}
     * @inner
     */
    function fromNumber(value, unsigned) {
      if (isNaN(value))
        return unsigned ? UZERO : ZERO;
      if (unsigned) {
        if (value < 0)
          return UZERO;
        if (value >= TWO_PWR_64_DBL)
          return MAX_UNSIGNED_VALUE;
      } else {
        if (value <= -TWO_PWR_63_DBL)
          return MIN_VALUE;
        if (value + 1 >= TWO_PWR_63_DBL)
          return MAX_VALUE;
      }
      if (value < 0)
        return fromNumber(-value, unsigned).neg();
      return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);
    }

    /**
     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.
     * @function
     * @param {number} value The number in question
     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
     * @returns {!Long} The corresponding Long value
     */
    Long.fromNumber = fromNumber;

    /**
     * @param {number} lowBits
     * @param {number} highBits
     * @param {boolean=} unsigned
     * @returns {!Long}
     * @inner
     */
    function fromBits(lowBits, highBits, unsigned) {
      return new Long(lowBits, highBits, unsigned);
    }

    /**
     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is
     *  assumed to use 32 bits.
     * @function
     * @param {number} lowBits The low 32 bits
     * @param {number} highBits The high 32 bits
     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
     * @returns {!Long} The corresponding Long value
     */
    Long.fromBits = fromBits;

    /**
     * @function
     * @param {number} base
     * @param {number} exponent
     * @returns {number}
     * @inner
     */
    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)

    /**
     * @param {string} str
     * @param {(boolean|number)=} unsigned
     * @param {number=} radix
     * @returns {!Long}
     * @inner
     */
    function fromString(str, unsigned, radix) {
      if (str.length === 0)
        throw Error('empty string');
      if (typeof unsigned === 'number') {
        // For goog.math.long compatibility
        radix = unsigned;
        unsigned = false;
      } else {
        unsigned = !!unsigned;
      }
      if (str === "NaN" || str === "Infinity" || str === "+Infinity" || str === "-Infinity")
        return unsigned ? UZERO : ZERO;
      radix = radix || 10;
      if (radix < 2 || 36 < radix)
        throw RangeError('radix');

      var p;
      if ((p = str.indexOf('-')) > 0)
        throw Error('interior hyphen');
      else if (p === 0) {
        return fromString(str.substring(1), unsigned, radix).neg();
      }

      // Do several (8) digits each time through the loop, so as to
      // minimize the calls to the very expensive emulated div.
      var radixToPower = fromNumber(pow_dbl(radix, 8));

      var result = ZERO;
      for (var i = 0; i < str.length; i += 8) {
        var size = Math.min(8, str.length - i),
          value = parseInt(str.substring(i, i + size), radix);
        if (size < 8) {
          var power = fromNumber(pow_dbl(radix, size));
          result = result.mul(power).add(fromNumber(value));
        } else {
          result = result.mul(radixToPower);
          result = result.add(fromNumber(value));
        }
      }
      result.unsigned = unsigned;
      return result;
    }

    /**
     * Returns a Long representation of the given string, written using the specified radix.
     * @function
     * @param {string} str The textual representation of the Long
     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed
     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10
     * @returns {!Long} The corresponding Long value
     */
    Long.fromString = fromString;

    /**
     * @function
     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val
     * @param {boolean=} unsigned
     * @returns {!Long}
     * @inner
     */
    function fromValue(val, unsigned) {
      if (typeof val === 'number')
        return fromNumber(val, unsigned);
      if (typeof val === 'string')
        return fromString(val, unsigned);
      // Throws for non-objects, converts non-instanceof Long:
      return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);
    }

    /**
     * Converts the specified value to a Long using the appropriate from* function for its type.
     * @function
     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value
     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
     * @returns {!Long}
     */
    Long.fromValue = fromValue;

    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be
    // no runtime penalty for these.

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_16_DBL = 1 << 16;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_24_DBL = 1 << 24;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;

    /**
     * @type {!Long}
     * @const
     * @inner
     */
    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);

    /**
     * @type {!Long}
     * @inner
     */
    var ZERO = fromInt(0);

    /**
     * Signed zero.
     * @type {!Long}
     */
    Long.ZERO = ZERO;

    /**
     * @type {!Long}
     * @inner
     */
    var UZERO = fromInt(0, true);

    /**
     * Unsigned zero.
     * @type {!Long}
     */
    Long.UZERO = UZERO;

    /**
     * @type {!Long}
     * @inner
     */
    var ONE = fromInt(1);

    /**
     * Signed one.
     * @type {!Long}
     */
    Long.ONE = ONE;

    /**
     * @type {!Long}
     * @inner
     */
    var UONE = fromInt(1, true);

    /**
     * Unsigned one.
     * @type {!Long}
     */
    Long.UONE = UONE;

    /**
     * @type {!Long}
     * @inner
     */
    var NEG_ONE = fromInt(-1);

    /**
     * Signed negative one.
     * @type {!Long}
     */
    Long.NEG_ONE = NEG_ONE;

    /**
     * @type {!Long}
     * @inner
     */
    var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);

    /**
     * Maximum signed value.
     * @type {!Long}
     */
    Long.MAX_VALUE = MAX_VALUE;

    /**
     * @type {!Long}
     * @inner
     */
    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);

    /**
     * Maximum unsigned value.
     * @type {!Long}
     */
    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;

    /**
     * @type {!Long}
     * @inner
     */
    var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);

    /**
     * Minimum signed value.
     * @type {!Long}
     */
    Long.MIN_VALUE = MIN_VALUE;

    /**
     * @alias Long.prototype
     * @inner
     */
    var LongPrototype = Long.prototype;

    /**
     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.
     * @this {!Long}
     * @returns {number}
     */
    LongPrototype.toInt = function toInt() {
      return this.unsigned ? this.low >>> 0 : this.low;
    };

    /**
     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).
     * @this {!Long}
     * @returns {number}
     */
    LongPrototype.toNumber = function toNumber() {
      if (this.unsigned)
        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);
      return this.high * TWO_PWR_32_DBL + (this.low >>> 0);
    };

    /**
     * Converts the Long to a string written in the specified radix.
     * @this {!Long}
     * @param {number=} radix Radix (2-36), defaults to 10
     * @returns {string}
     * @override
     * @throws {RangeError} If `radix` is out of range
     */
    LongPrototype.toString = function toString(radix) {
      radix = radix || 10;
      if (radix < 2 || 36 < radix)
        throw RangeError('radix');
      if (this.isZero())
        return '0';
      if (this.isNegative()) { // Unsigned Longs are never negative
        if (this.eq(MIN_VALUE)) {
          // We need to change the Long value before it can be negated, so we remove
          // the bottom-most digit in this base and then recurse to do the rest.
          var radixLong = fromNumber(radix),
            div = this.div(radixLong),
            rem1 = div.mul(radixLong).sub(this);
          return div.toString(radix) + rem1.toInt().toString(radix);
        } else
          return '-' + this.neg().toString(radix);
      }

      // Do several (6) digits each time through the loop, so as to
      // minimize the calls to the very expensive emulated div.
      var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),
        rem = this;
      var result = '';
      while (true) {
        var remDiv = rem.div(radixToPower),
          intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,
          digits = intval.toString(radix);
        rem = remDiv;
        if (rem.isZero())
          return digits + result;
        else {
          while (digits.length < 6)
            digits = '0' + digits;
          result = '' + digits + result;
        }
      }
    };

    /**
     * Gets the high 32 bits as a signed integer.
     * @this {!Long}
     * @returns {number} Signed high bits
     */
    LongPrototype.getHighBits = function getHighBits() {
      return this.high;
    };

    /**
     * Gets the high 32 bits as an unsigned integer.
     * @this {!Long}
     * @returns {number} Unsigned high bits
     */
    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {
      return this.high >>> 0;
    };

    /**
     * Gets the low 32 bits as a signed integer.
     * @this {!Long}
     * @returns {number} Signed low bits
     */
    LongPrototype.getLowBits = function getLowBits() {
      return this.low;
    };

    /**
     * Gets the low 32 bits as an unsigned integer.
     * @this {!Long}
     * @returns {number} Unsigned low bits
     */
    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {
      return this.low >>> 0;
    };

    /**
     * Gets the number of bits needed to represent the absolute value of this Long.
     * @this {!Long}
     * @returns {number}
     */
    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {
      if (this.isNegative()) // Unsigned Longs are never negative
        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
      var val = this.high != 0 ? this.high : this.low;
      for (var bit = 31; bit > 0; bit--)
        if ((val & (1 << bit)) != 0)
          break;
      return this.high != 0 ? bit + 33 : bit + 1;
    };

    /**
     * Tests if this Long's value equals zero.
     * @this {!Long}
     * @returns {boolean}
     */
    LongPrototype.isZero = function isZero() {
      return this.high === 0 && this.low === 0;
    };

    /**
     * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.
     * @returns {boolean}
     */
    LongPrototype.eqz = LongPrototype.isZero;

    /**
     * Tests if this Long's value is negative.
     * @this {!Long}
     * @returns {boolean}
     */
    LongPrototype.isNegative = function isNegative() {
      return !this.unsigned && this.high < 0;
    };

    /**
     * Tests if this Long's value is positive or zero.
     * @this {!Long}
     * @returns {boolean}
     */
    LongPrototype.isPositive = function isPositive() {
      return this.unsigned || this.high >= 0;
    };

    /**
     * Tests if this Long's value is odd.
     * @this {!Long}
     * @returns {boolean}
     */
    LongPrototype.isOdd = function isOdd() {
      return (this.low & 1) === 1;
    };

    /**
     * Tests if this Long's value is even.
     * @this {!Long}
     * @returns {boolean}
     */
    LongPrototype.isEven = function isEven() {
      return (this.low & 1) === 0;
    };

    /**
     * Tests if this Long's value equals the specified's.
     * @this {!Long}
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.equals = function equals(other) {
      if (!isLong(other))
        other = fromValue(other);
      if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)
        return false;
      return this.high === other.high && this.low === other.low;
    };

    /**
     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.eq = LongPrototype.equals;

    /**
     * Tests if this Long's value differs from the specified's.
     * @this {!Long}
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.notEquals = function notEquals(other) {
      return !this.eq(/* validates */ other);
    };

    /**
     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.neq = LongPrototype.notEquals;

    /**
     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.ne = LongPrototype.notEquals;

    /**
     * Tests if this Long's value is less than the specified's.
     * @this {!Long}
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lessThan = function lessThan(other) {
      return this.comp(/* validates */ other) < 0;
    };

    /**
     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lt = LongPrototype.lessThan;

    /**
     * Tests if this Long's value is less than or equal the specified's.
     * @this {!Long}
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {
      return this.comp(/* validates */ other) <= 0;
    };

    /**
     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lte = LongPrototype.lessThanOrEqual;

    /**
     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.le = LongPrototype.lessThanOrEqual;

    /**
     * Tests if this Long's value is greater than the specified's.
     * @this {!Long}
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.greaterThan = function greaterThan(other) {
      return this.comp(/* validates */ other) > 0;
    };

    /**
     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.gt = LongPrototype.greaterThan;

    /**
     * Tests if this Long's value is greater than or equal the specified's.
     * @this {!Long}
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {
      return this.comp(/* validates */ other) >= 0;
    };

    /**
     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.gte = LongPrototype.greaterThanOrEqual;

    /**
     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.ge = LongPrototype.greaterThanOrEqual;

    /**
     * Compares this Long's value with the specified's.
     * @this {!Long}
     * @param {!Long|number|string} other Other value
     * @returns {number} 0 if they are the same, 1 if the this is greater and -1
     *  if the given one is greater
     */
    LongPrototype.compare = function compare(other) {
      if (!isLong(other))
        other = fromValue(other);
      if (this.eq(other))
        return 0;
      var thisNeg = this.isNegative(),
        otherNeg = other.isNegative();
      if (thisNeg && !otherNeg)
        return -1;
      if (!thisNeg && otherNeg)
        return 1;
      // At this point the sign bits are the same
      if (!this.unsigned)
        return this.sub(other).isNegative() ? -1 : 1;
      // Both are positive if at least one is unsigned
      return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;
    };

    /**
     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {number} 0 if they are the same, 1 if the this is greater and -1
     *  if the given one is greater
     */
    LongPrototype.comp = LongPrototype.compare;

    /**
     * Negates this Long's value.
     * @this {!Long}
     * @returns {!Long} Negated Long
     */
    LongPrototype.negate = function negate() {
      if (!this.unsigned && this.eq(MIN_VALUE))
        return MIN_VALUE;
      return this.not().add(ONE);
    };

    /**
     * Negates this Long's value. This is an alias of {@link Long#negate}.
     * @function
     * @returns {!Long} Negated Long
     */
    LongPrototype.neg = LongPrototype.negate;

    /**
     * Returns the sum of this and the specified Long.
     * @this {!Long}
     * @param {!Long|number|string} addend Addend
     * @returns {!Long} Sum
     */
    LongPrototype.add = function add(addend) {
      if (!isLong(addend))
        addend = fromValue(addend);

      // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

      var a48 = this.high >>> 16;
      var a32 = this.high & 0xFFFF;
      var a16 = this.low >>> 16;
      var a00 = this.low & 0xFFFF;

      var b48 = addend.high >>> 16;
      var b32 = addend.high & 0xFFFF;
      var b16 = addend.low >>> 16;
      var b00 = addend.low & 0xFFFF;

      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 + b00;
      c16 += c00 >>> 16;
      c00 &= 0xFFFF;
      c16 += a16 + b16;
      c32 += c16 >>> 16;
      c16 &= 0xFFFF;
      c32 += a32 + b32;
      c48 += c32 >>> 16;
      c32 &= 0xFFFF;
      c48 += a48 + b48;
      c48 &= 0xFFFF;
      return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
    };

    /**
     * Returns the difference of this and the specified Long.
     * @this {!Long}
     * @param {!Long|number|string} subtrahend Subtrahend
     * @returns {!Long} Difference
     */
    LongPrototype.subtract = function subtract(subtrahend) {
      if (!isLong(subtrahend))
        subtrahend = fromValue(subtrahend);
      return this.add(subtrahend.neg());
    };

    /**
     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.
     * @function
     * @param {!Long|number|string} subtrahend Subtrahend
     * @returns {!Long} Difference
     */
    LongPrototype.sub = LongPrototype.subtract;

    /**
     * Returns the product of this and the specified Long.
     * @this {!Long}
     * @param {!Long|number|string} multiplier Multiplier
     * @returns {!Long} Product
     */
    LongPrototype.multiply = function multiply(multiplier) {
      if (this.isZero())
        return this;
      if (!isLong(multiplier))
        multiplier = fromValue(multiplier);

      // use wasm support if present
      if (wasm) {
        var low = wasm["mul"](this.low,
          this.high,
          multiplier.low,
          multiplier.high);
        return fromBits(low, wasm["get_high"](), this.unsigned);
      }

      if (multiplier.isZero())
        return this.unsigned ? UZERO : ZERO;
      if (this.eq(MIN_VALUE))
        return multiplier.isOdd() ? MIN_VALUE : ZERO;
      if (multiplier.eq(MIN_VALUE))
        return this.isOdd() ? MIN_VALUE : ZERO;

      if (this.isNegative()) {
        if (multiplier.isNegative())
          return this.neg().mul(multiplier.neg());
        else
          return this.neg().mul(multiplier).neg();
      } else if (multiplier.isNegative())
        return this.mul(multiplier.neg()).neg();

      // If both longs are small, use float multiplication
      if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))
        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);

      // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
      // We can skip products that would overflow.

      var a48 = this.high >>> 16;
      var a32 = this.high & 0xFFFF;
      var a16 = this.low >>> 16;
      var a00 = this.low & 0xFFFF;

      var b48 = multiplier.high >>> 16;
      var b32 = multiplier.high & 0xFFFF;
      var b16 = multiplier.low >>> 16;
      var b00 = multiplier.low & 0xFFFF;

      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 * b00;
      c16 += c00 >>> 16;
      c00 &= 0xFFFF;
      c16 += a16 * b00;
      c32 += c16 >>> 16;
      c16 &= 0xFFFF;
      c16 += a00 * b16;
      c32 += c16 >>> 16;
      c16 &= 0xFFFF;
      c32 += a32 * b00;
      c48 += c32 >>> 16;
      c32 &= 0xFFFF;
      c32 += a16 * b16;
      c48 += c32 >>> 16;
      c32 &= 0xFFFF;
      c32 += a00 * b32;
      c48 += c32 >>> 16;
      c32 &= 0xFFFF;
      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
      c48 &= 0xFFFF;
      return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
    };

    /**
     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.
     * @function
     * @param {!Long|number|string} multiplier Multiplier
     * @returns {!Long} Product
     */
    LongPrototype.mul = LongPrototype.multiply;

    /**
     * Returns this Long divided by the specified. The result is signed if this Long is signed or
     *  unsigned if this Long is unsigned.
     * @this {!Long}
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Quotient
     */
    LongPrototype.divide = function divide(divisor) {
      if (!isLong(divisor))
        divisor = fromValue(divisor);
      if (divisor.isZero())
        throw Error('division by zero');

      // use wasm support if present
      if (wasm) {
        // guard against signed division overflow: the largest
        // negative number / -1 would be 1 larger than the largest
        // positive number, due to two's complement.
        if (!this.unsigned &&
          this.high === -0x80000000 &&
          divisor.low === -1 && divisor.high === -1) {
          // be consistent with non-wasm code path
          return this;
        }
        var low = (this.unsigned ? wasm["div_u"] : wasm["div_s"])(
          this.low,
          this.high,
          divisor.low,
          divisor.high
        );
        return fromBits(low, wasm["get_high"](), this.unsigned);
      }

      if (this.isZero())
        return this.unsigned ? UZERO : ZERO;
      var approx, rem, res;
      if (!this.unsigned) {
        // This section is only relevant for signed longs and is derived from the
        // closure library as a whole.
        if (this.eq(MIN_VALUE)) {
          if (divisor.eq(ONE) || divisor.eq(NEG_ONE))
            return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
          else if (divisor.eq(MIN_VALUE))
            return ONE;
          else {
            // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
            var halfThis = this.shr(1);
            approx = halfThis.div(divisor).shl(1);
            if (approx.eq(ZERO)) {
              return divisor.isNegative() ? ONE : NEG_ONE;
            } else {
              rem = this.sub(divisor.mul(approx));
              res = approx.add(rem.div(divisor));
              return res;
            }
          }
        } else if (divisor.eq(MIN_VALUE))
          return this.unsigned ? UZERO : ZERO;
        if (this.isNegative()) {
          if (divisor.isNegative())
            return this.neg().div(divisor.neg());
          return this.neg().div(divisor).neg();
        } else if (divisor.isNegative())
          return this.div(divisor.neg()).neg();
        res = ZERO;
      } else {
        // The algorithm below has not been made for unsigned longs. It's therefore
        // required to take special care of the MSB prior to running it.
        if (!divisor.unsigned)
          divisor = divisor.toUnsigned();
        if (divisor.gt(this))
          return UZERO;
        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true
          return UONE;
        res = UZERO;
      }

      // Repeat the following until the remainder is less than other:  find a
      // floating-point that approximates remainder / other *from below*, add this
      // into the result, and subtract it from the remainder.  It is critical that
      // the approximate value is less than or equal to the real value so that the
      // remainder never becomes negative.
      rem = this;
      while (rem.gte(divisor)) {
        // Approximate the result of division. This may be a little greater or
        // smaller than the actual value.
        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));

        // We will tweak the approximate result by changing it in the 48-th digit or
        // the smallest non-fractional digit, whichever is larger.
        var log2 = Math.ceil(Math.log(approx) / Math.LN2),
          delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),

          // Decrease the approximation until it is smaller than the remainder.  Note
          // that if it is too large, the product overflows and is negative.
          approxRes = fromNumber(approx),
          approxRem = approxRes.mul(divisor);
        while (approxRem.isNegative() || approxRem.gt(rem)) {
          approx -= delta;
          approxRes = fromNumber(approx, this.unsigned);
          approxRem = approxRes.mul(divisor);
        }

        // We know the answer can't be zero... and actually, zero would cause
        // infinite recursion since we would make no progress.
        if (approxRes.isZero())
          approxRes = ONE;

        res = res.add(approxRes);
        rem = rem.sub(approxRem);
      }
      return res;
    };

    /**
     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.
     * @function
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Quotient
     */
    LongPrototype.div = LongPrototype.divide;

    /**
     * Returns this Long modulo the specified.
     * @this {!Long}
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Remainder
     */
    LongPrototype.modulo = function modulo(divisor) {
      if (!isLong(divisor))
        divisor = fromValue(divisor);

      // use wasm support if present
      if (wasm) {
        var low = (this.unsigned ? wasm["rem_u"] : wasm["rem_s"])(
          this.low,
          this.high,
          divisor.low,
          divisor.high
        );
        return fromBits(low, wasm["get_high"](), this.unsigned);
      }

      return this.sub(this.div(divisor).mul(divisor));
    };

    /**
     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
     * @function
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Remainder
     */
    LongPrototype.mod = LongPrototype.modulo;

    /**
     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
     * @function
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Remainder
     */
    LongPrototype.rem = LongPrototype.modulo;

    /**
     * Returns the bitwise NOT of this Long.
     * @this {!Long}
     * @returns {!Long}
     */
    LongPrototype.not = function not() {
      return fromBits(~this.low, ~this.high, this.unsigned);
    };

    /**
     * Returns count leading zeros of this Long.
     * @this {!Long}
     * @returns {!number}
     */
    LongPrototype.countLeadingZeros = function countLeadingZeros() {
      return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;
    };

    /**
     * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.
     * @function
     * @param {!Long}
     * @returns {!number}
     */
    LongPrototype.clz = LongPrototype.countLeadingZeros;

    /**
     * Returns count trailing zeros of this Long.
     * @this {!Long}
     * @returns {!number}
     */
    LongPrototype.countTrailingZeros = function countTrailingZeros() {
      return this.low ? ctz32(this.low) : ctz32(this.high) + 32;
    };

    /**
     * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.
     * @function
     * @param {!Long}
     * @returns {!number}
     */
    LongPrototype.ctz = LongPrototype.countTrailingZeros;

    /**
     * Returns the bitwise AND of this Long and the specified.
     * @this {!Long}
     * @param {!Long|number|string} other Other Long
     * @returns {!Long}
     */
    LongPrototype.and = function and(other) {
      if (!isLong(other))
        other = fromValue(other);
      return fromBits(this.low & other.low, this.high & other.high, this.unsigned);
    };

    /**
     * Returns the bitwise OR of this Long and the specified.
     * @this {!Long}
     * @param {!Long|number|string} other Other Long
     * @returns {!Long}
     */
    LongPrototype.or = function or(other) {
      if (!isLong(other))
        other = fromValue(other);
      return fromBits(this.low | other.low, this.high | other.high, this.unsigned);
    };

    /**
     * Returns the bitwise XOR of this Long and the given one.
     * @this {!Long}
     * @param {!Long|number|string} other Other Long
     * @returns {!Long}
     */
    LongPrototype.xor = function xor(other) {
      if (!isLong(other))
        other = fromValue(other);
      return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);
    };

    /**
     * Returns this Long with bits shifted to the left by the given amount.
     * @this {!Long}
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shiftLeft = function shiftLeft(numBits) {
      if (isLong(numBits))
        numBits = numBits.toInt();
      if ((numBits &= 63) === 0)
        return this;
      else if (numBits < 32)
        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);
      else
        return fromBits(0, this.low << (numBits - 32), this.unsigned);
    };

    /**
     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shl = LongPrototype.shiftLeft;

    /**
     * Returns this Long with bits arithmetically shifted to the right by the given amount.
     * @this {!Long}
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shiftRight = function shiftRight(numBits) {
      if (isLong(numBits))
        numBits = numBits.toInt();
      if ((numBits &= 63) === 0)
        return this;
      else if (numBits < 32)
        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);
      else
        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);
    };

    /**
     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shr = LongPrototype.shiftRight;

    /**
     * Returns this Long with bits logically shifted to the right by the given amount.
     * @this {!Long}
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {
      if (isLong(numBits)) numBits = numBits.toInt();
      if ((numBits &= 63) === 0) return this;
      if (numBits < 32) return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >>> numBits, this.unsigned);
      if (numBits === 32) return fromBits(this.high, 0, this.unsigned);
      return fromBits(this.high >>> (numBits - 32), 0, this.unsigned);
    };

    /**
     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shru = LongPrototype.shiftRightUnsigned;

    /**
     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;

    /**
     * Returns this Long with bits rotated to the left by the given amount.
     * @this {!Long}
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Rotated Long
     */
    LongPrototype.rotateLeft = function rotateLeft(numBits) {
      var b;
      if (isLong(numBits)) numBits = numBits.toInt();
      if ((numBits &= 63) === 0) return this;
      if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);
      if (numBits < 32) {
        b = (32 - numBits);
        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);
      }
      numBits -= 32;
      b = (32 - numBits);
      return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);
    };
    /**
     * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Rotated Long
     */
    LongPrototype.rotl = LongPrototype.rotateLeft;

    /**
     * Returns this Long with bits rotated to the right by the given amount.
     * @this {!Long}
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Rotated Long
     */
    LongPrototype.rotateRight = function rotateRight(numBits) {
      var b;
      if (isLong(numBits)) numBits = numBits.toInt();
      if ((numBits &= 63) === 0) return this;
      if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);
      if (numBits < 32) {
        b = (32 - numBits);
        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);
      }
      numBits -= 32;
      b = (32 - numBits);
      return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);
    };
    /**
     * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Rotated Long
     */
    LongPrototype.rotr = LongPrototype.rotateRight;

    /**
     * Converts this Long to signed.
     * @this {!Long}
     * @returns {!Long} Signed long
     */
    LongPrototype.toSigned = function toSigned() {
      if (!this.unsigned)
        return this;
      return fromBits(this.low, this.high, false);
    };

    /**
     * Converts this Long to unsigned.
     * @this {!Long}
     * @returns {!Long} Unsigned long
     */
    LongPrototype.toUnsigned = function toUnsigned() {
      if (this.unsigned)
        return this;
      return fromBits(this.low, this.high, true);
    };

    /**
     * Converts this Long to its byte representation.
     * @param {boolean=} le Whether little or big endian, defaults to big endian
     * @this {!Long}
     * @returns {!Array.<number>} Byte representation
     */
    LongPrototype.toBytes = function toBytes(le) {
      return le ? this.toBytesLE() : this.toBytesBE();
    };

    /**
     * Converts this Long to its little endian byte representation.
     * @this {!Long}
     * @returns {!Array.<number>} Little endian byte representation
     */
    LongPrototype.toBytesLE = function toBytesLE() {
      var hi = this.high,
        lo = this.low;
      return [
        lo & 0xff,
        lo >>> 8 & 0xff,
        lo >>> 16 & 0xff,
        lo >>> 24,
        hi & 0xff,
        hi >>> 8 & 0xff,
        hi >>> 16 & 0xff,
        hi >>> 24
      ];
    };

    /**
     * Converts this Long to its big endian byte representation.
     * @this {!Long}
     * @returns {!Array.<number>} Big endian byte representation
     */
    LongPrototype.toBytesBE = function toBytesBE() {
      var hi = this.high,
        lo = this.low;
      return [
        hi >>> 24,
        hi >>> 16 & 0xff,
        hi >>> 8 & 0xff,
        hi & 0xff,
        lo >>> 24,
        lo >>> 16 & 0xff,
        lo >>> 8 & 0xff,
        lo & 0xff
      ];
    };

    /**
     * Creates a Long from its byte representation.
     * @param {!Array.<number>} bytes Byte representation
     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
     * @param {boolean=} le Whether little or big endian, defaults to big endian
     * @returns {Long} The corresponding Long value
     */
    Long.fromBytes = function fromBytes(bytes, unsigned, le) {
      return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);
    };

    /**
     * Creates a Long from its little endian byte representation.
     * @param {!Array.<number>} bytes Little endian byte representation
     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
     * @returns {Long} The corresponding Long value
     */
    Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {
      return new Long(
        bytes[0] |
        bytes[1] << 8 |
        bytes[2] << 16 |
        bytes[3] << 24,
        bytes[4] |
        bytes[5] << 8 |
        bytes[6] << 16 |
        bytes[7] << 24,
        unsigned
      );
    };

    /**
     * Creates a Long from its big endian byte representation.
     * @param {!Array.<number>} bytes Big endian byte representation
     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
     * @returns {Long} The corresponding Long value
     */
    Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {
      return new Long(
        bytes[4] << 24 |
        bytes[5] << 16 |
        bytes[6] << 8 |
        bytes[7],
        bytes[0] << 24 |
        bytes[1] << 16 |
        bytes[2] << 8 |
        bytes[3],
        unsigned
      );
    };

    var indexMinimal = {};

    var minimal$1 = {};

    var aspromise = asPromise;

    /**
     * Callback as used by {@link util.asPromise}.
     * @typedef asPromiseCallback
     * @type {function}
     * @param {Error|null} error Error, if any
     * @param {...*} params Additional arguments
     * @returns {undefined}
     */

    /**
     * Returns a promise from a node-style callback function.
     * @memberof util
     * @param {asPromiseCallback} fn Function to call
     * @param {*} ctx Function context
     * @param {...*} params Function arguments
     * @returns {Promise<*>} Promisified function
     */
    function asPromise(fn, ctx/*, varargs */) {
        var params  = new Array(arguments.length - 1),
            offset  = 0,
            index   = 2,
            pending = true;
        while (index < arguments.length)
            params[offset++] = arguments[index++];
        return new Promise(function executor(resolve, reject) {
            params[offset] = function callback(err/*, varargs */) {
                if (pending) {
                    pending = false;
                    if (err)
                        reject(err);
                    else {
                        var params = new Array(arguments.length - 1),
                            offset = 0;
                        while (offset < params.length)
                            params[offset++] = arguments[offset];
                        resolve.apply(null, params);
                    }
                }
            };
            try {
                fn.apply(ctx || null, params);
            } catch (err) {
                if (pending) {
                    pending = false;
                    reject(err);
                }
            }
        });
    }

    var base64$1 = {};

    (function (exports) {

    /**
     * A minimal base64 implementation for number arrays.
     * @memberof util
     * @namespace
     */
    var base64 = exports;

    /**
     * Calculates the byte length of a base64 encoded string.
     * @param {string} string Base64 encoded string
     * @returns {number} Byte length
     */
    base64.length = function length(string) {
        var p = string.length;
        if (!p)
            return 0;
        var n = 0;
        while (--p % 4 > 1 && string.charAt(p) === "=")
            ++n;
        return Math.ceil(string.length * 3) / 4 - n;
    };

    // Base64 encoding table
    var b64 = new Array(64);

    // Base64 decoding table
    var s64 = new Array(123);

    // 65..90, 97..122, 48..57, 43, 47
    for (var i = 0; i < 64;)
        s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;

    /**
     * Encodes a buffer to a base64 encoded string.
     * @param {Uint8Array} buffer Source buffer
     * @param {number} start Source start
     * @param {number} end Source end
     * @returns {string} Base64 encoded string
     */
    base64.encode = function encode(buffer, start, end) {
        var parts = null,
            chunk = [];
        var i = 0, // output index
            j = 0, // goto index
            t;     // temporary
        while (start < end) {
            var b = buffer[start++];
            switch (j) {
                case 0:
                    chunk[i++] = b64[b >> 2];
                    t = (b & 3) << 4;
                    j = 1;
                    break;
                case 1:
                    chunk[i++] = b64[t | b >> 4];
                    t = (b & 15) << 2;
                    j = 2;
                    break;
                case 2:
                    chunk[i++] = b64[t | b >> 6];
                    chunk[i++] = b64[b & 63];
                    j = 0;
                    break;
            }
            if (i > 8191) {
                (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
                i = 0;
            }
        }
        if (j) {
            chunk[i++] = b64[t];
            chunk[i++] = 61;
            if (j === 1)
                chunk[i++] = 61;
        }
        if (parts) {
            if (i)
                parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
            return parts.join("");
        }
        return String.fromCharCode.apply(String, chunk.slice(0, i));
    };

    var invalidEncoding = "invalid encoding";

    /**
     * Decodes a base64 encoded string to a buffer.
     * @param {string} string Source string
     * @param {Uint8Array} buffer Destination buffer
     * @param {number} offset Destination offset
     * @returns {number} Number of bytes written
     * @throws {Error} If encoding is invalid
     */
    base64.decode = function decode(string, buffer, offset) {
        var start = offset;
        var j = 0, // goto index
            t;     // temporary
        for (var i = 0; i < string.length;) {
            var c = string.charCodeAt(i++);
            if (c === 61 && j > 1)
                break;
            if ((c = s64[c]) === undefined)
                throw Error(invalidEncoding);
            switch (j) {
                case 0:
                    t = c;
                    j = 1;
                    break;
                case 1:
                    buffer[offset++] = t << 2 | (c & 48) >> 4;
                    t = c;
                    j = 2;
                    break;
                case 2:
                    buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;
                    t = c;
                    j = 3;
                    break;
                case 3:
                    buffer[offset++] = (t & 3) << 6 | c;
                    j = 0;
                    break;
            }
        }
        if (j === 1)
            throw Error(invalidEncoding);
        return offset - start;
    };

    /**
     * Tests if the specified string appears to be base64 encoded.
     * @param {string} string String to test
     * @returns {boolean} `true` if probably base64 encoded, otherwise false
     */
    base64.test = function test(string) {
        return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);
    };
    }(base64$1));

    var eventemitter = EventEmitter;

    /**
     * Constructs a new event emitter instance.
     * @classdesc A minimal event emitter.
     * @memberof util
     * @constructor
     */
    function EventEmitter() {

        /**
         * Registered listeners.
         * @type {Object.<string,*>}
         * @private
         */
        this._listeners = {};
    }

    /**
     * Registers an event listener.
     * @param {string} evt Event name
     * @param {function} fn Listener
     * @param {*} [ctx] Listener context
     * @returns {util.EventEmitter} `this`
     */
    EventEmitter.prototype.on = function on(evt, fn, ctx) {
        (this._listeners[evt] || (this._listeners[evt] = [])).push({
            fn  : fn,
            ctx : ctx || this
        });
        return this;
    };

    /**
     * Removes an event listener or any matching listeners if arguments are omitted.
     * @param {string} [evt] Event name. Removes all listeners if omitted.
     * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.
     * @returns {util.EventEmitter} `this`
     */
    EventEmitter.prototype.off = function off(evt, fn) {
        if (evt === undefined)
            this._listeners = {};
        else {
            if (fn === undefined)
                this._listeners[evt] = [];
            else {
                var listeners = this._listeners[evt];
                for (var i = 0; i < listeners.length;)
                    if (listeners[i].fn === fn)
                        listeners.splice(i, 1);
                    else
                        ++i;
            }
        }
        return this;
    };

    /**
     * Emits an event by calling its listeners with the specified arguments.
     * @param {string} evt Event name
     * @param {...*} args Arguments
     * @returns {util.EventEmitter} `this`
     */
    EventEmitter.prototype.emit = function emit(evt) {
        var listeners = this._listeners[evt];
        if (listeners) {
            var args = [],
                i = 1;
            for (; i < arguments.length;)
                args.push(arguments[i++]);
            for (i = 0; i < listeners.length;)
                listeners[i].fn.apply(listeners[i++].ctx, args);
        }
        return this;
    };

    var float = factory(factory);

    /**
     * Reads / writes floats / doubles from / to buffers.
     * @name util.float
     * @namespace
     */

    /**
     * Writes a 32 bit float to a buffer using little endian byte order.
     * @name util.float.writeFloatLE
     * @function
     * @param {number} val Value to write
     * @param {Uint8Array} buf Target buffer
     * @param {number} pos Target buffer offset
     * @returns {undefined}
     */

    /**
     * Writes a 32 bit float to a buffer using big endian byte order.
     * @name util.float.writeFloatBE
     * @function
     * @param {number} val Value to write
     * @param {Uint8Array} buf Target buffer
     * @param {number} pos Target buffer offset
     * @returns {undefined}
     */

    /**
     * Reads a 32 bit float from a buffer using little endian byte order.
     * @name util.float.readFloatLE
     * @function
     * @param {Uint8Array} buf Source buffer
     * @param {number} pos Source buffer offset
     * @returns {number} Value read
     */

    /**
     * Reads a 32 bit float from a buffer using big endian byte order.
     * @name util.float.readFloatBE
     * @function
     * @param {Uint8Array} buf Source buffer
     * @param {number} pos Source buffer offset
     * @returns {number} Value read
     */

    /**
     * Writes a 64 bit double to a buffer using little endian byte order.
     * @name util.float.writeDoubleLE
     * @function
     * @param {number} val Value to write
     * @param {Uint8Array} buf Target buffer
     * @param {number} pos Target buffer offset
     * @returns {undefined}
     */

    /**
     * Writes a 64 bit double to a buffer using big endian byte order.
     * @name util.float.writeDoubleBE
     * @function
     * @param {number} val Value to write
     * @param {Uint8Array} buf Target buffer
     * @param {number} pos Target buffer offset
     * @returns {undefined}
     */

    /**
     * Reads a 64 bit double from a buffer using little endian byte order.
     * @name util.float.readDoubleLE
     * @function
     * @param {Uint8Array} buf Source buffer
     * @param {number} pos Source buffer offset
     * @returns {number} Value read
     */

    /**
     * Reads a 64 bit double from a buffer using big endian byte order.
     * @name util.float.readDoubleBE
     * @function
     * @param {Uint8Array} buf Source buffer
     * @param {number} pos Source buffer offset
     * @returns {number} Value read
     */

    // Factory function for the purpose of node-based testing in modified global environments
    function factory(exports) {

        // float: typed array
        if (typeof Float32Array !== "undefined") (function() {

            var f32 = new Float32Array([ -0 ]),
                f8b = new Uint8Array(f32.buffer),
                le  = f8b[3] === 128;

            function writeFloat_f32_cpy(val, buf, pos) {
                f32[0] = val;
                buf[pos    ] = f8b[0];
                buf[pos + 1] = f8b[1];
                buf[pos + 2] = f8b[2];
                buf[pos + 3] = f8b[3];
            }

            function writeFloat_f32_rev(val, buf, pos) {
                f32[0] = val;
                buf[pos    ] = f8b[3];
                buf[pos + 1] = f8b[2];
                buf[pos + 2] = f8b[1];
                buf[pos + 3] = f8b[0];
            }

            /* istanbul ignore next */
            exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;
            /* istanbul ignore next */
            exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;

            function readFloat_f32_cpy(buf, pos) {
                f8b[0] = buf[pos    ];
                f8b[1] = buf[pos + 1];
                f8b[2] = buf[pos + 2];
                f8b[3] = buf[pos + 3];
                return f32[0];
            }

            function readFloat_f32_rev(buf, pos) {
                f8b[3] = buf[pos    ];
                f8b[2] = buf[pos + 1];
                f8b[1] = buf[pos + 2];
                f8b[0] = buf[pos + 3];
                return f32[0];
            }

            /* istanbul ignore next */
            exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;
            /* istanbul ignore next */
            exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;

        // float: ieee754
        })(); else (function() {

            function writeFloat_ieee754(writeUint, val, buf, pos) {
                var sign = val < 0 ? 1 : 0;
                if (sign)
                    val = -val;
                if (val === 0)
                    writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);
                else if (isNaN(val))
                    writeUint(2143289344, buf, pos);
                else if (val > 3.4028234663852886e+38) // +-Infinity
                    writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);
                else if (val < 1.1754943508222875e-38) // denormal
                    writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);
                else {
                    var exponent = Math.floor(Math.log(val) / Math.LN2),
                        mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;
                    writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);
                }
            }

            exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);
            exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);

            function readFloat_ieee754(readUint, buf, pos) {
                var uint = readUint(buf, pos),
                    sign = (uint >> 31) * 2 + 1,
                    exponent = uint >>> 23 & 255,
                    mantissa = uint & 8388607;
                return exponent === 255
                    ? mantissa
                    ? NaN
                    : sign * Infinity
                    : exponent === 0 // denormal
                    ? sign * 1.401298464324817e-45 * mantissa
                    : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);
            }

            exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);
            exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);

        })();

        // double: typed array
        if (typeof Float64Array !== "undefined") (function() {

            var f64 = new Float64Array([-0]),
                f8b = new Uint8Array(f64.buffer),
                le  = f8b[7] === 128;

            function writeDouble_f64_cpy(val, buf, pos) {
                f64[0] = val;
                buf[pos    ] = f8b[0];
                buf[pos + 1] = f8b[1];
                buf[pos + 2] = f8b[2];
                buf[pos + 3] = f8b[3];
                buf[pos + 4] = f8b[4];
                buf[pos + 5] = f8b[5];
                buf[pos + 6] = f8b[6];
                buf[pos + 7] = f8b[7];
            }

            function writeDouble_f64_rev(val, buf, pos) {
                f64[0] = val;
                buf[pos    ] = f8b[7];
                buf[pos + 1] = f8b[6];
                buf[pos + 2] = f8b[5];
                buf[pos + 3] = f8b[4];
                buf[pos + 4] = f8b[3];
                buf[pos + 5] = f8b[2];
                buf[pos + 6] = f8b[1];
                buf[pos + 7] = f8b[0];
            }

            /* istanbul ignore next */
            exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;
            /* istanbul ignore next */
            exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;

            function readDouble_f64_cpy(buf, pos) {
                f8b[0] = buf[pos    ];
                f8b[1] = buf[pos + 1];
                f8b[2] = buf[pos + 2];
                f8b[3] = buf[pos + 3];
                f8b[4] = buf[pos + 4];
                f8b[5] = buf[pos + 5];
                f8b[6] = buf[pos + 6];
                f8b[7] = buf[pos + 7];
                return f64[0];
            }

            function readDouble_f64_rev(buf, pos) {
                f8b[7] = buf[pos    ];
                f8b[6] = buf[pos + 1];
                f8b[5] = buf[pos + 2];
                f8b[4] = buf[pos + 3];
                f8b[3] = buf[pos + 4];
                f8b[2] = buf[pos + 5];
                f8b[1] = buf[pos + 6];
                f8b[0] = buf[pos + 7];
                return f64[0];
            }

            /* istanbul ignore next */
            exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;
            /* istanbul ignore next */
            exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;

        // double: ieee754
        })(); else (function() {

            function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {
                var sign = val < 0 ? 1 : 0;
                if (sign)
                    val = -val;
                if (val === 0) {
                    writeUint(0, buf, pos + off0);
                    writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);
                } else if (isNaN(val)) {
                    writeUint(0, buf, pos + off0);
                    writeUint(2146959360, buf, pos + off1);
                } else if (val > 1.7976931348623157e+308) { // +-Infinity
                    writeUint(0, buf, pos + off0);
                    writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);
                } else {
                    var mantissa;
                    if (val < 2.2250738585072014e-308) { // denormal
                        mantissa = val / 5e-324;
                        writeUint(mantissa >>> 0, buf, pos + off0);
                        writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);
                    } else {
                        var exponent = Math.floor(Math.log(val) / Math.LN2);
                        if (exponent === 1024)
                            exponent = 1023;
                        mantissa = val * Math.pow(2, -exponent);
                        writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);
                        writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);
                    }
                }
            }

            exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);
            exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);

            function readDouble_ieee754(readUint, off0, off1, buf, pos) {
                var lo = readUint(buf, pos + off0),
                    hi = readUint(buf, pos + off1);
                var sign = (hi >> 31) * 2 + 1,
                    exponent = hi >>> 20 & 2047,
                    mantissa = 4294967296 * (hi & 1048575) + lo;
                return exponent === 2047
                    ? mantissa
                    ? NaN
                    : sign * Infinity
                    : exponent === 0 // denormal
                    ? sign * 5e-324 * mantissa
                    : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);
            }

            exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);
            exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);

        })();

        return exports;
    }

    // uint helpers

    function writeUintLE(val, buf, pos) {
        buf[pos    ] =  val        & 255;
        buf[pos + 1] =  val >>> 8  & 255;
        buf[pos + 2] =  val >>> 16 & 255;
        buf[pos + 3] =  val >>> 24;
    }

    function writeUintBE(val, buf, pos) {
        buf[pos    ] =  val >>> 24;
        buf[pos + 1] =  val >>> 16 & 255;
        buf[pos + 2] =  val >>> 8  & 255;
        buf[pos + 3] =  val        & 255;
    }

    function readUintLE(buf, pos) {
        return (buf[pos    ]
              | buf[pos + 1] << 8
              | buf[pos + 2] << 16
              | buf[pos + 3] << 24) >>> 0;
    }

    function readUintBE(buf, pos) {
        return (buf[pos    ] << 24
              | buf[pos + 1] << 16
              | buf[pos + 2] << 8
              | buf[pos + 3]) >>> 0;
    }

    var inquire_1 = inquire;

    /**
     * Requires a module only if available.
     * @memberof util
     * @param {string} moduleName Module to require
     * @returns {?Object} Required module if available and not empty, otherwise `null`
     */
    function inquire(moduleName) {
        try {
            var mod = eval("quire".replace(/^/,"re"))(moduleName); // eslint-disable-line no-eval
            if (mod && (mod.length || Object.keys(mod).length))
                return mod;
        } catch (e) {} // eslint-disable-line no-empty
        return null;
    }

    var utf8$2 = {};

    (function (exports) {

    /**
     * A minimal UTF8 implementation for number arrays.
     * @memberof util
     * @namespace
     */
    var utf8 = exports;

    /**
     * Calculates the UTF8 byte length of a string.
     * @param {string} string String
     * @returns {number} Byte length
     */
    utf8.length = function utf8_length(string) {
        var len = 0,
            c = 0;
        for (var i = 0; i < string.length; ++i) {
            c = string.charCodeAt(i);
            if (c < 128)
                len += 1;
            else if (c < 2048)
                len += 2;
            else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {
                ++i;
                len += 4;
            } else
                len += 3;
        }
        return len;
    };

    /**
     * Reads UTF8 bytes as a string.
     * @param {Uint8Array} buffer Source buffer
     * @param {number} start Source start
     * @param {number} end Source end
     * @returns {string} String read
     */
    utf8.read = function utf8_read(buffer, start, end) {
        var len = end - start;
        if (len < 1)
            return "";
        var parts = null,
            chunk = [],
            i = 0, // char offset
            t;     // temporary
        while (start < end) {
            t = buffer[start++];
            if (t < 128)
                chunk[i++] = t;
            else if (t > 191 && t < 224)
                chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;
            else if (t > 239 && t < 365) {
                t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;
                chunk[i++] = 0xD800 + (t >> 10);
                chunk[i++] = 0xDC00 + (t & 1023);
            } else
                chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;
            if (i > 8191) {
                (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
                i = 0;
            }
        }
        if (parts) {
            if (i)
                parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
            return parts.join("");
        }
        return String.fromCharCode.apply(String, chunk.slice(0, i));
    };

    /**
     * Writes a string as UTF8 bytes.
     * @param {string} string Source string
     * @param {Uint8Array} buffer Destination buffer
     * @param {number} offset Destination offset
     * @returns {number} Bytes written
     */
    utf8.write = function utf8_write(string, buffer, offset) {
        var start = offset,
            c1, // character 1
            c2; // character 2
        for (var i = 0; i < string.length; ++i) {
            c1 = string.charCodeAt(i);
            if (c1 < 128) {
                buffer[offset++] = c1;
            } else if (c1 < 2048) {
                buffer[offset++] = c1 >> 6       | 192;
                buffer[offset++] = c1       & 63 | 128;
            } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {
                c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);
                ++i;
                buffer[offset++] = c1 >> 18      | 240;
                buffer[offset++] = c1 >> 12 & 63 | 128;
                buffer[offset++] = c1 >> 6  & 63 | 128;
                buffer[offset++] = c1       & 63 | 128;
            } else {
                buffer[offset++] = c1 >> 12      | 224;
                buffer[offset++] = c1 >> 6  & 63 | 128;
                buffer[offset++] = c1       & 63 | 128;
            }
        }
        return offset - start;
    };
    }(utf8$2));

    var pool_1 = pool;

    /**
     * An allocator as used by {@link util.pool}.
     * @typedef PoolAllocator
     * @type {function}
     * @param {number} size Buffer size
     * @returns {Uint8Array} Buffer
     */

    /**
     * A slicer as used by {@link util.pool}.
     * @typedef PoolSlicer
     * @type {function}
     * @param {number} start Start offset
     * @param {number} end End offset
     * @returns {Uint8Array} Buffer slice
     * @this {Uint8Array}
     */

    /**
     * A general purpose buffer pool.
     * @memberof util
     * @function
     * @param {PoolAllocator} alloc Allocator
     * @param {PoolSlicer} slice Slicer
     * @param {number} [size=8192] Slab size
     * @returns {PoolAllocator} Pooled allocator
     */
    function pool(alloc, slice, size) {
        var SIZE   = size || 8192;
        var MAX    = SIZE >>> 1;
        var slab   = null;
        var offset = SIZE;
        return function pool_alloc(size) {
            if (size < 1 || size > MAX)
                return alloc(size);
            if (offset + size > SIZE) {
                slab = alloc(SIZE);
                offset = 0;
            }
            var buf = slice.call(slab, offset, offset += size);
            if (offset & 7) // align to 32 bit
                offset = (offset | 7) + 1;
            return buf;
        };
    }

    var longbits = LongBits$2;

    var util$5 = minimal$1;

    /**
     * Constructs new long bits.
     * @classdesc Helper class for working with the low and high bits of a 64 bit value.
     * @memberof util
     * @constructor
     * @param {number} lo Low 32 bits, unsigned
     * @param {number} hi High 32 bits, unsigned
     */
    function LongBits$2(lo, hi) {

        // note that the casts below are theoretically unnecessary as of today, but older statically
        // generated converter code might still call the ctor with signed 32bits. kept for compat.

        /**
         * Low bits.
         * @type {number}
         */
        this.lo = lo >>> 0;

        /**
         * High bits.
         * @type {number}
         */
        this.hi = hi >>> 0;
    }

    /**
     * Zero bits.
     * @memberof util.LongBits
     * @type {util.LongBits}
     */
    var zero = LongBits$2.zero = new LongBits$2(0, 0);

    zero.toNumber = function() { return 0; };
    zero.zzEncode = zero.zzDecode = function() { return this; };
    zero.length = function() { return 1; };

    /**
     * Zero hash.
     * @memberof util.LongBits
     * @type {string}
     */
    var zeroHash = LongBits$2.zeroHash = "\0\0\0\0\0\0\0\0";

    /**
     * Constructs new long bits from the specified number.
     * @param {number} value Value
     * @returns {util.LongBits} Instance
     */
    LongBits$2.fromNumber = function fromNumber(value) {
        if (value === 0)
            return zero;
        var sign = value < 0;
        if (sign)
            value = -value;
        var lo = value >>> 0,
            hi = (value - lo) / 4294967296 >>> 0;
        if (sign) {
            hi = ~hi >>> 0;
            lo = ~lo >>> 0;
            if (++lo > 4294967295) {
                lo = 0;
                if (++hi > 4294967295)
                    hi = 0;
            }
        }
        return new LongBits$2(lo, hi);
    };

    /**
     * Constructs new long bits from a number, long or string.
     * @param {Long|number|string} value Value
     * @returns {util.LongBits} Instance
     */
    LongBits$2.from = function from(value) {
        if (typeof value === "number")
            return LongBits$2.fromNumber(value);
        if (util$5.isString(value)) {
            /* istanbul ignore else */
            if (util$5.Long)
                value = util$5.Long.fromString(value);
            else
                return LongBits$2.fromNumber(parseInt(value, 10));
        }
        return value.low || value.high ? new LongBits$2(value.low >>> 0, value.high >>> 0) : zero;
    };

    /**
     * Converts this long bits to a possibly unsafe JavaScript number.
     * @param {boolean} [unsigned=false] Whether unsigned or not
     * @returns {number} Possibly unsafe number
     */
    LongBits$2.prototype.toNumber = function toNumber(unsigned) {
        if (!unsigned && this.hi >>> 31) {
            var lo = ~this.lo + 1 >>> 0,
                hi = ~this.hi     >>> 0;
            if (!lo)
                hi = hi + 1 >>> 0;
            return -(lo + hi * 4294967296);
        }
        return this.lo + this.hi * 4294967296;
    };

    /**
     * Converts this long bits to a long.
     * @param {boolean} [unsigned=false] Whether unsigned or not
     * @returns {Long} Long
     */
    LongBits$2.prototype.toLong = function toLong(unsigned) {
        return util$5.Long
            ? new util$5.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))
            /* istanbul ignore next */
            : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };
    };

    var charCodeAt = String.prototype.charCodeAt;

    /**
     * Constructs new long bits from the specified 8 characters long hash.
     * @param {string} hash Hash
     * @returns {util.LongBits} Bits
     */
    LongBits$2.fromHash = function fromHash(hash) {
        if (hash === zeroHash)
            return zero;
        return new LongBits$2(
            ( charCodeAt.call(hash, 0)
            | charCodeAt.call(hash, 1) << 8
            | charCodeAt.call(hash, 2) << 16
            | charCodeAt.call(hash, 3) << 24) >>> 0
        ,
            ( charCodeAt.call(hash, 4)
            | charCodeAt.call(hash, 5) << 8
            | charCodeAt.call(hash, 6) << 16
            | charCodeAt.call(hash, 7) << 24) >>> 0
        );
    };

    /**
     * Converts this long bits to a 8 characters long hash.
     * @returns {string} Hash
     */
    LongBits$2.prototype.toHash = function toHash() {
        return String.fromCharCode(
            this.lo        & 255,
            this.lo >>> 8  & 255,
            this.lo >>> 16 & 255,
            this.lo >>> 24      ,
            this.hi        & 255,
            this.hi >>> 8  & 255,
            this.hi >>> 16 & 255,
            this.hi >>> 24
        );
    };

    /**
     * Zig-zag encodes this long bits.
     * @returns {util.LongBits} `this`
     */
    LongBits$2.prototype.zzEncode = function zzEncode() {
        var mask =   this.hi >> 31;
        this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;
        this.lo  = ( this.lo << 1                   ^ mask) >>> 0;
        return this;
    };

    /**
     * Zig-zag decodes this long bits.
     * @returns {util.LongBits} `this`
     */
    LongBits$2.prototype.zzDecode = function zzDecode() {
        var mask = -(this.lo & 1);
        this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;
        this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;
        return this;
    };

    /**
     * Calculates the length of this longbits when encoded as a varint.
     * @returns {number} Length
     */
    LongBits$2.prototype.length = function length() {
        var part0 =  this.lo,
            part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,
            part2 =  this.hi >>> 24;
        return part2 === 0
             ? part1 === 0
               ? part0 < 16384
                 ? part0 < 128 ? 1 : 2
                 : part0 < 2097152 ? 3 : 4
               : part1 < 16384
                 ? part1 < 128 ? 5 : 6
                 : part1 < 2097152 ? 7 : 8
             : part2 < 128 ? 9 : 10;
    };

    (function (exports) {
    var util = exports;

    // used to return a Promise where callback is omitted
    util.asPromise = aspromise;

    // converts to / from base64 encoded strings
    util.base64 = base64$1;

    // base class of rpc.Service
    util.EventEmitter = eventemitter;

    // float handling accross browsers
    util.float = float;

    // requires modules optionally and hides the call from bundlers
    util.inquire = inquire_1;

    // converts to / from utf8 encoded strings
    util.utf8 = utf8$2;

    // provides a node-like buffer pool in the browser
    util.pool = pool_1;

    // utility to work with the low and high bits of a 64 bit value
    util.LongBits = longbits;

    /**
     * Whether running within node or not.
     * @memberof util
     * @type {boolean}
     */
    util.isNode = Boolean(typeof commonjsGlobal !== "undefined"
                       && commonjsGlobal
                       && commonjsGlobal.process
                       && commonjsGlobal.process.versions
                       && commonjsGlobal.process.versions.node);

    /**
     * Global object reference.
     * @memberof util
     * @type {Object}
     */
    util.global = util.isNode && commonjsGlobal
               || typeof window !== "undefined" && window
               || typeof self   !== "undefined" && self
               || commonjsGlobal; // eslint-disable-line no-invalid-this

    /**
     * An immuable empty array.
     * @memberof util
     * @type {Array.<*>}
     * @const
     */
    util.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes

    /**
     * An immutable empty object.
     * @type {Object}
     * @const
     */
    util.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes

    /**
     * Tests if the specified value is an integer.
     * @function
     * @param {*} value Value to test
     * @returns {boolean} `true` if the value is an integer
     */
    util.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {
        return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
    };

    /**
     * Tests if the specified value is a string.
     * @param {*} value Value to test
     * @returns {boolean} `true` if the value is a string
     */
    util.isString = function isString(value) {
        return typeof value === "string" || value instanceof String;
    };

    /**
     * Tests if the specified value is a non-null object.
     * @param {*} value Value to test
     * @returns {boolean} `true` if the value is a non-null object
     */
    util.isObject = function isObject(value) {
        return value && typeof value === "object";
    };

    /**
     * Checks if a property on a message is considered to be present.
     * This is an alias of {@link util.isSet}.
     * @function
     * @param {Object} obj Plain object or message instance
     * @param {string} prop Property name
     * @returns {boolean} `true` if considered to be present, otherwise `false`
     */
    util.isset =

    /**
     * Checks if a property on a message is considered to be present.
     * @param {Object} obj Plain object or message instance
     * @param {string} prop Property name
     * @returns {boolean} `true` if considered to be present, otherwise `false`
     */
    util.isSet = function isSet(obj, prop) {
        var value = obj[prop];
        if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins
            return typeof value !== "object" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;
        return false;
    };

    /**
     * Any compatible Buffer instance.
     * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.
     * @interface Buffer
     * @extends Uint8Array
     */

    /**
     * Node's Buffer class if available.
     * @type {Constructor<Buffer>}
     */
    util.Buffer = (function() {
        try {
            var Buffer = util.inquire("buffer").Buffer;
            // refuse to use non-node buffers if not explicitly assigned (perf reasons):
            return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;
        } catch (e) {
            /* istanbul ignore next */
            return null;
        }
    })();

    // Internal alias of or polyfull for Buffer.from.
    util._Buffer_from = null;

    // Internal alias of or polyfill for Buffer.allocUnsafe.
    util._Buffer_allocUnsafe = null;

    /**
     * Creates a new buffer of whatever type supported by the environment.
     * @param {number|number[]} [sizeOrArray=0] Buffer size or number array
     * @returns {Uint8Array|Buffer} Buffer
     */
    util.newBuffer = function newBuffer(sizeOrArray) {
        /* istanbul ignore next */
        return typeof sizeOrArray === "number"
            ? util.Buffer
                ? util._Buffer_allocUnsafe(sizeOrArray)
                : new util.Array(sizeOrArray)
            : util.Buffer
                ? util._Buffer_from(sizeOrArray)
                : typeof Uint8Array === "undefined"
                    ? sizeOrArray
                    : new Uint8Array(sizeOrArray);
    };

    /**
     * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.
     * @type {Constructor<Uint8Array>}
     */
    util.Array = typeof Uint8Array !== "undefined" ? Uint8Array /* istanbul ignore next */ : Array;

    /**
     * Any compatible Long instance.
     * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.
     * @interface Long
     * @property {number} low Low bits
     * @property {number} high High bits
     * @property {boolean} unsigned Whether unsigned or not
     */

    /**
     * Long.js's Long class if available.
     * @type {Constructor<Long>}
     */
    util.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long
             || /* istanbul ignore next */ util.global.Long
             || util.inquire("long");

    /**
     * Regular expression used to verify 2 bit (`bool`) map keys.
     * @type {RegExp}
     * @const
     */
    util.key2Re = /^true|false|0|1$/;

    /**
     * Regular expression used to verify 32 bit (`int32` etc.) map keys.
     * @type {RegExp}
     * @const
     */
    util.key32Re = /^-?(?:0|[1-9][0-9]*)$/;

    /**
     * Regular expression used to verify 64 bit (`int64` etc.) map keys.
     * @type {RegExp}
     * @const
     */
    util.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;

    /**
     * Converts a number or long to an 8 characters long hash string.
     * @param {Long|number} value Value to convert
     * @returns {string} Hash
     */
    util.longToHash = function longToHash(value) {
        return value
            ? util.LongBits.from(value).toHash()
            : util.LongBits.zeroHash;
    };

    /**
     * Converts an 8 characters long hash string to a long or number.
     * @param {string} hash Hash
     * @param {boolean} [unsigned=false] Whether unsigned or not
     * @returns {Long|number} Original value
     */
    util.longFromHash = function longFromHash(hash, unsigned) {
        var bits = util.LongBits.fromHash(hash);
        if (util.Long)
            return util.Long.fromBits(bits.lo, bits.hi, unsigned);
        return bits.toNumber(Boolean(unsigned));
    };

    /**
     * Merges the properties of the source object into the destination object.
     * @memberof util
     * @param {Object.<string,*>} dst Destination object
     * @param {Object.<string,*>} src Source object
     * @param {boolean} [ifNotSet=false] Merges only if the key is not already set
     * @returns {Object.<string,*>} Destination object
     */
    function merge(dst, src, ifNotSet) { // used by converters
        for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)
            if (dst[keys[i]] === undefined || !ifNotSet)
                dst[keys[i]] = src[keys[i]];
        return dst;
    }

    util.merge = merge;

    /**
     * Converts the first character of a string to lower case.
     * @param {string} str String to convert
     * @returns {string} Converted string
     */
    util.lcFirst = function lcFirst(str) {
        return str.charAt(0).toLowerCase() + str.substring(1);
    };

    /**
     * Creates a custom error constructor.
     * @memberof util
     * @param {string} name Error name
     * @returns {Constructor<Error>} Custom error constructor
     */
    function newError(name) {

        function CustomError(message, properties) {

            if (!(this instanceof CustomError))
                return new CustomError(message, properties);

            // Error.call(this, message);
            // ^ just returns a new error instance because the ctor can be called as a function

            Object.defineProperty(this, "message", { get: function() { return message; } });

            /* istanbul ignore next */
            if (Error.captureStackTrace) // node
                Error.captureStackTrace(this, CustomError);
            else
                Object.defineProperty(this, "stack", { value: new Error().stack || "" });

            if (properties)
                merge(this, properties);
        }

        CustomError.prototype = Object.create(Error.prototype, {
            constructor: {
                value: CustomError,
                writable: true,
                enumerable: false,
                configurable: true,
            },
            name: {
                get() { return name; },
                set: undefined,
                enumerable: false,
                // configurable: false would accurately preserve the behavior of
                // the original, but I'm guessing that was not intentional.
                // For an actual error subclass, this property would
                // be configurable.
                configurable: true,
            },
            toString: {
                value() { return this.name + ": " + this.message; },
                writable: true,
                enumerable: false,
                configurable: true,
            },
        });

        return CustomError;
    }

    util.newError = newError;

    /**
     * Constructs a new protocol error.
     * @classdesc Error subclass indicating a protocol specifc error.
     * @memberof util
     * @extends Error
     * @template T extends Message<T>
     * @constructor
     * @param {string} message Error message
     * @param {Object.<string,*>} [properties] Additional properties
     * @example
     * try {
     *     MyMessage.decode(someBuffer); // throws if required fields are missing
     * } catch (e) {
     *     if (e instanceof ProtocolError && e.instance)
     *         console.log("decoded so far: " + JSON.stringify(e.instance));
     * }
     */
    util.ProtocolError = newError("ProtocolError");

    /**
     * So far decoded message instance.
     * @name util.ProtocolError#instance
     * @type {Message<T>}
     */

    /**
     * A OneOf getter as returned by {@link util.oneOfGetter}.
     * @typedef OneOfGetter
     * @type {function}
     * @returns {string|undefined} Set field name, if any
     */

    /**
     * Builds a getter for a oneof's present field name.
     * @param {string[]} fieldNames Field names
     * @returns {OneOfGetter} Unbound getter
     */
    util.oneOfGetter = function getOneOf(fieldNames) {
        var fieldMap = {};
        for (var i = 0; i < fieldNames.length; ++i)
            fieldMap[fieldNames[i]] = 1;

        /**
         * @returns {string|undefined} Set field name, if any
         * @this Object
         * @ignore
         */
        return function() { // eslint-disable-line consistent-return
            for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)
                if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)
                    return keys[i];
        };
    };

    /**
     * A OneOf setter as returned by {@link util.oneOfSetter}.
     * @typedef OneOfSetter
     * @type {function}
     * @param {string|undefined} value Field name
     * @returns {undefined}
     */

    /**
     * Builds a setter for a oneof's present field name.
     * @param {string[]} fieldNames Field names
     * @returns {OneOfSetter} Unbound setter
     */
    util.oneOfSetter = function setOneOf(fieldNames) {

        /**
         * @param {string} name Field name
         * @returns {undefined}
         * @this Object
         * @ignore
         */
        return function(name) {
            for (var i = 0; i < fieldNames.length; ++i)
                if (fieldNames[i] !== name)
                    delete this[fieldNames[i]];
        };
    };

    /**
     * Default conversion options used for {@link Message#toJSON} implementations.
     *
     * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:
     *
     * - Longs become strings
     * - Enums become string keys
     * - Bytes become base64 encoded strings
     * - (Sub-)Messages become plain objects
     * - Maps become plain objects with all string keys
     * - Repeated fields become arrays
     * - NaN and Infinity for float and double fields become strings
     *
     * @type {IConversionOptions}
     * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json
     */
    util.toJSONOptions = {
        longs: String,
        enums: String,
        bytes: String,
        json: true
    };

    // Sets up buffer utility according to the environment (called in index-minimal)
    util._configure = function() {
        var Buffer = util.Buffer;
        /* istanbul ignore if */
        if (!Buffer) {
            util._Buffer_from = util._Buffer_allocUnsafe = null;
            return;
        }
        // because node 4.x buffers are incompatible & immutable
        // see: https://github.com/dcodeIO/protobuf.js/pull/665
        util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||
            /* istanbul ignore next */
            function Buffer_from(value, encoding) {
                return new Buffer(value, encoding);
            };
        util._Buffer_allocUnsafe = Buffer.allocUnsafe ||
            /* istanbul ignore next */
            function Buffer_allocUnsafe(size) {
                return new Buffer(size);
            };
    };
    }(minimal$1));

    var writer = Writer$1;

    var util$4      = minimal$1;

    var BufferWriter$1; // cyclic

    var LongBits$1  = util$4.LongBits,
        base64    = util$4.base64,
        utf8$1      = util$4.utf8;

    /**
     * Constructs a new writer operation instance.
     * @classdesc Scheduled writer operation.
     * @constructor
     * @param {function(*, Uint8Array, number)} fn Function to call
     * @param {number} len Value byte length
     * @param {*} val Value to write
     * @ignore
     */
    function Op(fn, len, val) {

        /**
         * Function to call.
         * @type {function(Uint8Array, number, *)}
         */
        this.fn = fn;

        /**
         * Value byte length.
         * @type {number}
         */
        this.len = len;

        /**
         * Next operation.
         * @type {Writer.Op|undefined}
         */
        this.next = undefined;

        /**
         * Value to write.
         * @type {*}
         */
        this.val = val; // type varies
    }

    /* istanbul ignore next */
    function noop() {} // eslint-disable-line no-empty-function

    /**
     * Constructs a new writer state instance.
     * @classdesc Copied writer state.
     * @memberof Writer
     * @constructor
     * @param {Writer} writer Writer to copy state from
     * @ignore
     */
    function State(writer) {

        /**
         * Current head.
         * @type {Writer.Op}
         */
        this.head = writer.head;

        /**
         * Current tail.
         * @type {Writer.Op}
         */
        this.tail = writer.tail;

        /**
         * Current buffer length.
         * @type {number}
         */
        this.len = writer.len;

        /**
         * Next state.
         * @type {State|null}
         */
        this.next = writer.states;
    }

    /**
     * Constructs a new writer instance.
     * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.
     * @constructor
     */
    function Writer$1() {

        /**
         * Current length.
         * @type {number}
         */
        this.len = 0;

        /**
         * Operations head.
         * @type {Object}
         */
        this.head = new Op(noop, 0, 0);

        /**
         * Operations tail
         * @type {Object}
         */
        this.tail = this.head;

        /**
         * Linked forked states.
         * @type {Object|null}
         */
        this.states = null;

        // When a value is written, the writer calculates its byte length and puts it into a linked
        // list of operations to perform when finish() is called. This both allows us to allocate
        // buffers of the exact required size and reduces the amount of work we have to do compared
        // to first calculating over objects and then encoding over objects. In our case, the encoding
        // part is just a linked list walk calling operations with already prepared values.
    }

    var create$1 = function create() {
        return util$4.Buffer
            ? function create_buffer_setup() {
                return (Writer$1.create = function create_buffer() {
                    return new BufferWriter$1();
                })();
            }
            /* istanbul ignore next */
            : function create_array() {
                return new Writer$1();
            };
    };

    /**
     * Creates a new writer.
     * @function
     * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}
     */
    Writer$1.create = create$1();

    /**
     * Allocates a buffer of the specified size.
     * @param {number} size Buffer size
     * @returns {Uint8Array} Buffer
     */
    Writer$1.alloc = function alloc(size) {
        return new util$4.Array(size);
    };

    // Use Uint8Array buffer pool in the browser, just like node does with buffers
    /* istanbul ignore else */
    if (util$4.Array !== Array)
        Writer$1.alloc = util$4.pool(Writer$1.alloc, util$4.Array.prototype.subarray);

    /**
     * Pushes a new operation to the queue.
     * @param {function(Uint8Array, number, *)} fn Function to call
     * @param {number} len Value byte length
     * @param {number} val Value to write
     * @returns {Writer} `this`
     * @private
     */
    Writer$1.prototype._push = function push(fn, len, val) {
        this.tail = this.tail.next = new Op(fn, len, val);
        this.len += len;
        return this;
    };

    function writeByte(val, buf, pos) {
        buf[pos] = val & 255;
    }

    function writeVarint32(val, buf, pos) {
        while (val > 127) {
            buf[pos++] = val & 127 | 128;
            val >>>= 7;
        }
        buf[pos] = val;
    }

    /**
     * Constructs a new varint writer operation instance.
     * @classdesc Scheduled varint writer operation.
     * @extends Op
     * @constructor
     * @param {number} len Value byte length
     * @param {number} val Value to write
     * @ignore
     */
    function VarintOp(len, val) {
        this.len = len;
        this.next = undefined;
        this.val = val;
    }

    VarintOp.prototype = Object.create(Op.prototype);
    VarintOp.prototype.fn = writeVarint32;

    /**
     * Writes an unsigned 32 bit value as a varint.
     * @param {number} value Value to write
     * @returns {Writer} `this`
     */
    Writer$1.prototype.uint32 = function write_uint32(value) {
        // here, the call to this.push has been inlined and a varint specific Op subclass is used.
        // uint32 is by far the most frequently used operation and benefits significantly from this.
        this.len += (this.tail = this.tail.next = new VarintOp(
            (value = value >>> 0)
                    < 128       ? 1
            : value < 16384     ? 2
            : value < 2097152   ? 3
            : value < 268435456 ? 4
            :                     5,
        value)).len;
        return this;
    };

    /**
     * Writes a signed 32 bit value as a varint.
     * @function
     * @param {number} value Value to write
     * @returns {Writer} `this`
     */
    Writer$1.prototype.int32 = function write_int32(value) {
        return value < 0
            ? this._push(writeVarint64, 10, LongBits$1.fromNumber(value)) // 10 bytes per spec
            : this.uint32(value);
    };

    /**
     * Writes a 32 bit value as a varint, zig-zag encoded.
     * @param {number} value Value to write
     * @returns {Writer} `this`
     */
    Writer$1.prototype.sint32 = function write_sint32(value) {
        return this.uint32((value << 1 ^ value >> 31) >>> 0);
    };

    function writeVarint64(val, buf, pos) {
        while (val.hi) {
            buf[pos++] = val.lo & 127 | 128;
            val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;
            val.hi >>>= 7;
        }
        while (val.lo > 127) {
            buf[pos++] = val.lo & 127 | 128;
            val.lo = val.lo >>> 7;
        }
        buf[pos++] = val.lo;
    }

    /**
     * Writes an unsigned 64 bit value as a varint.
     * @param {Long|number|string} value Value to write
     * @returns {Writer} `this`
     * @throws {TypeError} If `value` is a string and no long library is present.
     */
    Writer$1.prototype.uint64 = function write_uint64(value) {
        var bits = LongBits$1.from(value);
        return this._push(writeVarint64, bits.length(), bits);
    };

    /**
     * Writes a signed 64 bit value as a varint.
     * @function
     * @param {Long|number|string} value Value to write
     * @returns {Writer} `this`
     * @throws {TypeError} If `value` is a string and no long library is present.
     */
    Writer$1.prototype.int64 = Writer$1.prototype.uint64;

    /**
     * Writes a signed 64 bit value as a varint, zig-zag encoded.
     * @param {Long|number|string} value Value to write
     * @returns {Writer} `this`
     * @throws {TypeError} If `value` is a string and no long library is present.
     */
    Writer$1.prototype.sint64 = function write_sint64(value) {
        var bits = LongBits$1.from(value).zzEncode();
        return this._push(writeVarint64, bits.length(), bits);
    };

    /**
     * Writes a boolish value as a varint.
     * @param {boolean} value Value to write
     * @returns {Writer} `this`
     */
    Writer$1.prototype.bool = function write_bool(value) {
        return this._push(writeByte, 1, value ? 1 : 0);
    };

    function writeFixed32(val, buf, pos) {
        buf[pos    ] =  val         & 255;
        buf[pos + 1] =  val >>> 8   & 255;
        buf[pos + 2] =  val >>> 16  & 255;
        buf[pos + 3] =  val >>> 24;
    }

    /**
     * Writes an unsigned 32 bit value as fixed 32 bits.
     * @param {number} value Value to write
     * @returns {Writer} `this`
     */
    Writer$1.prototype.fixed32 = function write_fixed32(value) {
        return this._push(writeFixed32, 4, value >>> 0);
    };

    /**
     * Writes a signed 32 bit value as fixed 32 bits.
     * @function
     * @param {number} value Value to write
     * @returns {Writer} `this`
     */
    Writer$1.prototype.sfixed32 = Writer$1.prototype.fixed32;

    /**
     * Writes an unsigned 64 bit value as fixed 64 bits.
     * @param {Long|number|string} value Value to write
     * @returns {Writer} `this`
     * @throws {TypeError} If `value` is a string and no long library is present.
     */
    Writer$1.prototype.fixed64 = function write_fixed64(value) {
        var bits = LongBits$1.from(value);
        return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
    };

    /**
     * Writes a signed 64 bit value as fixed 64 bits.
     * @function
     * @param {Long|number|string} value Value to write
     * @returns {Writer} `this`
     * @throws {TypeError} If `value` is a string and no long library is present.
     */
    Writer$1.prototype.sfixed64 = Writer$1.prototype.fixed64;

    /**
     * Writes a float (32 bit).
     * @function
     * @param {number} value Value to write
     * @returns {Writer} `this`
     */
    Writer$1.prototype.float = function write_float(value) {
        return this._push(util$4.float.writeFloatLE, 4, value);
    };

    /**
     * Writes a double (64 bit float).
     * @function
     * @param {number} value Value to write
     * @returns {Writer} `this`
     */
    Writer$1.prototype.double = function write_double(value) {
        return this._push(util$4.float.writeDoubleLE, 8, value);
    };

    var writeBytes = util$4.Array.prototype.set
        ? function writeBytes_set(val, buf, pos) {
            buf.set(val, pos); // also works for plain array values
        }
        /* istanbul ignore next */
        : function writeBytes_for(val, buf, pos) {
            for (var i = 0; i < val.length; ++i)
                buf[pos + i] = val[i];
        };

    /**
     * Writes a sequence of bytes.
     * @param {Uint8Array|string} value Buffer or base64 encoded string to write
     * @returns {Writer} `this`
     */
    Writer$1.prototype.bytes = function write_bytes(value) {
        var len = value.length >>> 0;
        if (!len)
            return this._push(writeByte, 1, 0);
        if (util$4.isString(value)) {
            var buf = Writer$1.alloc(len = base64.length(value));
            base64.decode(value, buf, 0);
            value = buf;
        }
        return this.uint32(len)._push(writeBytes, len, value);
    };

    /**
     * Writes a string.
     * @param {string} value Value to write
     * @returns {Writer} `this`
     */
    Writer$1.prototype.string = function write_string(value) {
        var len = utf8$1.length(value);
        return len
            ? this.uint32(len)._push(utf8$1.write, len, value)
            : this._push(writeByte, 1, 0);
    };

    /**
     * Forks this writer's state by pushing it to a stack.
     * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.
     * @returns {Writer} `this`
     */
    Writer$1.prototype.fork = function fork() {
        this.states = new State(this);
        this.head = this.tail = new Op(noop, 0, 0);
        this.len = 0;
        return this;
    };

    /**
     * Resets this instance to the last state.
     * @returns {Writer} `this`
     */
    Writer$1.prototype.reset = function reset() {
        if (this.states) {
            this.head   = this.states.head;
            this.tail   = this.states.tail;
            this.len    = this.states.len;
            this.states = this.states.next;
        } else {
            this.head = this.tail = new Op(noop, 0, 0);
            this.len  = 0;
        }
        return this;
    };

    /**
     * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.
     * @returns {Writer} `this`
     */
    Writer$1.prototype.ldelim = function ldelim() {
        var head = this.head,
            tail = this.tail,
            len  = this.len;
        this.reset().uint32(len);
        if (len) {
            this.tail.next = head.next; // skip noop
            this.tail = tail;
            this.len += len;
        }
        return this;
    };

    /**
     * Finishes the write operation.
     * @returns {Uint8Array} Finished buffer
     */
    Writer$1.prototype.finish = function finish() {
        var head = this.head.next, // skip noop
            buf  = this.constructor.alloc(this.len),
            pos  = 0;
        while (head) {
            head.fn(head.val, buf, pos);
            pos += head.len;
            head = head.next;
        }
        // this.head = this.tail = null;
        return buf;
    };

    Writer$1._configure = function(BufferWriter_) {
        BufferWriter$1 = BufferWriter_;
        Writer$1.create = create$1();
        BufferWriter$1._configure();
    };

    var writer_buffer = BufferWriter;

    // extends Writer
    var Writer = writer;
    (BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;

    var util$3 = minimal$1;

    /**
     * Constructs a new buffer writer instance.
     * @classdesc Wire format writer using node buffers.
     * @extends Writer
     * @constructor
     */
    function BufferWriter() {
        Writer.call(this);
    }

    BufferWriter._configure = function () {
        /**
         * Allocates a buffer of the specified size.
         * @function
         * @param {number} size Buffer size
         * @returns {Buffer} Buffer
         */
        BufferWriter.alloc = util$3._Buffer_allocUnsafe;

        BufferWriter.writeBytesBuffer = util$3.Buffer && util$3.Buffer.prototype instanceof Uint8Array && util$3.Buffer.prototype.set.name === "set"
            ? function writeBytesBuffer_set(val, buf, pos) {
              buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)
              // also works for plain array values
            }
            /* istanbul ignore next */
            : function writeBytesBuffer_copy(val, buf, pos) {
              if (val.copy) // Buffer values
                val.copy(buf, pos, 0, val.length);
              else for (var i = 0; i < val.length;) // plain array values
                buf[pos++] = val[i++];
            };
    };


    /**
     * @override
     */
    BufferWriter.prototype.bytes = function write_bytes_buffer(value) {
        if (util$3.isString(value))
            value = util$3._Buffer_from(value, "base64");
        var len = value.length >>> 0;
        this.uint32(len);
        if (len)
            this._push(BufferWriter.writeBytesBuffer, len, value);
        return this;
    };

    function writeStringBuffer(val, buf, pos) {
        if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)
            util$3.utf8.write(val, buf, pos);
        else if (buf.utf8Write)
            buf.utf8Write(val, pos);
        else
            buf.write(val, pos);
    }

    /**
     * @override
     */
    BufferWriter.prototype.string = function write_string_buffer(value) {
        var len = util$3.Buffer.byteLength(value);
        this.uint32(len);
        if (len)
            this._push(writeStringBuffer, len, value);
        return this;
    };


    /**
     * Finishes the write operation.
     * @name BufferWriter#finish
     * @function
     * @returns {Buffer} Finished buffer
     */

    BufferWriter._configure();

    var reader = Reader$1;

    var util$2      = minimal$1;

    var BufferReader$1; // cyclic

    var LongBits  = util$2.LongBits,
        utf8      = util$2.utf8;

    /* istanbul ignore next */
    function indexOutOfRange(reader, writeLength) {
        return RangeError("index out of range: " + reader.pos + " + " + (writeLength || 1) + " > " + reader.len);
    }

    /**
     * Constructs a new reader instance using the specified buffer.
     * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.
     * @constructor
     * @param {Uint8Array} buffer Buffer to read from
     */
    function Reader$1(buffer) {

        /**
         * Read buffer.
         * @type {Uint8Array}
         */
        this.buf = buffer;

        /**
         * Read buffer position.
         * @type {number}
         */
        this.pos = 0;

        /**
         * Read buffer length.
         * @type {number}
         */
        this.len = buffer.length;
    }

    var create_array = typeof Uint8Array !== "undefined"
        ? function create_typed_array(buffer) {
            if (buffer instanceof Uint8Array || Array.isArray(buffer))
                return new Reader$1(buffer);
            throw Error("illegal buffer");
        }
        /* istanbul ignore next */
        : function create_array(buffer) {
            if (Array.isArray(buffer))
                return new Reader$1(buffer);
            throw Error("illegal buffer");
        };

    var create = function create() {
        return util$2.Buffer
            ? function create_buffer_setup(buffer) {
                return (Reader$1.create = function create_buffer(buffer) {
                    return util$2.Buffer.isBuffer(buffer)
                        ? new BufferReader$1(buffer)
                        /* istanbul ignore next */
                        : create_array(buffer);
                })(buffer);
            }
            /* istanbul ignore next */
            : create_array;
    };

    /**
     * Creates a new reader using the specified buffer.
     * @function
     * @param {Uint8Array|Buffer} buffer Buffer to read from
     * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}
     * @throws {Error} If `buffer` is not a valid buffer
     */
    Reader$1.create = create();

    Reader$1.prototype._slice = util$2.Array.prototype.subarray || /* istanbul ignore next */ util$2.Array.prototype.slice;

    /**
     * Reads a varint as an unsigned 32 bit value.
     * @function
     * @returns {number} Value read
     */
    Reader$1.prototype.uint32 = (function read_uint32_setup() {
        var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)
        return function read_uint32() {
            value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;
            value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;
            value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;
            value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;
            value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;

            /* istanbul ignore if */
            if ((this.pos += 5) > this.len) {
                this.pos = this.len;
                throw indexOutOfRange(this, 10);
            }
            return value;
        };
    })();

    /**
     * Reads a varint as a signed 32 bit value.
     * @returns {number} Value read
     */
    Reader$1.prototype.int32 = function read_int32() {
        return this.uint32() | 0;
    };

    /**
     * Reads a zig-zag encoded varint as a signed 32 bit value.
     * @returns {number} Value read
     */
    Reader$1.prototype.sint32 = function read_sint32() {
        var value = this.uint32();
        return value >>> 1 ^ -(value & 1) | 0;
    };

    /* eslint-disable no-invalid-this */

    function readLongVarint() {
        // tends to deopt with local vars for octet etc.
        var bits = new LongBits(0, 0);
        var i = 0;
        if (this.len - this.pos > 4) { // fast route (lo)
            for (; i < 4; ++i) {
                // 1st..4th
                bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
                if (this.buf[this.pos++] < 128)
                    return bits;
            }
            // 5th
            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;
            bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
            i = 0;
        } else {
            for (; i < 3; ++i) {
                /* istanbul ignore if */
                if (this.pos >= this.len)
                    throw indexOutOfRange(this);
                // 1st..3th
                bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
                if (this.buf[this.pos++] < 128)
                    return bits;
            }
            // 4th
            bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;
            return bits;
        }
        if (this.len - this.pos > 4) { // fast route (hi)
            for (; i < 5; ++i) {
                // 6th..10th
                bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
                if (this.buf[this.pos++] < 128)
                    return bits;
            }
        } else {
            for (; i < 5; ++i) {
                /* istanbul ignore if */
                if (this.pos >= this.len)
                    throw indexOutOfRange(this);
                // 6th..10th
                bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
                if (this.buf[this.pos++] < 128)
                    return bits;
            }
        }
        /* istanbul ignore next */
        throw Error("invalid varint encoding");
    }

    /* eslint-enable no-invalid-this */

    /**
     * Reads a varint as a signed 64 bit value.
     * @name Reader#int64
     * @function
     * @returns {Long} Value read
     */

    /**
     * Reads a varint as an unsigned 64 bit value.
     * @name Reader#uint64
     * @function
     * @returns {Long} Value read
     */

    /**
     * Reads a zig-zag encoded varint as a signed 64 bit value.
     * @name Reader#sint64
     * @function
     * @returns {Long} Value read
     */

    /**
     * Reads a varint as a boolean.
     * @returns {boolean} Value read
     */
    Reader$1.prototype.bool = function read_bool() {
        return this.uint32() !== 0;
    };

    function readFixed32_end(buf, end) { // note that this uses `end`, not `pos`
        return (buf[end - 4]
              | buf[end - 3] << 8
              | buf[end - 2] << 16
              | buf[end - 1] << 24) >>> 0;
    }

    /**
     * Reads fixed 32 bits as an unsigned 32 bit integer.
     * @returns {number} Value read
     */
    Reader$1.prototype.fixed32 = function read_fixed32() {

        /* istanbul ignore if */
        if (this.pos + 4 > this.len)
            throw indexOutOfRange(this, 4);

        return readFixed32_end(this.buf, this.pos += 4);
    };

    /**
     * Reads fixed 32 bits as a signed 32 bit integer.
     * @returns {number} Value read
     */
    Reader$1.prototype.sfixed32 = function read_sfixed32() {

        /* istanbul ignore if */
        if (this.pos + 4 > this.len)
            throw indexOutOfRange(this, 4);

        return readFixed32_end(this.buf, this.pos += 4) | 0;
    };

    /* eslint-disable no-invalid-this */

    function readFixed64(/* this: Reader */) {

        /* istanbul ignore if */
        if (this.pos + 8 > this.len)
            throw indexOutOfRange(this, 8);

        return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));
    }

    /* eslint-enable no-invalid-this */

    /**
     * Reads fixed 64 bits.
     * @name Reader#fixed64
     * @function
     * @returns {Long} Value read
     */

    /**
     * Reads zig-zag encoded fixed 64 bits.
     * @name Reader#sfixed64
     * @function
     * @returns {Long} Value read
     */

    /**
     * Reads a float (32 bit) as a number.
     * @function
     * @returns {number} Value read
     */
    Reader$1.prototype.float = function read_float() {

        /* istanbul ignore if */
        if (this.pos + 4 > this.len)
            throw indexOutOfRange(this, 4);

        var value = util$2.float.readFloatLE(this.buf, this.pos);
        this.pos += 4;
        return value;
    };

    /**
     * Reads a double (64 bit float) as a number.
     * @function
     * @returns {number} Value read
     */
    Reader$1.prototype.double = function read_double() {

        /* istanbul ignore if */
        if (this.pos + 8 > this.len)
            throw indexOutOfRange(this, 4);

        var value = util$2.float.readDoubleLE(this.buf, this.pos);
        this.pos += 8;
        return value;
    };

    /**
     * Reads a sequence of bytes preceeded by its length as a varint.
     * @returns {Uint8Array} Value read
     */
    Reader$1.prototype.bytes = function read_bytes() {
        var length = this.uint32(),
            start  = this.pos,
            end    = this.pos + length;

        /* istanbul ignore if */
        if (end > this.len)
            throw indexOutOfRange(this, length);

        this.pos += length;
        if (Array.isArray(this.buf)) // plain array
            return this.buf.slice(start, end);
        return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1
            ? new this.buf.constructor(0)
            : this._slice.call(this.buf, start, end);
    };

    /**
     * Reads a string preceeded by its byte length as a varint.
     * @returns {string} Value read
     */
    Reader$1.prototype.string = function read_string() {
        var bytes = this.bytes();
        return utf8.read(bytes, 0, bytes.length);
    };

    /**
     * Skips the specified number of bytes if specified, otherwise skips a varint.
     * @param {number} [length] Length if known, otherwise a varint is assumed
     * @returns {Reader} `this`
     */
    Reader$1.prototype.skip = function skip(length) {
        if (typeof length === "number") {
            /* istanbul ignore if */
            if (this.pos + length > this.len)
                throw indexOutOfRange(this, length);
            this.pos += length;
        } else {
            do {
                /* istanbul ignore if */
                if (this.pos >= this.len)
                    throw indexOutOfRange(this);
            } while (this.buf[this.pos++] & 128);
        }
        return this;
    };

    /**
     * Skips the next element of the specified wire type.
     * @param {number} wireType Wire type received
     * @returns {Reader} `this`
     */
    Reader$1.prototype.skipType = function(wireType) {
        switch (wireType) {
            case 0:
                this.skip();
                break;
            case 1:
                this.skip(8);
                break;
            case 2:
                this.skip(this.uint32());
                break;
            case 3:
                while ((wireType = this.uint32() & 7) !== 4) {
                    this.skipType(wireType);
                }
                break;
            case 5:
                this.skip(4);
                break;

            /* istanbul ignore next */
            default:
                throw Error("invalid wire type " + wireType + " at offset " + this.pos);
        }
        return this;
    };

    Reader$1._configure = function(BufferReader_) {
        BufferReader$1 = BufferReader_;
        Reader$1.create = create();
        BufferReader$1._configure();

        var fn = util$2.Long ? "toLong" : /* istanbul ignore next */ "toNumber";
        util$2.merge(Reader$1.prototype, {

            int64: function read_int64() {
                return readLongVarint.call(this)[fn](false);
            },

            uint64: function read_uint64() {
                return readLongVarint.call(this)[fn](true);
            },

            sint64: function read_sint64() {
                return readLongVarint.call(this).zzDecode()[fn](false);
            },

            fixed64: function read_fixed64() {
                return readFixed64.call(this)[fn](true);
            },

            sfixed64: function read_sfixed64() {
                return readFixed64.call(this)[fn](false);
            }

        });
    };

    var reader_buffer = BufferReader;

    // extends Reader
    var Reader = reader;
    (BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;

    var util$1 = minimal$1;

    /**
     * Constructs a new buffer reader instance.
     * @classdesc Wire format reader using node buffers.
     * @extends Reader
     * @constructor
     * @param {Buffer} buffer Buffer to read from
     */
    function BufferReader(buffer) {
        Reader.call(this, buffer);

        /**
         * Read buffer.
         * @name BufferReader#buf
         * @type {Buffer}
         */
    }

    BufferReader._configure = function () {
        /* istanbul ignore else */
        if (util$1.Buffer)
            BufferReader.prototype._slice = util$1.Buffer.prototype.slice;
    };


    /**
     * @override
     */
    BufferReader.prototype.string = function read_string_buffer() {
        var len = this.uint32(); // modifies pos
        return this.buf.utf8Slice
            ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))
            : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + len, this.len));
    };

    /**
     * Reads a sequence of bytes preceeded by its length as a varint.
     * @name BufferReader#bytes
     * @function
     * @returns {Buffer} Value read
     */

    BufferReader._configure();

    var rpc = {};

    var service = Service;

    var util = minimal$1;

    // Extends EventEmitter
    (Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;

    /**
     * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.
     *
     * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.
     * @typedef rpc.ServiceMethodCallback
     * @template TRes extends Message<TRes>
     * @type {function}
     * @param {Error|null} error Error, if any
     * @param {TRes} [response] Response message
     * @returns {undefined}
     */

    /**
     * A service method part of a {@link rpc.Service} as created by {@link Service.create}.
     * @typedef rpc.ServiceMethod
     * @template TReq extends Message<TReq>
     * @template TRes extends Message<TRes>
     * @type {function}
     * @param {TReq|Properties<TReq>} request Request message or plain object
     * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message
     * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`
     */

    /**
     * Constructs a new RPC service instance.
     * @classdesc An RPC service as returned by {@link Service#create}.
     * @exports rpc.Service
     * @extends util.EventEmitter
     * @constructor
     * @param {RPCImpl} rpcImpl RPC implementation
     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
     */
    function Service(rpcImpl, requestDelimited, responseDelimited) {

        if (typeof rpcImpl !== "function")
            throw TypeError("rpcImpl must be a function");

        util.EventEmitter.call(this);

        /**
         * RPC implementation. Becomes `null` once the service is ended.
         * @type {RPCImpl|null}
         */
        this.rpcImpl = rpcImpl;

        /**
         * Whether requests are length-delimited.
         * @type {boolean}
         */
        this.requestDelimited = Boolean(requestDelimited);

        /**
         * Whether responses are length-delimited.
         * @type {boolean}
         */
        this.responseDelimited = Boolean(responseDelimited);
    }

    /**
     * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.
     * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method
     * @param {Constructor<TReq>} requestCtor Request constructor
     * @param {Constructor<TRes>} responseCtor Response constructor
     * @param {TReq|Properties<TReq>} request Request message or plain object
     * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback
     * @returns {undefined}
     * @template TReq extends Message<TReq>
     * @template TRes extends Message<TRes>
     */
    Service.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {

        if (!request)
            throw TypeError("request must be specified");

        var self = this;
        if (!callback)
            return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);

        if (!self.rpcImpl) {
            setTimeout(function() { callback(Error("already ended")); }, 0);
            return undefined;
        }

        try {
            return self.rpcImpl(
                method,
                requestCtor[self.requestDelimited ? "encodeDelimited" : "encode"](request).finish(),
                function rpcCallback(err, response) {

                    if (err) {
                        self.emit("error", err, method);
                        return callback(err);
                    }

                    if (response === null) {
                        self.end(/* endedByRPC */ true);
                        return undefined;
                    }

                    if (!(response instanceof responseCtor)) {
                        try {
                            response = responseCtor[self.responseDelimited ? "decodeDelimited" : "decode"](response);
                        } catch (err) {
                            self.emit("error", err, method);
                            return callback(err);
                        }
                    }

                    self.emit("data", response, method);
                    return callback(null, response);
                }
            );
        } catch (err) {
            self.emit("error", err, method);
            setTimeout(function() { callback(err); }, 0);
            return undefined;
        }
    };

    /**
     * Ends this service and emits the `end` event.
     * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.
     * @returns {rpc.Service} `this`
     */
    Service.prototype.end = function end(endedByRPC) {
        if (this.rpcImpl) {
            if (!endedByRPC) // signal end to rpcImpl
                this.rpcImpl(null, null, null);
            this.rpcImpl = null;
            this.emit("end").off();
        }
        return this;
    };

    (function (exports) {

    /**
     * Streaming RPC helpers.
     * @namespace
     */
    var rpc = exports;

    /**
     * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.
     * @typedef RPCImpl
     * @type {function}
     * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called
     * @param {Uint8Array} requestData Request data
     * @param {RPCImplCallback} callback Callback function
     * @returns {undefined}
     * @example
     * function rpcImpl(method, requestData, callback) {
     *     if (protobuf.util.lcFirst(method.name) !== "myMethod") // compatible with static code
     *         throw Error("no such method");
     *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {
     *         callback(err, responseData);
     *     });
     * }
     */

    /**
     * Node-style callback as used by {@link RPCImpl}.
     * @typedef RPCImplCallback
     * @type {function}
     * @param {Error|null} error Error, if any, otherwise `null`
     * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error
     * @returns {undefined}
     */

    rpc.Service = service;
    }(rpc));

    var roots = {};

    (function (exports) {
    var protobuf = exports;

    /**
     * Build type, one of `"full"`, `"light"` or `"minimal"`.
     * @name build
     * @type {string}
     * @const
     */
    protobuf.build = "minimal";

    // Serialization
    protobuf.Writer       = writer;
    protobuf.BufferWriter = writer_buffer;
    protobuf.Reader       = reader;
    protobuf.BufferReader = reader_buffer;

    // Utility
    protobuf.util         = minimal$1;
    protobuf.rpc          = rpc;
    protobuf.roots        = roots;
    protobuf.configure    = configure;

    /* istanbul ignore next */
    /**
     * Reconfigures the library according to the environment.
     * @returns {undefined}
     */
    function configure() {
        protobuf.util._configure();
        protobuf.Writer._configure(protobuf.BufferWriter);
        protobuf.Reader._configure(protobuf.BufferReader);
    }

    // Set up buffer utility according to the environment
    configure();
    }(indexMinimal));

    var minimal = indexMinimal;

    /* eslint-disable */
    var globalThis$8 = (() => {
        if (typeof globalThis$8 !== "undefined")
            return globalThis$8;
        if (typeof self !== "undefined")
            return self;
        if (typeof window !== "undefined")
            return window;
        if (typeof global !== "undefined")
            return global;
        throw "Unable to locate global object";
    })();
    if (minimal.util.Long !== Long) {
        minimal.util.Long = Long;
        minimal.configure();
    }

    /* eslint-disable */
    var globalThis$7 = (() => {
        if (typeof globalThis$7 !== "undefined")
            return globalThis$7;
        if (typeof self !== "undefined")
            return self;
        if (typeof window !== "undefined")
            return window;
        if (typeof global !== "undefined")
            return global;
        throw "Unable to locate global object";
    })();
    if (minimal.util.Long !== Long) {
        minimal.util.Long = Long;
        minimal.configure();
    }

    /* eslint-disable */
    var globalThis$6 = (() => {
        if (typeof globalThis$6 !== "undefined")
            return globalThis$6;
        if (typeof self !== "undefined")
            return self;
        if (typeof window !== "undefined")
            return window;
        if (typeof global !== "undefined")
            return global;
        throw "Unable to locate global object";
    })();
    if (minimal.util.Long !== Long) {
        minimal.util.Long = Long;
        minimal.configure();
    }

    /* eslint-disable */
    var globalThis$5 = (() => {
        if (typeof globalThis$5 !== "undefined")
            return globalThis$5;
        if (typeof self !== "undefined")
            return self;
        if (typeof window !== "undefined")
            return window;
        if (typeof global !== "undefined")
            return global;
        throw "Unable to locate global object";
    })();
    if (minimal.util.Long !== Long) {
        minimal.util.Long = Long;
        minimal.configure();
    }

    /* eslint-disable */
    var globalThis$4 = (() => {
        if (typeof globalThis$4 !== "undefined")
            return globalThis$4;
        if (typeof self !== "undefined")
            return self;
        if (typeof window !== "undefined")
            return window;
        if (typeof global !== "undefined")
            return global;
        throw "Unable to locate global object";
    })();
    if (minimal.util.Long !== Long) {
        minimal.util.Long = Long;
        minimal.configure();
    }

    /* eslint-disable */
    /** Message content encoding structures */
    /**
     * Recognized compression algorithms
     * protolint:disable ENUM_FIELD_NAMES_ZERO_VALUE_END_WITH
     */
    var Compression;
    (function (Compression) {
        Compression[Compression["COMPRESSION_DEFLATE"] = 0] = "COMPRESSION_DEFLATE";
        Compression[Compression["COMPRESSION_GZIP"] = 1] = "COMPRESSION_GZIP";
        Compression[Compression["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(Compression || (Compression = {}));
    var globalThis$3 = (() => {
        if (typeof globalThis$3 !== "undefined")
            return globalThis$3;
        if (typeof self !== "undefined")
            return self;
        if (typeof window !== "undefined")
            return window;
        if (typeof global !== "undefined")
            return global;
        throw "Unable to locate global object";
    })();
    if (minimal.util.Long !== Long) {
        minimal.util.Long = Long;
        minimal.configure();
    }

    /* eslint-disable */
    if (minimal.util.Long !== Long) {
        minimal.util.Long = Long;
        minimal.configure();
    }

    /* eslint-disable */
    var globalThis$2 = (() => {
        if (typeof globalThis$2 !== "undefined")
            return globalThis$2;
        if (typeof self !== "undefined")
            return self;
        if (typeof window !== "undefined")
            return window;
        if (typeof global !== "undefined")
            return global;
        throw "Unable to locate global object";
    })();
    if (minimal.util.Long !== Long) {
        minimal.util.Long = Long;
        minimal.configure();
    }

    /* eslint-disable */
    if (minimal.util.Long !== Long) {
        minimal.util.Long = Long;
        minimal.configure();
    }

    /* eslint-disable */
    var globalThis$1 = (() => {
        if (typeof globalThis$1 !== "undefined")
            return globalThis$1;
        if (typeof self !== "undefined")
            return self;
        if (typeof window !== "undefined")
            return window;
        if (typeof global !== "undefined")
            return global;
        throw "Unable to locate global object";
    })();
    if (minimal.util.Long !== Long) {
        minimal.util.Long = Long;
        minimal.configure();
    }

    var CODECS = [new JSONCodec()];
    var t = "".concat(Math.random());
    var XmtpWorker = /** @class */ (function () {
        function XmtpWorker() {
            var _this = this;
            this.clients = {};
            this.allMessagesStreamStore = new AllMessageStreamStore();
            this.messageStreamStore = new MessageStreamStore();
            this.conversationStreamStore = new ConversationStreamStore();
            this.fetchClient = function (opts) { return __awaiter$6(_this, void 0, void 0, function () {
                var client;
                return __generator(this, function (_a) {
                    log("fetchClient for ".concat(t, " opts ").concat(JSON.stringify(opts)));
                    client = this.getTargetClient(opts);
                    if (client === null) {
                        warn("fetchClient :: no client for ".concat(JSON.stringify(opts)));
                        return [2 /*return*/, null];
                    }
                    else {
                        log("fetchClient :: got client address ".concat(client.address));
                        return [2 /*return*/, fromXmtpClient(client)];
                    }
                });
            }); };
            log("XmtpWorker :: constructor");
            this.uuid = "".concat(Math.random()).concat(Math.random());
        }
        XmtpWorker.prototype.createIdentity = function () {
            return __awaiter$6(this, void 0, void 0, function () {
                var wallet, keys;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            log('createIdentity');
                            wallet = Wallet.createRandom();
                            return [4 /*yield*/, umd.exports.Client.create(wallet, {
                                    env: 'dev',
                                    codecs: CODECS,
                                })];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, umd.exports.Client.create(wallet, {
                                    env: 'production',
                                    codecs: CODECS,
                                })];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, umd.exports.Client.getKeys(wallet)];
                        case 3:
                            keys = _a.sent();
                            log("createIdentity :: returning prod and dev created for address ".concat(wallet.address));
                            if (!isEthAddress(wallet.address)) {
                                err("createIdentity :: wallet.address is not an EthAddress: ".concat(wallet.address));
                                return [2 /*return*/, null];
                            }
                            else {
                                return [2 /*return*/, {
                                        address: wallet.address,
                                        uuid: keys,
                                    }];
                            }
                    }
                });
            });
        };
        XmtpWorker.prototype.startClient = function (wallet, opts) {
            var _a;
            return __awaiter$6(this, void 0, void 0, function () {
                var address, preexistingClient, client, error_1;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            log("startClient opts ".concat(JSON.stringify(opts)));
                            return [4 /*yield*/, (function () { return __awaiter$6(_this, void 0, void 0, function () {
                                    return __generator(this, function (_a) {
                                        if (isIdentityWallet(wallet)) {
                                            log("startClient :: wallet is an identity wallet");
                                            console.log('wallet uuid');
                                            console.log(wallet.uuid);
                                            return [2 /*return*/, wallet.address];
                                        }
                                        else {
                                            log("startClient :: wallet is a signer");
                                            log("startClient :: wallet type: ".concat(typeof wallet));
                                            return [2 /*return*/, wallet.getAddress()];
                                        }
                                    });
                                }); })()];
                        case 1:
                            address = _b.sent();
                            log("startClient address: ".concat(address));
                            _b.label = 2;
                        case 2:
                            _b.trys.push([2, 6, , 7]);
                            preexistingClient = this.clients[address];
                            if (!(preexistingClient !== undefined)) return [3 /*break*/, 3];
                            warn("startClient :: preexistingClient address ".concat(preexistingClient.client.address));
                            return [2 /*return*/, null];
                        case 3:
                            log("startClient :: starting client for address ".concat(address));
                            return [4 /*yield*/, (function () { return __awaiter$6(_this, void 0, void 0, function () {
                                    return __generator(this, function (_a) {
                                        if (isIdentityWallet(wallet)) {
                                            log("startClient :: wallet uuid");
                                            console.log(wallet.uuid);
                                            log("startClient :: creating from stored identity");
                                            return [2 /*return*/, umd.exports.Client.create(null, {
                                                    env: 'production',
                                                    privateKeyOverride: new Uint8Array(wallet.uuid),
                                                })];
                                        }
                                        else {
                                            log("startClient :: creating from signer");
                                            return [2 /*return*/, umd.exports.Client.create(wallet, __assign(__assign({}, opts), { codecs: CODECS }))];
                                        }
                                    });
                                }); })()];
                        case 4:
                            client = _b.sent();
                            log("startClient :: SUCCESS for ".concat(t, ", saving client to state for ").concat(address));
                            this.clients[address] = { client: client, env: (_a = opts === null || opts === void 0 ? void 0 : opts.env) !== null && _a !== void 0 ? _a : 'dev' };
                            return [2 /*return*/, fromXmtpClient(client, opts)];
                        case 5: return [3 /*break*/, 7];
                        case 6:
                            error_1 = _b.sent();
                            err("startClient :: error starting client for address ".concat(address, ": ").concat(error_1));
                            throw error_1;
                        case 7: return [2 /*return*/];
                    }
                });
            });
        };
        XmtpWorker.prototype.stopClient = function (opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var clientToStop;
                return __generator(this, function (_a) {
                    try {
                        log("stopClient opts ".concat(JSON.stringify(opts)));
                        clientToStop = this.getTargetClient(opts);
                        if (clientToStop === null) {
                            warn("stopClient :: no client found for opts ".concat(JSON.stringify(opts)));
                            return [2 /*return*/, null];
                        }
                        else {
                            delete this.clients[clientToStop.address];
                            log("stopClient :: stopped client for ".concat(clientToStop.address));
                            return [2 /*return*/, fromXmtpClient(clientToStop)];
                        }
                    }
                    catch (error) {
                        err("stopClient :: error stopping client for opts ".concat(JSON.stringify(opts), ": error: ").concat(error));
                        return [2 /*return*/, null];
                    }
                    return [2 /*return*/];
                });
            });
        };
        XmtpWorker.prototype.fetchMessages = function (conversation, opts) {
            var e_1, _a;
            var _b;
            return __awaiter$6(this, void 0, void 0, function () {
                var client, convo, messages, _c, _d, page, _i, page_1, msg, e_1_1, error_2;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0:
                            log("fetchMessages for conversation ".concat(conversation.peerAddress, " ").concat((_b = conversation.context) === null || _b === void 0 ? void 0 : _b.conversationId, " opts ").concat(JSON.stringify(opts)));
                            client = this.getTargetClient(opts);
                            if (!(client === null)) return [3 /*break*/, 1];
                            warn("fetchMessages :: no client for ".concat(JSON.stringify(opts)));
                            return [2 /*return*/, null];
                        case 1:
                            _e.trys.push([1, 15, , 16]);
                            log('fetchMessages :: got client, creating conversation');
                            return [4 /*yield*/, client.conversations.newConversation(conversation.peerAddress, conversation.context)];
                        case 2:
                            convo = _e.sent();
                            messages = [];
                            _e.label = 3;
                        case 3:
                            _e.trys.push([3, 8, 9, 14]);
                            _c = __asyncValues(convo.messagesPaginated({
                                pageSize: 25,
                            }));
                            _e.label = 4;
                        case 4: return [4 /*yield*/, _c.next()];
                        case 5:
                            if (!(_d = _e.sent(), !_d.done)) return [3 /*break*/, 7];
                            page = _d.value;
                            for (_i = 0, page_1 = page; _i < page_1.length; _i++) {
                                msg = page_1[_i];
                                messages.push(fromXmtpMessage(msg));
                            }
                            return [3 /*break*/, 7];
                        case 6: return [3 /*break*/, 4];
                        case 7: return [3 /*break*/, 14];
                        case 8:
                            e_1_1 = _e.sent();
                            e_1 = { error: e_1_1 };
                            return [3 /*break*/, 14];
                        case 9:
                            _e.trys.push([9, , 12, 13]);
                            if (!(_d && !_d.done && (_a = _c.return))) return [3 /*break*/, 11];
                            return [4 /*yield*/, _a.call(_c)];
                        case 10:
                            _e.sent();
                            _e.label = 11;
                        case 11: return [3 /*break*/, 13];
                        case 12:
                            if (e_1) throw e_1.error;
                            return [7 /*endfinally*/];
                        case 13: return [7 /*endfinally*/];
                        case 14:
                            log("fetchMessages :: returning ".concat(messages.length, " messages"));
                            return [2 /*return*/, messages];
                        case 15:
                            error_2 = _e.sent();
                            err("fetchMessages :: error fetching messages for conversation ".concat(JSON.stringify(conversation), " opts ").concat(JSON.stringify(opts), ": ").concat(error_2));
                            return [2 /*return*/, null];
                        case 16: return [2 /*return*/];
                    }
                });
            });
        };
        XmtpWorker.prototype.readValue = function (key, opts) {
            var e_2, _a;
            return __awaiter$6(this, void 0, void 0, function () {
                var client, convo, _b, _c, page, e_2_1;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0:
                            log("readValue key ".concat(key, " opts ").concat(JSON.stringify(opts)));
                            client = this.getTargetClient(opts);
                            if (!(client === null)) return [3 /*break*/, 1];
                            warn("readValue :: no client for ".concat(JSON.stringify(opts)));
                            return [2 /*return*/, null];
                        case 1: return [4 /*yield*/, client.conversations.newConversation(client.address, {
                                conversationId: key,
                                metadata: {},
                            })];
                        case 2:
                            convo = _d.sent();
                            _d.label = 3;
                        case 3:
                            _d.trys.push([3, 8, 9, 14]);
                            _b = __asyncValues(convo.messagesPaginated({
                                pageSize: 1,
                                direction: SortDirection.SORT_DIRECTION_DESCENDING,
                            }));
                            _d.label = 4;
                        case 4: return [4 /*yield*/, _b.next()];
                        case 5:
                            if (!(_c = _d.sent(), !_c.done)) return [3 /*break*/, 7];
                            page = _c.value;
                            log("readValue :: got a message to use for value: content: ".concat(page[0].content));
                            return [2 /*return*/, fromXmtpMessage(page[0]).content];
                        case 6: return [3 /*break*/, 4];
                        case 7: return [3 /*break*/, 14];
                        case 8:
                            e_2_1 = _d.sent();
                            e_2 = { error: e_2_1 };
                            return [3 /*break*/, 14];
                        case 9:
                            _d.trys.push([9, , 12, 13]);
                            if (!(_c && !_c.done && (_a = _b.return))) return [3 /*break*/, 11];
                            return [4 /*yield*/, _a.call(_b)];
                        case 10:
                            _d.sent();
                            _d.label = 11;
                        case 11: return [3 /*break*/, 13];
                        case 12:
                            if (e_2) throw e_2.error;
                            return [7 /*endfinally*/];
                        case 13: return [7 /*endfinally*/];
                        case 14: return [2 /*return*/];
                    }
                });
            });
        };
        XmtpWorker.prototype.writeValue = function (key, value, opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var client, error_3;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            log("writeValue key ".concat(key, " opts ").concat(JSON.stringify(opts)));
                            client = this.getTargetClient(opts);
                            if (!(client === null)) return [3 /*break*/, 1];
                            warn("writeValue :: no client for ".concat(JSON.stringify(opts)));
                            return [2 /*return*/, null];
                        case 1:
                            if (!isEthAddress(client.address)) {
                                throw new Error('writeValue :: getTargetClient returned a client with a non-EthAddress address');
                            }
                            _a.label = 2;
                        case 2:
                            _a.trys.push([2, 4, , 5]);
                            log("writeValue :: got client, writing value ".concat(JSON.stringify(value)));
                            return [4 /*yield*/, this.sendMessage({
                                    peerAddress: client.address,
                                    context: {
                                        conversationId: key,
                                        metadata: {},
                                    },
                                }, value, __assign(__assign({}, opts), { contentType: JSON_ID }))];
                        case 3: return [2 /*return*/, _a.sent()];
                        case 4:
                            error_3 = _a.sent();
                            err("writeValue :: error writing value: error: ".concat(error_3, ": value: ").concat(value));
                            return [2 /*return*/, null];
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
        XmtpWorker.prototype.fetchConversations = function (opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var client, conversations;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            log("fetchConversations opts ".concat(JSON.stringify(opts)));
                            client = this.getTargetClient(opts);
                            if (!(client === null)) return [3 /*break*/, 1];
                            warn("fetchConversations :: no client for ".concat(JSON.stringify(opts)));
                            return [2 /*return*/, null];
                        case 1: return [4 /*yield*/, client.conversations.list()];
                        case 2:
                            conversations = _a.sent();
                            log("fetchConversations :: got ".concat(conversations.length, " conversations"));
                            return [2 /*return*/, conversations.map(fromXmtpConversation)];
                    }
                });
            });
        };
        XmtpWorker.prototype.fetchPeerOnNetwork = function (peerAddress, opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var client;
                return __generator(this, function (_a) {
                    log("fetchPeerOnNetwork peerAddress ".concat(peerAddress, " opts ").concat(opts));
                    client = this.getTargetClient(opts);
                    if (client === null) {
                        warn("fetchPeerOnNetwork :: no client for ".concat(JSON.stringify(opts)));
                        throw new Error('fetchPeerOnNetwork without a client!');
                    }
                    else {
                        return [2 /*return*/, client.canMessage(peerAddress)];
                    }
                });
            });
        };
        XmtpWorker.prototype.sendMessage = function (conversation, message, opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var client, convo, sent, error_4;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            log("sendMessage conversation ".concat(JSON.stringify(conversation), " opts ").concat(JSON.stringify(opts)));
                            client = this.getTargetClient(opts);
                            if (!(client === null)) return [3 /*break*/, 1];
                            warn("sendMessage :: no client for ".concat(JSON.stringify(opts)));
                            return [2 /*return*/, null];
                        case 1: return [4 /*yield*/, client.conversations.newConversation(conversation.peerAddress, conversation.context)];
                        case 2:
                            convo = _a.sent();
                            _a.label = 3;
                        case 3:
                            _a.trys.push([3, 5, , 6]);
                            log("sendMessage :: created conversation, sending message");
                            return [4 /*yield*/, convo.send(message, toXmtpSendOptions(opts))];
                        case 4:
                            sent = _a.sent();
                            log("sendMessage :: sent message, ".concat(JSON.stringify({
                                conversation: fromXmtpConversation(sent.conversation),
                                recipientAddress: sent.recipientAddress || 'no recipient',
                                senderaddress: sent.senderAddress || 'no sender',
                                id: sent.id,
                                content: sent.content,
                            })));
                            return [2 /*return*/, fromXmtpMessage(sent)];
                        case 5:
                            error_4 = _a.sent();
                            err("sendMessage :: error sending message: ".concat(error_4, " opts: ").concat(JSON.stringify(opts)));
                            return [2 /*return*/, null];
                        case 6: return [2 /*return*/];
                    }
                });
            });
        };
        XmtpWorker.prototype.startMessageStream = function (conversation, opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var client, key, preexisting, messageStream, error_5;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            log("startMessageStream conversation ".concat(JSON.stringify(conversation)));
                            client = this.getTargetClient(opts);
                            if (!(client === null)) return [3 /*break*/, 1];
                            warn("startMessageStream :: no client for ".concat(JSON.stringify(opts)));
                            return [2 /*return*/, null];
                        case 1:
                            key = this.messageStreamStore.buildKey(client, conversation);
                            preexisting = this.messageStreamStore.read(key);
                            if (!(preexisting !== null)) return [3 /*break*/, 2];
                            warn("startMessageStream :: stream already exists for ".concat(key));
                            return [2 /*return*/, true];
                        case 2:
                            _a.trys.push([2, 4, , 5]);
                            log("startMessageStream :: creating stream for ".concat(key));
                            return [4 /*yield*/, MessageStream.create(client, conversation)];
                        case 3:
                            messageStream = _a.sent();
                            this.messageStreamStore.write(key, messageStream);
                            return [2 /*return*/, true];
                        case 4:
                            error_5 = _a.sent();
                            err("startMessageStream :: error starting stream for key ".concat(key, ": error: ").concat(error_5));
                            return [2 /*return*/, false];
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
        XmtpWorker.prototype.addListenerToMessageStream = function (conversation, handler, opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var client, key, preexisting;
                return __generator(this, function (_a) {
                    log("addListenerToMessageStream conversation ".concat(JSON.stringify(conversation)));
                    client = this.getTargetClient(opts);
                    if (client === null) {
                        warn("addListenerToMessageStream :: no client for ".concat(JSON.stringify(opts)));
                        return [2 /*return*/, null];
                    }
                    else {
                        key = this.messageStreamStore.buildKey(client, conversation);
                        preexisting = this.messageStreamStore.read(key);
                        if (preexisting === null) {
                            warn("addListenerToMessageStream :: no stream for ".concat(key));
                            return [2 /*return*/, null];
                        }
                        else {
                            log("addListenerToMessageStream :: adding listener to ".concat(key));
                            return [2 /*return*/, preexisting.addHandler(handler)];
                        }
                    }
                });
            });
        };
        XmtpWorker.prototype.startAllMessagesStream = function (opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var client, key, preexisting, messageStream, error_6;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            log("startAllMessagesStream opts ".concat(JSON.stringify(opts)));
                            client = this.getTargetClient(opts);
                            if (!(client === null)) return [3 /*break*/, 1];
                            warn("startAllMessagesStream :: no client for ".concat(JSON.stringify(opts)));
                            return [2 /*return*/, null];
                        case 1:
                            key = this.allMessagesStreamStore.buildKey(client);
                            preexisting = this.messageStreamStore.read(key);
                            if (!(preexisting !== null)) return [3 /*break*/, 2];
                            warn("startAllMessagesStream :: stream already exists for ".concat(key));
                            return [2 /*return*/, true];
                        case 2:
                            _a.trys.push([2, 4, , 5]);
                            log("startAllMessagesStream :: creating stream for ".concat(key));
                            return [4 /*yield*/, AllMessagesStream.create(client)];
                        case 3:
                            messageStream = _a.sent();
                            this.allMessagesStreamStore.write(key, messageStream);
                            return [2 /*return*/, true];
                        case 4:
                            error_6 = _a.sent();
                            err("startAllMessagesStream :: error starting stream for key ".concat(key, ": error: ").concat(error_6));
                            return [2 /*return*/, false];
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
        XmtpWorker.prototype.addListenerToAllMessagesStream = function (handler, opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var client, key, preexisting;
                return __generator(this, function (_a) {
                    log("addListenerToAllMessagesStream conversation ".concat(JSON.stringify(opts)));
                    client = this.getTargetClient(opts);
                    if (client === null) {
                        warn("addListenerToAllMessagesStream :: no client for ".concat(JSON.stringify(opts)));
                        return [2 /*return*/, null];
                    }
                    else {
                        key = this.allMessagesStreamStore.buildKey(client);
                        preexisting = this.allMessagesStreamStore.read(key);
                        if (preexisting === null) {
                            warn("addListenerToAllMessagesStream :: no stream for ".concat(key));
                            return [2 /*return*/, null];
                        }
                        else {
                            log("addListenerToAllMessagesStream :: adding listener to ".concat(key));
                            return [2 /*return*/, preexisting.addHandler(handler)];
                        }
                    }
                });
            });
        };
        XmtpWorker.prototype.startConversationStream = function (opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var client, key, preexisting, conversationStream, error_7;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            client = this.getTargetClient(opts);
                            if (!(client === null)) return [3 /*break*/, 1];
                            return [2 /*return*/, null];
                        case 1:
                            key = this.conversationStreamStore.buildKey(client);
                            preexisting = this.messageStreamStore.read(key);
                            if (!(preexisting !== null)) return [3 /*break*/, 2];
                            return [2 /*return*/, true];
                        case 2:
                            _a.trys.push([2, 4, , 5]);
                            return [4 /*yield*/, ConversationStream.create(client)];
                        case 3:
                            conversationStream = _a.sent();
                            this.conversationStreamStore.write(key, conversationStream);
                            return [2 /*return*/, true];
                        case 4:
                            error_7 = _a.sent();
                            err("startConversationStream :: error starting stream: ".concat(error_7));
                            return [2 /*return*/, false];
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
        XmtpWorker.prototype.addListenerToConversationStream = function (handler, opts) {
            return __awaiter$6(this, void 0, void 0, function () {
                var client, key, preexisting;
                return __generator(this, function (_a) {
                    client = this.getTargetClient(opts);
                    if (client === null) {
                        return [2 /*return*/, null];
                    }
                    else {
                        key = this.conversationStreamStore.buildKey(client);
                        preexisting = this.conversationStreamStore.read(key);
                        if (preexisting === null) {
                            return [2 /*return*/, null];
                        }
                        else {
                            return [2 /*return*/, preexisting.addHandler(handler)];
                        }
                    }
                });
            });
        };
        XmtpWorker.prototype.getTargetClient = function (opts) {
            log("getTargetClient for ".concat(this.uuid, " :: called with opts ").concat(JSON.stringify(opts)));
            console.log("getTargetClient :: this.clients", this.clients);
            var cached = this.clients[opts.clientAddress];
            if (cached === undefined || cached === null) {
                log("getTargetClient :: no cached client for ".concat(JSON.stringify(opts)));
                return null;
            }
            else {
                log("getTargetClient :: found a cached client for ".concat(JSON.stringify(opts)));
                return cached.client;
            }
        };
        return XmtpWorker;
    }());
    function log(message) {
        console.log("XmtpWorker :: %c".concat(message), 'font-style: italic');
    }
    function warn(message) {
        console.log("XmtpWorker :: %c".concat(message), 'font-style: italic, color: yellow');
    }
    function err(message) {
        console.log("XmtpWorker :: %c".concat(message), 'font-style: italic, color: red');
    }
    /* ****************************************************************************
     *
     *
     *  All Messages Stream Helper Classes
     *
     *
     * ****************************************************************************/
    var AllMessageStreamStore = /** @class */ (function () {
        function AllMessageStreamStore() {
            this.streams = {};
        }
        AllMessageStreamStore.prototype.read = function (key) {
            return this.streams[key] || null;
        };
        AllMessageStreamStore.prototype.write = function (key, messageStream) {
            if (this.streams[key] !== undefined) {
                return null;
            }
            else {
                this.streams[key] = messageStream;
                return key;
            }
        };
        AllMessageStreamStore.prototype.buildKey = function (client) {
            return "".concat(client.address, "-all-messages");
        };
        return AllMessageStreamStore;
    }());
    var AllMessagesStream = /** @class */ (function () {
        function AllMessagesStream(clientAddress, stream) {
            this.clientAddress = clientAddress;
            this.stream = stream;
            this.handlers = {};
            this.start();
        }
        AllMessagesStream.create = function (client) {
            return __awaiter$6(this, void 0, void 0, function () {
                var stream;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!!isEthAddress(client.address)) return [3 /*break*/, 1];
                            throw new Error('client.address is not an EthAddress');
                        case 1: return [4 /*yield*/, client.conversations.streamAllMessages()];
                        case 2:
                            stream = _a.sent();
                            return [2 /*return*/, new AllMessagesStream(client.address, stream)];
                    }
                });
            });
        };
        AllMessagesStream.prototype.start = function () {
            var e_3, _a;
            return __awaiter$6(this, void 0, void 0, function () {
                var _b, _c, message, _i, _d, handler, e_3_1;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0:
                            _e.trys.push([0, 5, 6, 11]);
                            _b = __asyncValues(this.stream);
                            _e.label = 1;
                        case 1: return [4 /*yield*/, _b.next()];
                        case 2:
                            if (!(_c = _e.sent(), !_c.done)) return [3 /*break*/, 4];
                            message = _c.value;
                            for (_i = 0, _d = Object.values(this.handlers); _i < _d.length; _i++) {
                                handler = _d[_i];
                                handler(fromXmtpMessage(message));
                            }
                            _e.label = 3;
                        case 3: return [3 /*break*/, 1];
                        case 4: return [3 /*break*/, 11];
                        case 5:
                            e_3_1 = _e.sent();
                            e_3 = { error: e_3_1 };
                            return [3 /*break*/, 11];
                        case 6:
                            _e.trys.push([6, , 9, 10]);
                            if (!(_c && !_c.done && (_a = _b.return))) return [3 /*break*/, 8];
                            return [4 /*yield*/, _a.call(_b)];
                        case 7:
                            _e.sent();
                            _e.label = 8;
                        case 8: return [3 /*break*/, 10];
                        case 9:
                            if (e_3) throw e_3.error;
                            return [7 /*endfinally*/];
                        case 10: return [7 /*endfinally*/];
                        case 11: return [2 /*return*/];
                    }
                });
            });
        };
        AllMessagesStream.prototype.addHandler = function (handler) {
            var key = this.buildKey();
            this.handlers[key] = handler;
            return key;
        };
        AllMessagesStream.prototype.removeHandler = function (key) {
            if (this.handlers[key] === undefined) {
                return null;
            }
            else {
                delete this.handlers[key];
                return key;
            }
        };
        AllMessagesStream.prototype.buildKey = function () {
            return "".concat(Math.random()).concat(Math.random()).concat(Math.random()).concat(Math.random());
        };
        return AllMessagesStream;
    }());
    /* ****************************************************************************
     *
     *
     *  Message Stream Helper Classes
     *
     *
     * ****************************************************************************/
    var MessageStreamStore = /** @class */ (function () {
        function MessageStreamStore() {
            this.streams = {};
        }
        MessageStreamStore.prototype.read = function (key) {
            return this.streams[key] || null;
        };
        MessageStreamStore.prototype.write = function (key, messageStream) {
            if (this.streams[key] !== undefined) {
                return null;
            }
            else {
                this.streams[key] = messageStream;
                return key;
            }
        };
        MessageStreamStore.prototype.buildKey = function (client, conversation) {
            var _a;
            return "".concat(client.address, "-").concat(conversation.peerAddress, "-").concat((_a = conversation.context) === null || _a === void 0 ? void 0 : _a.conversationId);
        };
        return MessageStreamStore;
    }());
    var MessageStream = /** @class */ (function () {
        function MessageStream(clientAddress, conversation, stream) {
            this.clientAddress = clientAddress;
            this.conversation = conversation;
            this.stream = stream;
            this.handlers = {};
            this.start();
        }
        MessageStream.create = function (client, conversation) {
            return __awaiter$6(this, void 0, void 0, function () {
                var convo, stream;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!!isEthAddress(client.address)) return [3 /*break*/, 1];
                            throw new Error('client.address is not an EthAddress');
                        case 1: return [4 /*yield*/, client.conversations.newConversation(conversation.peerAddress, conversation.context)];
                        case 2:
                            convo = _a.sent();
                            return [4 /*yield*/, convo.streamMessages()];
                        case 3:
                            stream = _a.sent();
                            return [2 /*return*/, new MessageStream(client.address, conversation, stream)];
                    }
                });
            });
        };
        MessageStream.prototype.start = function () {
            var e_4, _a;
            return __awaiter$6(this, void 0, void 0, function () {
                var _b, _c, message, _i, _d, handler, e_4_1;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0:
                            _e.trys.push([0, 5, 6, 11]);
                            _b = __asyncValues(this.stream);
                            _e.label = 1;
                        case 1: return [4 /*yield*/, _b.next()];
                        case 2:
                            if (!(_c = _e.sent(), !_c.done)) return [3 /*break*/, 4];
                            message = _c.value;
                            for (_i = 0, _d = Object.values(this.handlers); _i < _d.length; _i++) {
                                handler = _d[_i];
                                handler(fromXmtpMessage(message));
                            }
                            _e.label = 3;
                        case 3: return [3 /*break*/, 1];
                        case 4: return [3 /*break*/, 11];
                        case 5:
                            e_4_1 = _e.sent();
                            e_4 = { error: e_4_1 };
                            return [3 /*break*/, 11];
                        case 6:
                            _e.trys.push([6, , 9, 10]);
                            if (!(_c && !_c.done && (_a = _b.return))) return [3 /*break*/, 8];
                            return [4 /*yield*/, _a.call(_b)];
                        case 7:
                            _e.sent();
                            _e.label = 8;
                        case 8: return [3 /*break*/, 10];
                        case 9:
                            if (e_4) throw e_4.error;
                            return [7 /*endfinally*/];
                        case 10: return [7 /*endfinally*/];
                        case 11: return [2 /*return*/];
                    }
                });
            });
        };
        MessageStream.prototype.addHandler = function (handler) {
            var key = this.buildKey();
            this.handlers[key] = handler;
            return key;
        };
        MessageStream.prototype.removeHandler = function (key) {
            if (this.handlers[key] === undefined) {
                return null;
            }
            else {
                delete this.handlers[key];
                return key;
            }
        };
        MessageStream.prototype.buildKey = function () {
            return "".concat(Math.random()).concat(Math.random()).concat(Math.random()).concat(Math.random());
        };
        return MessageStream;
    }());
    /* ****************************************************************************
     *
     *
     *  Conversation Stream Helper Classes
     *
     *
     * ****************************************************************************/
    var ConversationStreamStore = /** @class */ (function () {
        function ConversationStreamStore() {
            this.streams = {};
        }
        ConversationStreamStore.prototype.read = function (key) {
            return this.streams[key] || null;
        };
        ConversationStreamStore.prototype.write = function (key, messageStream) {
            if (this.streams[key] !== undefined) {
                return null;
            }
            else {
                this.streams[key] = messageStream;
                return key;
            }
        };
        ConversationStreamStore.prototype.buildKey = function (client) {
            return client.address;
        };
        return ConversationStreamStore;
    }());
    var ConversationStream = /** @class */ (function () {
        function ConversationStream(stream) {
            this.stream = stream;
            this.handlers = {};
            this.start();
        }
        ConversationStream.create = function (client) {
            return __awaiter$6(this, void 0, void 0, function () {
                var stream;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!!isEthAddress(client.address)) return [3 /*break*/, 1];
                            throw new Error('client.address is not an EthAddress');
                        case 1: return [4 /*yield*/, client.conversations.stream()];
                        case 2:
                            stream = _a.sent();
                            return [2 /*return*/, new ConversationStream(stream)];
                    }
                });
            });
        };
        ConversationStream.prototype.start = function () {
            var e_5, _a;
            return __awaiter$6(this, void 0, void 0, function () {
                var _b, _c, convo, _i, _d, handler, e_5_1;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0:
                            _e.trys.push([0, 5, 6, 11]);
                            _b = __asyncValues(this.stream);
                            _e.label = 1;
                        case 1: return [4 /*yield*/, _b.next()];
                        case 2:
                            if (!(_c = _e.sent(), !_c.done)) return [3 /*break*/, 4];
                            convo = _c.value;
                            for (_i = 0, _d = Object.values(this.handlers); _i < _d.length; _i++) {
                                handler = _d[_i];
                                handler(fromXmtpConversation(convo));
                            }
                            _e.label = 3;
                        case 3: return [3 /*break*/, 1];
                        case 4: return [3 /*break*/, 11];
                        case 5:
                            e_5_1 = _e.sent();
                            e_5 = { error: e_5_1 };
                            return [3 /*break*/, 11];
                        case 6:
                            _e.trys.push([6, , 9, 10]);
                            if (!(_c && !_c.done && (_a = _b.return))) return [3 /*break*/, 8];
                            return [4 /*yield*/, _a.call(_b)];
                        case 7:
                            _e.sent();
                            _e.label = 8;
                        case 8: return [3 /*break*/, 10];
                        case 9:
                            if (e_5) throw e_5.error;
                            return [7 /*endfinally*/];
                        case 10: return [7 /*endfinally*/];
                        case 11: return [2 /*return*/];
                    }
                });
            });
        };
        ConversationStream.prototype.addHandler = function (handler) {
            var key = this.buildKey();
            this.handlers[key] = handler;
            return key;
        };
        ConversationStream.prototype.removeHandler = function (key) {
            if (this.handlers[key] === undefined) {
                return null;
            }
            else {
                delete this.handlers[key];
                return key;
            }
        };
        ConversationStream.prototype.buildKey = function () {
            return "".concat(Math.random()).concat(Math.random()).concat(Math.random()).concat(Math.random());
        };
        return ConversationStream;
    }());
    /* ****************************************************************************
     *
     *
     *  THE WHOLE POINT OF THIS TOWERING PILE
     *
     *
     * ****************************************************************************/
    expose(XmtpWorker);

}));
//# sourceMappingURL=worker.js.map
